%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: coworking center 5.eps
%%Creator: Adobe Illustrator(R) 17.0
%%For: Антон
%%CreationDate: 2/9/2015
%%BoundingBox: 0 0 1151 880
%%HiResBoundingBox: 0 0 1150.7499 880
%%CropBox: 0 0 1150.7499 880
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 17.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 17.0.0 x256 R agm 4.7700 ct 5.3328%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.5-c014 79.151739, 2013/04/03-12:12:15        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">coworking</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2015-02-09T08:19:17+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2015-02-09T08:19:17+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2015-02-09T08:19:17+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>196</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAxAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9S4q7FXYq7FXYq7FXEhQ&#xA;STQDck4k0qFh1BJnULFKI3rwmK0Q0Fa1rUfSMohnEjsDR69FWjVYDRuEggZuIuCvwE1p41p70yI1&#xA;UedHh7+irpNSt44Z5mDcYH9NxQVJ26b++SlqIiJJ/hNKvlvreJ2VyQFj9Vn7ca0H0nJSzRB37rVZ&#xA;FqEbypG8ckLSCsfqAANTwoTv88jHOCQCCL71WDVYdy0UqxKxQzFRwqDx6gk9cj+ZHca7+iqj6hbp&#xA;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&#xA;8GQVIjzSOSbZBLsVdirsVUJ7yGHYnk38q4CVSHX5dT1DSr20tWWGSeCWOLkSF5OhVebCrUqd6ZES&#xA;3CClflrQ59J8u6ZpcjBpbK1hglZCeJeOMKxWtDQsCcckuKRPeVAoJl6EnifvyFJd6EnifvxpWO+e&#xA;fKd75g0u1t7WVYbm1vbe8jlZmQr6L1Yo6q5V+JPE065dp8vBK/JjIWyq01/WreEWt5p82pPTiLmz&#xA;MK+oo2rLFNJFwbx4lh326Znx1cJDfZlatcwibT3uTbSWbkf7yymMuDypv6TypuN9mzVdpRiYS4HK&#xA;0UgMsSUt12882x/U/wDDEllGiKwu47+ORlY/DwKGIq381a5laTPHHGiD0cfIfUa71bT9e85IvG/s&#xA;bCRjSr29xPGKf6jwyf8AEsyvzsO4sUcb3UbkhZbCGONvtyidmdaCo4r6S132+0MqzZ4TiaG6u9DM&#xA;Kld6HtjSqiaeXNSoHucmJSqr2VFR6fbKQWXm3vuPuywZJAVeyonIK7FXYq7FXYqlusOB9X7lZVYg&#xA;bmgzB1oJ4a/nBztFIDjv+aVk2rSqS/oPJEoJ9GIr6jnsAXZFH/BDM7HIcXq5OChZfM2qywGCw0qW&#xA;1lP2Zb1oPRSv7XC3lldyOvH4a/zDNgdVjiNltgvlT8vr/T7/AFS+1y7XUbq8vzexOtQrEIAksqkD&#xA;94DyISpRP2fbGz6szFDYMIxpmXoSeJ+/MKmbvQk8T9+NKsuNKnvbWe1Wp9aN4zuQPjUjc/Thjdqj&#xA;/JOj3+i+UdI0i/eOS7sLWO2leFmaMmJeI4lgrUoPDMjJISkSERFBO8gl2KtE07VxVRkWZ9vsjwGB&#xA;VH6n7YKV31P2xpXfU/bGld9T9saV31P2xpVy2K9W6eAxpVYJ6a8Ykp74VUXtnc1epOClaFl47Y0q&#xA;otoi9Bv44aVd6GNK4QDGlXrEi9Bv440q/CrsVdirsVdiriaYqoyes2w+Ee3XAqh9TJ6jBSu+p+2N&#xA;K76n7Y0rvqftjSu+pe2NKqJYxDdt/bthpUQqqooooPAYVbxV2KuxVd8Hvktld8Hvjsrvg98dla+H&#xA;3wbK74ffHZXfD747K38Hvh2V3we+Oyu+D3x2V3we+Oyu+D3x2V3we+Oyu+D3x2V3we+Oyu+D3x2V&#xA;3we+Oyu+D3x2V3we+Oyu+D3x2V3we+Oyu+D3x2V3we+Oyu+D3x2V3we+Oyu+D3x2V3we+Oyu+D3x&#xA;2V3we+Oyu+D3x2V3we+Oyu+D3x2V3we+Oyv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:13abe37d-a0d7-b249-a5d1-dad151c53d55</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:13abe37d-a0d7-b249-a5d1-dad151c53d55</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:a0e2b502-62a8-b146-bcf7-ecc1acbdb69e</stRef:instanceID>
            <stRef:documentID>xmp.did:a0e2b502-62a8-b146-bcf7-ecc1acbdb69e</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ea3a206a-cb7b-a343-b301-ed43e6ba1134</stEvt:instanceID>
                  <stEvt:when>2015-01-21T11:01:05+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2014 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:13abe37d-a0d7-b249-a5d1-dad151c53d55</stEvt:instanceID>
                  <stEvt:when>2015-02-09T08:19:17+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1150.000000</stDim:w>
            <stDim:h>880.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>30</xmpG:red>
                           <xmpG:green>15</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -880 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 880 li
1150.75 880 li
1150.75 0 li
cp
clp
1150 880 mo
0 880 li
0 0 li
1150 0 li
1150 880 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.988235 .988235 .988235 rgb
f
1101.27 379.032 mo
1098.13 379.217 1095.61 374.388 1093.32 372.71 cv
1091.42 371.312 1087.59 372.453 1085.31 372.408 cv
1083.56 367.065 1082.39 361.515 1082.02 355.898 cv
1081.45 347.323 1081.91 339.141 1088.16 333.423 cv
1093.89 328.182 1091.34 319.616 1090.81 312.939 cv
1091.65 320.771 1112.65 332.328 1109.13 341.849 cv
1105.9 350.607 1108.96 373.174 1101.27 379.032 cv
1100.7 379.066 1105.08 376.123 1101.27 379.032 cv
cp
1092.44 383.3 mo
1091.46 384.319 1090.84 384.443 1090.59 383.671 cv
1090.77 383.627 1092.24 383.433 1092.44 383.3 cv
1092.32 383.375 1092.48 383.277 1092.44 383.3 cv
cp
1088.86 380.954 mo
1087.58 379.292 1090.22 380.141 1091.63 379.701 cv
1090.71 380.119 1089.78 380.536 1088.86 380.954 cv
1088.72 380.774 1089.71 380.614 1088.86 380.954 cv
cp
1086.81 376.558 mo
1086.05 375.225 1086.92 375.042 1089.42 376.011 cv
1088.55 376.193 1087.68 376.376 1086.81 376.558 cv
1086.72 376.342 1087.77 376.292 1086.81 376.558 cv
cp
1081.81 488.93 mo
1081.41 499.291 1072.94 508.166 1070.69 518.249 cv
1067.76 531.427 1067.95 545.008 1065.88 558.301 cv
1064.89 564.932 1062.36 567.202 1060.63 573.373 cv
1058.81 568.57 1060.4 560.162 1060.65 554.685 cv
1061.37 539.468 1062.08 524.25 1062.79 509.033 cv
1063.16 500.948 1063.75 492.882 1064.3 484.806 cv
1064.75 478.314 1065.19 471.823 1065.64 465.331 cv
1065.86 462.086 1072.15 466.11 1073.53 462.156 cv
1078.18 464.547 1082.07 482.157 1081.81 488.93 cv
cp
1067.03 444.967 mo
1068.6 445.07 1069.99 444.471 1071.21 443.171 cv
1071.73 445.922 1072.29 448.662 1072.89 451.4 cv
1071.32 451.865 1068.18 451.808 1066.59 451.4 cv
1066.73 449.426 1066.43 446.84 1067.03 444.967 cv
cp
993.564 451.4 mo
995.307 448.807 1019.14 451.38 1022.91 451.38 cv
1029.15 451.38 1026.07 444.967 1031.61 444.967 cv
1037.26 444.967 1041.86 443.72 1040.63 451.4 cv
1024.94 451.4 1009.25 451.4 993.564 451.4 cv
cp
995.17 448.836 mo
998.094 449.218 994.107 450.657 995.17 448.836 cv
995.589 448.891 995.011 449.109 995.17 448.836 cv
cp
985.424 473.162 mo
979.581 471.307 975.535 473.363 975.833 466.331 cv
980.645 464.229 979.629 464.147 984.055 464.147 cv
986.8 464.147 985.424 470.755 985.424 473.162 cv
cp
965.05 549.619 mo
963.805 553.528 961.324 554.307 962.894 558.172 cv
955.811 556.505 956.508 557.746 956.508 550.453 cv
956.508 545.305 956.026 539.903 956.508 534.774 cv
960.167 532.956 958.254 522.852 958.254 519.882 cv
958.254 509.518 957.178 510.663 968.155 509.829 cv
967.12 523.092 966.085 536.356 965.05 549.619 cv
cp
948.9 557.178 mo
947.161 557.414 945.422 557.649 943.684 557.885 cv
942.079 541.926 940.474 525.966 938.869 510.007 cv
947.192 510.483 947.154 509.062 947.154 516.976 cv
947.154 521.972 947.154 526.968 947.154 531.963 cv
947.154 539.222 948.9 548.94 948.9 557.178 cv
cp
729.56 451.4 mo
732.856 451.39 736.194 451.397 739.506 451.4 cv
736.191 451.4 732.875 451.4 729.56 451.4 cv
cp
730.678 588.424 mo
722.028 579.112 723.602 564.651 722.273 552.367 cv
725.074 564.386 727.876 576.405 730.678 588.424 cv
cp
720.159 573.912 mo
720.654 573.199 717.045 567.545 716.369 566.377 cv
715.451 564.793 718.576 559.093 719.203 557.299 cv
719.918 563.588 720.633 569.876 721.348 576.164 cv
720.951 575.413 720.555 574.662 720.159 573.912 cv
720.161 573.908 720.544 574.686 720.159 573.912 cv
cp
706.843 508.715 mo
700.335 508.715 690.249 512.053 690.249 504.482 cv
690.249 501.395 704.728 503.001 708.033 503.001 cv
707.664 504.769 707.669 507.128 706.843 508.715 cv
cp
701.174 535.946 mo
699.292 532.329 697.472 528.681 695.735 524.992 cv
698.308 524.992 700.881 524.992 703.455 524.992 cv
702.694 528.643 701.934 532.295 701.174 535.946 cv
cp
648.869 400.352 mo
641.464 405.676 640.045 413.657 635.083 420.622 cv
632.963 423.521 631.082 426.568 629.439 429.761 cv
625.081 429.44 620.696 430.678 616.521 431.719 cv
616.314 430.451 617.912 425.872 617.161 427.263 cv
622.213 427.111 622.236 418.834 618.02 421.28 cv
617.847 421.487 619.882 418.008 619.882 418.827 cv
619.882 417.854 613.607 412.122 612.296 412.122 cv
609.926 408.367 609.456 399.791 607.414 394.782 cv
604.415 389.733 600.655 382.619 599.796 375.301 cv
599.069 369.113 599.967 362.834 601.878 356.934 cv
602.687 355.932 607.75 355.379 609.457 353.527 cv
616.196 346.217 610.184 337.938 609.408 329.851 cv
608.741 322.906 628.275 337.317 630.012 338.259 cv
641.396 344.432 641.414 351.763 645.542 363.795 cv
648.026 371.037 650.741 378.232 654.236 385.055 cv
656.115 388.721 650.612 396.563 648.869 400.352 cv
643.434 404.26 651.384 394.887 648.869 400.352 cv
cp
597.074 451.4 mo
598.017 449.686 598.959 447.971 599.902 446.256 cv
600.034 452.698 614.318 452.697 614.438 446.234 cv
624.151 449.773 632.23 450.83 642.051 451.4 cv
627.059 451.4 612.067 451.4 597.074 451.4 cv
cp
568.453 576.715 mo
567.482 583.114 558.203 585.352 555.587 590.336 cv
553.548 582.577 550.212 575.222 550.474 566.881 cv
550.791 556.803 559.084 542.277 563.154 532.845 cv
564.644 545.908 570.423 563.773 568.453 576.715 cv
568.407 577.02 568.748 574.781 568.453 576.715 cv
cp
556.585 311.301 mo
557.971 306.771 562.891 302.11 565.862 308.577 cv
562.698 309.239 559.606 310.147 556.585 311.301 cv
556.696 310.938 560.099 309.949 556.585 311.301 cv
cp
1121.82 338.886 mo
1117.62 329.241 1113.04 318.73 1106.27 310.594 cv
1109.57 307.515 1095.38 291.451 1093.77 294.693 cv
1089.77 291.976 1094.43 282.689 1095.34 276.5 cv
1096.86 266.154 1096.37 255.397 1093.68 245.28 cv
1090.08 231.752 1080.53 214.408 1064.4 214.408 cv
1048.28 214.408 1038.73 231.752 1035.13 245.28 cv
1032.58 254.896 1032.01 265.079 1033.26 274.94 cv
1033.84 279.578 1034.85 284.17 1036.33 288.606 cv
1038.58 295.352 1037.18 291.388 1033.28 295.468 cv
1032.76 292.601 1031.9 287.963 1029.05 286.41 cv
1027.4 284.762 1022.31 284.282 1021.9 281.876 cv
1021.23 277.679 1016.41 273.339 1012.82 271.83 cv
1014.45 272.517 998.223 272.478 1000.02 271.365 cv
997.793 272.731 1002.32 281.628 1002.85 283.532 cv
1005.27 292.279 1007.7 301.027 1010.12 309.775 cv
1012.18 317.224 1018.15 318.488 1019.05 325.902 cv
1020.34 336.485 1019.86 343.193 1029.35 349.649 cv
1037.18 354.97 1038.17 335.544 1038.98 331.291 cv
1046.76 334.115 1048.41 338.711 1048.56 347.883 cv
1048.64 353.146 1050.49 358.368 1044.58 357.958 cv
1038.98 357.569 1033.38 357.179 1027.77 356.79 cv
1015.98 355.971 1004.18 355.152 992.387 354.332 cv
985.925 353.883 983.372 346.275 978.498 342.191 cv
979.009 340.745 978.732 329.165 976.586 330.725 cv
978.453 316.07 976.83 297.079 960.368 292.421 cv
955.885 291.152 950.927 290.688 946.313 291.475 cv
935.049 293.394 934.927 300.584 930.474 308.124 cv
926.647 314.604 927.435 323.656 927.938 330.85 cv
925.362 330.311 924.335 333.803 924.141 335.562 cv
923.901 338.276 924.331 340.871 925.433 343.349 cv
923.044 345.507 920.854 347.851 918.863 350.381 cv
911.816 359.294 906.021 369.834 903.003 380.806 cv
900.688 389.22 903.511 405.124 898.618 411.542 cv
896.916 395.186 895.215 378.83 893.513 362.474 cv
892.06 348.499 880.561 352.365 869.612 353.126 cv
848.175 354.615 826.738 356.104 805.301 357.593 cv
798.668 358.054 769.766 355.41 765.212 361.866 cv
762.771 365.325 765.161 373.552 765.535 377.145 cv
766.636 387.729 767.737 398.313 768.838 408.896 cv
769.943 419.518 766.947 444.967 781.368 444.967 cv
791.38 444.967 801.392 444.967 811.404 444.967 cv
818.767 444.967 815.684 451.38 823.773 451.38 cv
840.708 451.38 857.643 451.38 874.577 451.38 cv
875.047 448.418 865.326 449.648 864.14 449.648 cv
856.196 449.648 849.114 451.569 843.47 444.967 cv
855.264 444.967 873.53 441.198 884.575 444.967 cv
890.766 454.574 906.762 444.844 910.948 451.4 cv
857.087 451.4 803.227 451.4 749.366 451.4 cv
756.825 451.056 766.583 446.482 765.511 437.473 cv
764.751 431.086 756.519 424.117 757.351 418.61 cv
758.507 410.956 759.663 403.302 760.82 395.647 cv
761.482 391.265 759.033 389.677 754.675 389.765 cv
750.997 389.84 747.319 389.915 743.641 389.99 cv
737.465 390.116 739.841 387.671 734.515 385.148 cv
734.324 385.992 733.367 390.819 733.356 390.199 cv
735.314 380.611 720.602 378.549 712.573 375.207 cv
699.036 369.571 714.242 363.852 714.242 352.727 cv
717.951 358.177 724.947 339.451 718.73 338.303 cv
717.311 338.041 715.755 320.734 712.846 315.976 cv
714.396 316.699 715.636 317.812 716.567 319.316 cv
716.872 314.378 714.779 309.794 710.175 307.771 cv
711.209 307.322 712.299 307.145 713.445 307.24 cv
709.328 303.052 703.005 302.555 697.718 304.457 cv
699.109 303.319 700.749 302.707 702.638 302.619 cv
696.778 300.264 690.162 301.486 685.258 305.304 cv
686.022 304.134 687.031 303.207 688.282 302.522 cv
674.623 302.704 673.326 328.634 673.947 338.474 cv
667.233 335.665 672.447 358.748 676.969 352.924 cv
676.969 360.567 687.398 366.086 683.37 372.741 cv
681.163 376.387 668.367 379.83 664.917 381.373 cv
660.212 369.31 656.025 356.567 652.614 344.081 cv
648.265 328.158 635.694 328.401 624.567 319.293 cv
618.769 314.546 593.646 306.34 604.453 299.521 cv
602.164 296.279 600.866 292.379 599.582 288.67 cv
601.1 292.05 603.55 295.819 606.511 298.145 cv
611.109 294.883 612.396 295.105 610.218 290.095 cv
611.955 293.661 613.612 293.644 615.187 290.046 cv
613.866 288.92 612.795 287.59 611.976 286.056 cv
615.592 289.478 617.004 288.514 618.987 284.076 cv
615.67 282.514 613.869 279.568 612.112 276.546 cv
613.775 278.582 616.553 282.142 619.677 282.087 cv
619.789 281.563 608.514 267.725 607.669 263.874 cv
606.695 259.438 606.027 254.973 604.663 250.624 cv
600.333 236.82 590.173 227.834 575.065 230.272 cv
561.537 232.456 551.759 240.061 549.994 254.377 cv
548.397 267.328 555.379 286.887 543.256 295.979 cv
544.506 298.216 549.304 293.379 549.699 292.861 cv
549.617 294.83 545.974 297.202 544.537 297.865 cv
548.626 302.933 553.858 302.539 550.875 309.108 cv
544.337 323.505 522.601 339.275 528.998 356.118 cv
534.461 370.644 556.182 331.011 558.139 327.026 cv
558.209 333.51 555.992 339.901 556.423 346.365 cv
556.924 353.88 563.693 354.468 566.739 359.963 cv
574.997 374.86 564.947 385.04 558.23 397.548 cv
549.908 413.046 554.726 427.212 558.093 443.287 cv
560.313 453.889 566.366 470.639 562.849 481.146 cv
557.82 496.187 555.946 510.129 552.785 525.73 cv
551.623 531.466 542.439 552.677 545.159 557.354 cv
545.379 557.748 534.287 582.904 538.201 582.747 cv
539.568 582.693 539.227 576.609 541.124 576.829 cv
541.972 584.528 539.213 599.538 553.141 596.234 cv
562.494 594.015 572.355 600.147 575.04 584.68 cv
575.141 587.937 574.56 591.127 574.16 594.339 cv
577.878 586.265 575.046 577.442 575.045 569.152 cv
573.561 556.016 576.202 537.747 578.142 524.398 cv
579.671 513.878 580.598 503.138 578.844 492.59 cv
579.531 488.28 587.654 464.147 589.989 464.147 cv
607.334 464.147 624.678 464.147 642.023 464.147 cv
643.607 464.147 652.952 485.25 653.189 484.755 cv
647.733 491.637 651.185 502.548 656.05 508.715 cv
649.17 507.66 646.496 510.285 646.496 516.89 cv
646.496 523.728 653.143 522.553 658.114 522.361 cv
645.962 529.193 645.532 547.339 642.412 560.238 cv
638.793 575.202 635.175 590.166 631.556 605.13 cv
640.121 607.796 640.118 589.473 641.363 583.974 cv
643.657 573.845 645.951 563.715 648.245 553.585 cv
646.991 565.169 645.737 576.753 644.483 588.337 cv
655.465 590.668 646.836 532.318 658.114 526.449 cv
658.114 558.441 658.114 590.434 658.114 622.426 cv
658.114 624.759 664.799 624.733 664.799 622.458 cv
664.799 615.83 664.799 609.202 664.799 602.574 cv
664.799 581.272 664.799 559.971 664.799 538.669 cv
664.799 534.154 664.799 529.639 664.799 525.124 cv
664.799 521.524 677.006 536.168 677.091 536.279 cv
682.319 543.128 687.547 549.976 692.775 556.825 cv
700.114 566.44 686.612 568.858 688.813 575.448 cv
690.278 579.834 687.067 579.489 687.012 583.483 cv
686.954 587.63 688.805 590.125 688.238 594.835 cv
687.14 603.957 673.432 605.927 673.411 615.114 cv
673.405 618.073 693.558 616.597 696.117 616.603 cv
703.64 616.619 706.645 611.552 708.231 606.844 cv
707.749 599.82 707.938 594.42 711.038 587.883 cv
715.175 598.856 719.786 619.299 734.164 610.067 cv
745.501 602.787 737.266 597.572 734.916 587.853 cv
731.48 573.647 721.012 552.12 725.967 537.936 cv
732.182 520.146 752.188 487.998 728.991 475.165 cv
725.087 473.004 724.691 464.147 730.758 464.147 cv
737.482 464.147 744.205 464.147 750.929 464.147 cv
798.582 464.147 846.235 464.147 893.888 464.147 cv
901.461 464.147 928.925 459.665 929.332 470.75 cv
917.412 473.133 887.542 483.937 905.117 500.482 cv
911.008 506.028 910.716 507.853 912.563 516.913 cv
915.977 533.656 919.391 550.399 922.805 567.142 cv
923.369 569.91 922.129 572.823 922.304 575.632 cv
924.018 579.684 921.905 583.69 923.251 586.248 cv
927.036 593.438 926.201 596.703 922.581 602.645 cv
918.621 605.171 904.364 617.289 915.451 617.289 cv
924.45 617.289 933.45 617.289 942.449 617.289 cv
942.971 617.289 950.248 616.312 946.074 614.518 cv
946.073 611.02 946.922 602.27 946.944 601.955 cv
947.247 597.497 950.446 585.1 949.137 581.937 cv
952.707 582.299 956.274 582.26 959.837 581.818 cv
954.922 594.617 948.526 603.27 967.447 604.592 cv
978.298 605.351 975.821 584.286 975.561 577.711 cv
975.398 573.572 975.279 567.472 976.764 563.44 cv
977.84 560.517 982.475 559.773 981.445 556.034 cv
979.391 548.577 983.176 541.302 985.424 534.154 cv
985.424 552.672 985.424 571.19 985.424 589.708 cv
985.424 599.43 985.424 609.151 985.424 618.873 cv
985.424 624.23 992.11 625.614 992.11 622.588 cv
992.11 602.912 992.11 583.236 992.11 563.561 cv
992.11 547.331 989.658 528.98 992.11 512.9 cv
993.71 502.403 1011.62 494.249 1002.79 483.115 cv
997.633 476.618 992.11 478.62 992.11 469.918 cv
992.11 464.734 990.918 464.147 995.838 464.147 cv
1007.02 464.147 1018.21 464.147 1029.39 464.147 cv
1040.57 464.147 1042.07 461.555 1043.65 472.691 cv
1046.72 494.409 1042.61 514.949 1045.16 536.607 cv
1046.38 546.978 1048.5 557.423 1049.12 567.846 cv
1049.48 573.849 1043 583.593 1045.14 590.589 cv
1048.67 602.112 1068.47 597.355 1076.36 596.277 cv
1083.45 595.306 1078.79 587.442 1076.05 584.43 cv
1073.81 581.956 1074.98 575.133 1074.87 571.906 cv
1074.56 563.063 1079.62 553.622 1082.41 545.33 cv
1086.86 532.051 1090.65 518.372 1095.75 505.326 cv
1106 479.104 1100.24 442.766 1096.65 415.219 cv
1095.4 405.693 1094.46 395.939 1091.79 386.677 cv
1097.22 386.523 1104.64 388.905 1106.98 381.873 cv
1112.16 372.184 1126.79 350.322 1121.82 338.886 cv
1119.93 334.542 1125.2 346.657 1121.82 338.886 cv
cp
.917647 .956863 .764706 rgb
f
357.408 349.993 mo
354.525 357.8 356.991 377.348 350.975 383.866 cv
351.643 383.392 352.093 383.169 350.065 384.714 cv
347.138 384.886 344.781 380.377 342.648 378.81 cv
340.87 377.504 337.295 378.57 335.169 378.528 cv
333.53 373.539 332.437 368.356 332.092 363.112 cv
331.565 355.105 331.992 347.464 337.828 342.125 cv
343.177 337.231 340.795 329.232 340.304 322.997 cv
341.082 330.31 360.691 341.103 357.408 349.993 cv
cp
340.1 389.046 mo
340.268 389.005 341.632 388.823 341.826 388.699 cv
340.909 389.651 340.334 389.766 340.1 389.046 cv
cp
338.477 386.509 mo
337.286 384.957 339.754 385.749 341.069 385.338 cv
340.285 385.692 339.502 386.046 338.718 386.4 cv
338.666 386.428 338.595 386.462 338.477 386.509 cv
cp
339.008 381.893 mo
338.193 382.063 337.378 382.233 336.563 382.403 cv
335.852 381.158 336.667 380.988 339.008 381.893 cv
cp
331.896 487.334 mo
331.524 497.009 323.616 505.296 321.516 514.711 cv
318.775 527.017 318.951 539.698 317.018 552.111 cv
316.094 558.303 313.733 560.423 312.118 566.185 cv
310.417 561.7 311.904 553.849 312.143 548.735 cv
312.806 534.525 313.469 520.316 314.133 506.106 cv
314.485 498.556 315.032 491.024 315.549 483.483 cv
315.965 477.422 316.381 471.36 316.796 465.298 cv
317.004 462.268 322.878 466.025 324.163 462.334 cv
328.503 464.566 332.139 481.01 331.896 487.334 cv
cp
318.1 446.283 mo
319.557 446.379 320.856 445.819 321.996 444.605 cv
322.485 447.174 323.01 449.733 323.566 452.29 cv
322.103 452.723 319.172 452.67 317.688 452.29 cv
317.815 450.446 317.535 448.032 318.1 446.283 cv
cp
297.133 365.035 mo
291.901 364.672 286.67 364.308 281.438 363.945 cv
274.624 363.471 li
277.69 358.241 282.657 354.517 286.025 349.352 cv
288.164 346.07 291.666 344.328 291.956 340.253 cv
299.264 341.952 300.743 349.148 300.845 355.627 cv
300.922 360.541 302.648 365.418 297.133 365.035 cv
cp
293.448 452.29 mo
249.495 452.29 li
251.122 449.868 273.381 452.271 276.896 452.271 cv
282.727 452.271 279.847 446.283 285.023 446.283 cv
290.3 446.283 294.594 445.118 293.448 452.29 cv
cp
241.894 472.61 mo
236.437 470.879 232.659 472.798 232.938 466.232 cv
237.431 464.269 236.482 464.192 240.615 464.192 cv
243.178 464.192 241.894 470.363 241.894 472.61 cv
cp
222.869 544.005 mo
221.706 547.654 219.389 548.382 220.856 551.991 cv
214.242 550.434 214.892 551.593 214.892 544.783 cv
214.892 539.976 214.442 534.932 214.892 530.143 cv
218.309 528.445 216.523 519.01 216.523 516.237 cv
216.523 506.559 215.518 507.628 225.769 506.849 cv
224.802 519.234 223.836 531.619 222.869 544.005 cv
cp
202.917 551.723 mo
201.419 536.82 199.92 521.918 198.422 507.016 cv
206.194 507.46 206.158 506.133 206.158 513.523 cv
206.158 527.518 li
206.158 534.296 207.788 543.371 207.788 551.063 cv
206.165 551.283 204.541 551.503 202.917 551.723 cv
cp
369.257 347.227 mo
369.433 347.632 369.642 348.112 369.83 348.545 cv
369.678 348.196 369.492 347.768 369.257 347.226 cv
369.206 347.109 369.162 347.008 369.121 346.916 cv
369.23 347.164 li
365.319 338.175 361.047 328.387 354.736 320.808 cv
357.815 317.933 344.566 302.933 343.069 305.959 cv
339.325 303.422 343.678 294.751 344.529 288.971 cv
345.952 279.31 345.489 269.266 342.978 259.819 cv
339.62 247.186 330.702 230.991 315.644 230.991 cv
300.586 230.991 291.668 247.186 288.31 259.819 cv
285.923 268.798 285.396 278.306 286.559 287.515 cv
287.105 291.845 288.044 296.133 289.427 300.279 cv
292.15 308.442 282.943 315.646 279.625 322.049 cv
275.06 330.861 269.797 339.053 263.655 346.955 cv
260.514 350.995 255.09 356.358 253.033 361.972 cv
248.396 361.649 li
242.361 361.23 239.977 354.126 235.427 350.312 cv
235.903 348.962 235.645 338.148 233.641 339.606 cv
235.385 325.921 233.869 308.188 218.497 303.838 cv
214.311 302.653 209.681 302.22 205.373 302.954 cv
194.855 304.746 194.74 311.461 190.583 318.501 cv
187.009 324.552 187.745 333.004 188.215 339.723 cv
185.809 339.219 184.85 342.48 184.669 344.123 cv
184.444 346.656 184.846 349.08 185.875 351.393 cv
183.644 353.408 181.599 355.597 179.74 357.96 cv
173.16 366.282 167.749 376.124 164.93 386.37 cv
162.769 394.227 165.405 409.078 160.836 415.071 cv
156.069 369.252 li
154.712 356.203 143.975 359.812 133.751 360.523 cv
113.733 361.913 93.7159 363.304 73.6986 364.694 cv
67.5051 365.124 40.5164 362.656 36.2639 368.684 cv
33.9852 371.914 36.2167 379.596 36.5658 382.952 cv
37.5938 392.835 38.6219 402.717 39.6499 412.6 cv
40.6817 422.519 37.8843 446.283 51.3505 446.283 cv
79.3974 446.283 li
86.2728 446.283 83.3942 452.271 90.9472 452.271 cv
138.387 452.271 li
138.826 449.505 129.749 450.654 128.641 450.654 cv
121.223 450.654 114.61 452.447 109.34 446.283 cv
120.353 446.283 137.409 442.763 147.723 446.283 cv
153.504 455.253 168.441 446.167 172.349 452.29 cv
39.2203 452.29 li
39.2203 464.192 li
70.8921 464.192 li
70.8921 613.86 li
79.7253 613.86 li
79.7253 464.192 li
156.419 464.192 li
163.491 464.192 189.136 460.007 189.516 470.358 cv
178.385 472.583 150.494 482.672 166.904 498.121 cv
172.406 503.3 172.133 505.004 173.858 513.464 cv
183.421 560.367 li
183.948 562.951 182.79 565.671 182.954 568.295 cv
184.554 572.078 182.581 575.819 183.838 578.208 cv
187.372 584.922 186.592 587.97 183.212 593.519 cv
179.514 595.877 166.202 607.193 176.554 607.193 cv
201.765 607.193 li
202.252 607.193 209.047 606.281 205.15 604.606 cv
205.149 601.34 205.942 593.169 205.962 592.874 cv
206.244 588.712 209.232 577.136 208.01 574.182 cv
211.343 574.521 214.674 574.484 218.001 574.071 cv
213.411 586.022 207.439 594.103 225.107 595.337 cv
235.239 596.045 232.926 576.376 232.684 570.236 cv
232.532 566.371 232.421 560.675 233.807 556.91 cv
234.812 554.181 239.14 553.486 238.178 549.995 cv
236.261 543.031 239.794 536.239 241.894 529.563 cv
241.894 608.672 li
241.894 613.675 248.137 614.967 248.137 612.141 cv
248.137 557.023 li
248.137 541.868 245.847 524.732 248.137 509.717 cv
249.631 499.915 266.358 492.301 258.108 481.904 cv
253.294 475.838 248.137 477.707 248.137 469.581 cv
248.137 464.741 247.024 464.192 251.618 464.192 cv
282.948 464.192 li
293.39 464.192 294.79 461.772 296.261 472.171 cv
299.131 492.45 295.294 511.631 297.673 531.854 cv
298.812 541.538 300.794 551.292 301.372 561.024 cv
301.704 566.63 295.655 575.728 297.658 582.262 cv
300.956 593.021 319.44 588.58 326.804 587.573 cv
333.43 586.666 329.075 579.323 326.523 576.51 cv
324.427 574.2 325.522 567.829 325.417 564.815 cv
325.129 556.558 329.853 547.742 332.453 539.999 cv
336.617 527.6 340.154 514.826 344.914 502.644 cv
354.481 478.159 349.107 444.227 345.75 418.505 cv
344.59 409.609 343.713 400.501 341.218 391.852 cv
346.283 391.708 353.218 393.933 355.399 387.367 cv
360.235 378.32 373.901 357.905 369.257 347.227 cv
cp
f
1150.75 879.752 mo
.750024 879.752 li
.750024 557.574 li
1150.75 557.574 li
1150.75 879.752 li
cp
f
495.9 854.146 mo
447.153 854.146 li
713.389 710.153 li
762.137 710.153 li
495.9 854.146 li
cp
level3{
gsave
clp
[5.40395e-009 -120.088 120.088 5.40395e-009 604.645 840.647 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.917647 .956863 .764706 ]
/C1 [.917647 .956863 .764706 ]
/N 1 
>>
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.768627 .815686 .564706 ]
/C1 [.917647 .956863 .764706 ]
/N 1.11544 
>>
]
/Bounds [.0158103 ]
/Encode [0 1 1 0 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.40395e-009 -120.088 120.088 5.40395e-009 604.645 840.647 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~lK[["lKRQtl07Eqkih6okND$kkND!ik2tggjlPUcjlPRajQ,C_jQ#:\j5]1Zio8tWio/kTiSibRi8EPO
i8<GLhr!>JhVR,GhVI#Dh;-oBgt^]?gt^Z=gY:K;g=k97g=k65g"G'3f\"j/f\"j.f@SX+f@JO(f%/F'
e^`4#e^`1!eC<!te'ldpe'ldodaHRldaHOjdF$@hd*U.dd*U.ccd0q`cd0n^cHa_\c-=MXc-=MWbfn;T
bfn8RbKJ)PbK@uMb0%lLaiVZHaiVZHaN2HDaN2HCa2c6@a2c6?`l?$<`l?$;`Pog8`Pog7`5KU4`5KU4
~>
<~o^qeJo^h\GoCMSEo()ABo'u8?naZ/=nF5r:nF5o8n*f`6mdBN2mdBN1mHs<.mHj3+m-O*)lg*m&lg*j$
lK[["l07Hsl07Hrkih6oki_-lkND$kk2tggk2tdejlPUcjlGL`jQ,C_j5]1[j5].Yio8tWio/kTiSibS
i8EPOi8EPNhr!>Khr!;IhVR,Gh;-oCh;-oBgt^]?gt^Z=gY:K;gY1B8g=k97g=b04g"G'3f\"j/f\"j.
f@SX+f@SU)f%/F'f%/C%e^`4#e^`1!eC<!teC2mqe'ldpe'c[mdaHRldaHOjdF$@hdF$=fd*U.dd*U.d
~>
<~_o'C0_ns:-_SO()_8*k%^qd_"^V@Ls^:q=p]tM+l]Y(ni]=Y\e]"5Ja]",A^\[]/Z\@B#W\$rfS[^NWP
[C*EM['[3IZa7!EZa-mBZE^[>Z*CO;Yct@8YHP.4Y-+q1Xf\_-XfSV*XK/D&X/i8#WiE(uWMukrW2QYn
Vl-GjVl$>gVP^2dV5:#aUnjf^USFTZUS=KWU7n9STqS-PTV.sMT:_aJSt;OFSt2FCSXl=AS=H+>S"#n:
S!oe7R[TY4R@0J1R$a8.R$X/+Q^=#(QBmi&Q'IW"Q'@MtPa%DrPEV2oPEM)lP*1ujOcbcgOcYZdOH>Qc
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
476.975 857 mo
618.144 780.65 li
542.398 780.65 li
522.985 791.149 li
497.392 791.149 li
616.644 726.653 li
540.898 726.653 li
299.89 857 li
476.975 857 li
cp
level3{
gsave
clp
[5.49384e-009 -122.085 122.085 5.49384e-009 459.017 858.646 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.49384e-009 -122.085 122.085 5.49384e-009 459.017 858.646 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
215.414 876.645 mo
120.919 876.645 li
387.156 732.652 li
481.651 732.652 li
215.414 876.645 li
cp
level3{
gsave
clp
[5.40395e-009 -120.088 120.088 5.40395e-009 301.285 863.146 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[5.40395e-009 -120.088 120.088 5.40395e-009 301.285 863.146 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
233.619 863 mo
333.841 813.648 li
275.344 813.648 li
306.91 792.649 li
145.668 792.649 li
2.80295 863 li
233.619 863 li
cp
272.844 863 mo
376.111 812.148 li
455.607 812.148 li
352.34 863 li
272.844 863 li
cp
level3{
gsave
clp
[3.11145e-009 -69.1431 69.1431 3.11145e-009 229.205 860.146 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.11145e-009 -69.1431 69.1431 3.11145e-009 229.205 860.146 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
943.628 863 mo
1047.12 813.648 li
1041.24 792.649 li
870.132 792.649 li
727.267 863 li
943.628 863 li
cp
level3{
gsave
clp
[3.11145e-009 -69.1431 69.1431 3.11145e-009 887.195 860.146 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.11145e-009 -69.1431 69.1431 3.11145e-009 887.195 860.146 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
831.537 167.574 mo
814.655 167.574 800.97 176.986 800.97 188.597 cv
800.97 194.325 804.305 199.515 809.706 203.306 cv
797.149 230.176 li
817.725 207.35 li
821.874 208.798 826.565 209.62 831.537 209.62 cv
848.418 209.62 862.104 200.208 862.104 188.597 cv
862.104 176.986 848.418 167.574 831.537 167.574 cv
cp
.94902 .94902 .94902 rgb
f
567.956 203.155 mo
581.22 203.155 li
585.781 203.155 589.763 200.716 591.964 197.08 cv
558.462 198.805 li
560.766 201.465 564.161 203.155 567.956 203.155 cv
cp
593.066 193.131 mo
556.954 194.991 li
556.585 195.013 556.245 195.179 556 195.456 cv
555.753 195.734 555.63 196.09 555.652 196.46 cv
555.697 197.192 556.305 197.765 557.037 197.765 cv
593.238 195.902 li
593.608 195.88 593.947 195.715 594.193 195.437 cv
594.438 195.16 594.561 194.803 594.539 194.433 cv
594.495 193.703 593.89 193.131 593.066 193.131 cv
cp
600.917 128.674 mo
599.946 128.674 li
583.287 167.127 li
586.48 167.127 li
600.917 128.674 li
cp
569.822 141.862 mo
585.623 121.099 li
584.907 129.831 li
600.27 126.87 li
588.424 126.87 li
590.089 107.99 li
575.715 127.569 li
576.763 99.6612 li
549.832 127.425 li
568.248 118.726 li
569.822 141.862 li
cp
566.343 167.127 mo
549.685 128.674 li
548.713 128.674 li
563.15 167.127 li
566.343 167.127 li
cp
604.43 145.309 mo
604.443 145.309 li
598.106 152.566 594.193 161.54 593.109 170.994 cv
556.807 170.994 li
555.723 161.54 551.811 152.566 545.473 145.309 cv
545.486 145.309 li
539.467 138.426 535.811 129.422 535.811 119.559 cv
535.811 97.9382 553.338 80.4115 574.958 80.4115 cv
596.578 80.4115 614.105 97.9382 614.105 119.559 cv
614.105 129.422 610.45 138.426 604.43 145.309 cv
cp
555.391 173.5 mo
555.391 175.844 li
593.785 173.522 li
593.785 173.5 li
555.391 173.5 li
cp
574.958 210.162 mo
578.328 210.162 581.224 208.156 582.535 205.277 cv
567.381 205.277 li
568.692 208.156 571.588 210.162 574.958 210.162 cv
cp
594.001 174.622 mo
554.272 177.024 li
553.903 177.047 553.564 177.212 553.317 177.49 cv
553.072 177.767 552.949 178.123 552.971 178.494 cv
553.015 179.225 553.623 179.798 554.355 179.798 cv
594.163 177.393 li
594.927 177.347 595.511 176.688 595.465 175.924 cv
595.42 175.194 594.816 174.622 594.001 174.622 cv
cp
556.888 193.882 mo
593.003 192.022 li
593.24 192.008 593.467 192.038 593.688 192.087 cv
593.746 191.595 593.785 191.097 593.785 190.59 cv
593.785 187.413 li
555.391 189.735 li
555.391 190.59 li
555.391 191.827 555.577 193.019 555.91 194.149 cv
556.206 193.999 556.535 193.904 556.888 193.882 cv
cp
555.391 180.851 mo
555.391 184.729 li
593.785 182.406 li
593.785 178.528 li
555.391 180.851 li
cp
595.465 184.808 mo
595.511 185.572 594.927 186.231 594.163 186.278 cv
554.355 188.682 li
553.623 188.682 553.015 188.11 552.971 187.378 cv
552.949 187.008 553.072 186.651 553.317 186.374 cv
553.564 186.096 553.903 185.931 554.272 185.909 cv
594.001 183.506 li
594.816 183.506 595.42 184.078 595.465 184.808 cv
cp
f
224.111 175.518 mo
209.853 168.212 204.218 150.732 211.523 136.474 cv
218.829 122.217 236.31 116.581 250.568 123.887 cv
264.826 131.193 270.462 148.674 263.156 162.932 cv
255.85 177.189 238.369 182.824 224.111 175.518 cv
cp
282.015 162.925 mo
283.471 158.202 287.687 155.102 292.346 154.822 cv
292.917 149.222 292.617 143.616 291.503 138.192 cv
286.842 138.375 282.342 135.713 280.423 131.161 cv
278.501 126.605 279.74 121.517 283.133 118.309 cv
280.048 113.755 276.251 109.627 271.803 106.105 cv
268.351 109.249 263.186 110.107 258.785 107.852 cv
254.385 105.597 252.064 100.904 252.6 96.265 cv
247.144 94.7117 241.575 94.0406 236.077 94.1959 cv
235.454 98.8243 232.048 102.802 227.227 103.903 cv
222.411 105.003 217.622 102.905 215.049 99.0154 cv
209.995 101.279 205.27 104.31 201.057 108.044 cv
203.551 111.99 203.498 117.223 200.514 121.163 cv
197.534 125.099 192.52 126.571 188.049 125.249 cv
185.551 130.403 183.929 135.761 183.129 141.157 cv
187.576 142.576 190.898 146.619 191.146 151.556 cv
191.393 156.488 188.496 160.84 184.22 162.699 cv
185.585 168.096 187.748 173.28 190.673 178.05 cv
194.993 176.275 200.141 177.235 203.506 180.86 cv
206.87 184.485 207.446 189.69 205.354 193.866 cv
207.583 195.471 209.959 196.93 212.478 198.221 cv
214.997 199.511 217.57 200.588 220.174 201.46 cv
222.342 197.323 226.903 194.75 231.811 195.364 cv
236.718 195.978 240.504 199.595 241.587 204.139 cv
247.167 203.727 252.638 202.455 257.816 200.411 cv
256.828 195.854 258.668 190.961 262.816 188.281 cv
266.968 185.598 272.19 185.934 275.939 188.714 cv
279.852 184.914 283.253 180.467 285.979 175.429 cv
282.294 172.573 280.56 167.643 282.015 162.925 cv
cp
f
240.14 244.707 mo
240.727 240.016 li
241.411 239.975 242.08 239.812 242.71 239.546 cv
245.281 243.526 li
243.696 244.339 241.927 244.751 240.14 244.707 cv
cp
235.056 243.263 mo
234.451 242.911 233.898 242.505 233.39 242.061 cv
236.829 238.868 li
236.997 238.991 237.172 239.107 237.356 239.214 cv
237.778 239.459 238.217 239.641 238.665 239.774 cv
238.08 244.452 li
237.043 244.218 236.023 243.827 235.056 243.263 cv
cp
229.897 235.705 mo
234.559 235.471 li
234.725 236.143 235.008 236.783 235.397 237.365 cv
231.971 240.545 li
230.878 239.121 230.171 237.452 229.897 235.705 cv
cp
236.968 223.993 mo
238.007 228.54 li
237.359 228.818 236.757 229.209 236.235 229.709 cv
232.53 226.903 li
233.76 225.546 235.296 224.565 236.968 223.993 cv
cp
244.274 224.145 mo
242.136 228.317 li
241.443 228.103 240.729 228.017 240.026 228.058 cv
238.988 223.515 li
240.739 223.277 242.554 223.474 244.274 224.145 cv
cp
249.763 228.976 mo
245.414 230.811 li
245.04 230.226 244.562 229.7 243.984 229.264 cv
246.125 225.084 li
247.7 226.085 248.926 227.435 249.763 228.976 cv
cp
250.843 236.2 mo
246.314 234.804 li
246.404 234.106 246.362 233.404 246.21 232.728 cv
250.571 230.889 li
251.102 232.59 251.21 234.415 250.843 236.2 cv
cp
238.043 232.682 mo
238.792 231.396 240.441 230.961 241.727 231.71 cv
243.013 232.459 243.448 234.108 242.699 235.393 cv
241.95 236.679 240.301 237.114 239.015 236.365 cv
237.73 235.616 237.295 233.967 238.043 232.682 cv
cp
231.213 228.699 mo
231.296 228.573 li
235.008 231.383 li
234.686 232.032 234.491 232.714 234.418 233.4 cv
229.777 233.632 li
229.843 231.949 230.306 230.257 231.213 228.699 cv
cp
249.62 239.421 mo
248.93 240.605 248.04 241.599 247.027 242.402 cv
244.454 238.42 li
244.873 238.029 245.244 237.573 245.548 237.053 cv
245.687 236.783 li
250.227 238.182 li
250.05 238.602 249.855 239.017 249.62 239.421 cv
cp
257.363 244.193 mo
256.428 243.415 256.186 241.812 256.674 240.488 cv
257.383 238.562 li
257.87 237.238 259.094 236.175 260.311 236.19 cv
262.255 236.213 li
262.446 234.456 262.422 232.693 262.191 230.961 cv
260.072 230.97 li
258.855 230.976 257.639 229.903 257.162 228.575 cv
256.468 226.645 li
255.99 225.317 256.244 223.716 257.186 222.945 cv
258.709 221.698 li
257.746 220.253 256.602 218.913 255.287 217.712 cv
253.648 219.1 li
252.719 219.887 251.098 219.846 249.879 219.136 cv
248.106 218.103 li
246.887 217.393 246.052 216.003 246.278 214.807 cv
246.648 212.848 li
244.94 212.349 243.201 212.068 241.464 211.995 cv
241.096 214.136 li
240.89 215.336 239.623 216.347 238.232 216.586 cv
236.21 216.935 li
234.82 217.174 233.287 216.646 232.691 215.585 cv
231.708 213.834 li
230.11 214.537 228.591 215.433 227.189 216.512 cv
228.291 218.401 li
228.904 219.453 228.583 221.042 227.672 222.119 cv
226.347 223.686 li
225.436 224.763 223.922 225.344 222.783 224.914 cv
220.905 224.205 li
220.114 225.812 219.537 227.476 219.167 229.162 cv
221.223 229.9 li
222.369 230.311 223.144 231.735 223.139 233.146 cv
223.131 235.198 li
223.125 236.609 222.339 238.027 221.19 238.429 cv
219.31 239.088 li
219.732 240.789 220.356 242.439 221.174 243.999 cv
223.2 243.252 li
224.342 242.83 225.851 243.423 226.754 244.507 cv
228.067 246.084 li
228.97 247.168 229.279 248.76 228.657 249.806 cv
227.65 251.504 li
228.247 251.937 228.871 252.345 229.522 252.724 cv
230.408 253.24 231.316 253.681 232.239 254.061 cv
233.297 252.209 li
233.901 251.152 235.438 250.636 236.826 250.886 cv
238.846 251.25 li
240.234 251.501 241.494 252.521 241.691 253.722 cv
242.006 255.646 li
243.761 255.525 245.494 255.193 247.165 254.661 cv
246.789 252.581 li
246.572 251.383 247.418 250 248.642 249.299 cv
250.423 248.28 li
251.648 247.579 253.269 247.551 254.192 248.345 cv
255.66 249.607 li
256.903 248.413 258.022 247.055 258.982 245.539 cv
257.363 244.193 li
cp
f
930.576 175.518 mo
916.318 168.212 910.682 150.732 917.988 136.474 cv
925.294 122.217 942.775 116.581 957.033 123.887 cv
971.291 131.193 976.927 148.674 969.621 162.932 cv
962.315 177.189 944.834 182.824 930.576 175.518 cv
cp
988.479 162.925 mo
989.935 158.202 994.151 155.102 998.811 154.822 cv
999.381 149.222 999.082 143.616 997.968 138.192 cv
993.307 138.375 988.807 135.713 986.887 131.161 cv
984.965 126.605 986.205 121.517 989.598 118.309 cv
986.513 113.755 982.716 109.627 978.268 106.105 cv
974.816 109.249 969.651 110.107 965.25 107.852 cv
960.849 105.597 958.529 100.904 959.064 96.265 cv
953.608 94.7117 948.04 94.0406 942.541 94.1959 cv
941.918 98.8243 938.513 102.802 933.692 103.903 cv
928.876 105.003 924.087 102.905 921.513 99.0154 cv
916.459 101.279 911.734 104.31 907.522 108.044 cv
910.016 111.99 909.962 117.223 906.979 121.163 cv
903.998 125.099 898.984 126.571 894.514 125.249 cv
892.016 130.403 890.394 135.761 889.594 141.157 cv
894.04 142.576 897.363 146.619 897.61 151.556 cv
897.858 156.488 894.961 160.84 890.685 162.699 cv
892.049 168.096 894.213 173.28 897.138 178.05 cv
901.458 176.275 906.606 177.235 909.97 180.86 cv
913.335 184.485 913.91 189.69 911.819 193.866 cv
914.048 195.471 916.424 196.93 918.943 198.221 cv
921.462 199.511 924.034 200.588 926.639 201.46 cv
928.807 197.323 933.368 194.75 938.275 195.364 cv
943.183 195.978 946.969 199.595 948.051 204.139 cv
953.631 203.727 959.103 202.455 964.281 200.411 cv
963.292 195.854 965.133 190.961 969.281 188.281 cv
973.432 185.598 978.655 185.934 982.404 188.714 cv
986.316 184.914 989.718 180.467 992.443 175.429 cv
988.759 172.573 987.025 167.643 988.479 162.925 cv
cp
f
946.605 244.707 mo
947.192 240.016 li
947.875 239.975 948.545 239.812 949.174 239.546 cv
951.746 243.526 li
950.161 244.339 948.392 244.751 946.605 244.707 cv
cp
941.521 243.263 mo
940.916 242.911 940.362 242.505 939.855 242.061 cv
943.294 238.868 li
943.462 238.991 943.637 239.107 943.821 239.214 cv
944.242 239.459 944.682 239.641 945.13 239.774 cv
944.544 244.452 li
943.507 244.218 942.488 243.827 941.521 243.263 cv
cp
936.361 235.705 mo
941.023 235.471 li
941.189 236.143 941.473 236.783 941.862 237.365 cv
938.436 240.545 li
937.343 239.121 936.636 237.452 936.361 235.705 cv
cp
943.432 223.993 mo
944.471 228.54 li
943.824 228.818 943.222 229.209 942.7 229.709 cv
938.995 226.903 li
940.225 225.546 941.761 224.565 943.432 223.993 cv
cp
950.738 224.145 mo
948.601 228.317 li
947.907 228.103 947.194 228.017 946.491 228.058 cv
945.453 223.515 li
947.203 223.277 949.019 223.474 950.738 224.145 cv
cp
956.228 228.976 mo
951.879 230.811 li
951.505 230.226 951.026 229.7 950.448 229.264 cv
952.59 225.084 li
954.165 226.085 955.391 227.435 956.228 228.976 cv
cp
957.308 236.2 mo
952.779 234.804 li
952.868 234.106 952.827 233.404 952.675 232.728 cv
957.036 230.889 li
957.567 232.59 957.674 234.415 957.308 236.2 cv
cp
944.508 232.682 mo
945.257 231.396 946.906 230.961 948.192 231.71 cv
949.477 232.459 949.912 234.108 949.164 235.393 cv
948.415 236.679 946.766 237.114 945.48 236.365 cv
944.194 235.616 943.759 233.967 944.508 232.682 cv
cp
937.678 228.699 mo
937.76 228.573 li
941.473 231.383 li
941.151 232.032 940.956 232.714 940.883 233.4 cv
936.241 233.632 li
936.308 231.949 936.771 230.257 937.678 228.699 cv
cp
956.084 239.421 mo
955.394 240.605 954.505 241.599 953.492 242.402 cv
950.919 238.42 li
951.338 238.029 951.709 237.573 952.012 237.053 cv
952.152 236.783 li
956.692 238.182 li
956.515 238.602 956.32 239.017 956.084 239.421 cv
cp
963.828 244.193 mo
962.892 243.415 962.651 241.812 963.138 240.488 cv
963.847 238.562 li
964.335 237.238 965.559 236.175 966.776 236.19 cv
968.719 236.213 li
968.911 234.456 968.886 232.693 968.655 230.961 cv
966.537 230.97 li
965.32 230.976 964.104 229.903 963.627 228.575 cv
962.932 226.645 li
962.455 225.317 962.709 223.716 963.65 222.945 cv
965.173 221.698 li
964.211 220.253 963.066 218.913 961.752 217.712 cv
960.112 219.1 li
959.184 219.887 957.563 219.846 956.344 219.136 cv
954.57 218.103 li
953.351 217.393 952.517 216.003 952.742 214.807 cv
953.112 212.848 li
951.405 212.349 949.665 212.068 947.929 211.995 cv
947.561 214.136 li
947.355 215.336 946.088 216.347 944.697 216.586 cv
942.675 216.935 li
941.284 217.174 939.752 216.646 939.156 215.585 cv
938.173 213.834 li
936.575 214.537 935.056 215.433 933.653 216.512 cv
934.755 218.401 li
935.369 219.453 935.047 221.042 934.136 222.119 cv
932.811 223.686 li
931.9 224.763 930.387 225.344 929.248 224.914 cv
927.37 224.205 li
926.579 225.812 926.001 227.476 925.632 229.162 cv
927.688 229.9 li
928.833 230.311 929.609 231.735 929.603 233.146 cv
929.595 235.198 li
929.59 236.609 928.804 238.027 927.655 238.429 cv
925.775 239.088 li
926.196 240.789 926.821 242.439 927.638 243.999 cv
929.665 243.252 li
930.807 242.83 932.316 243.423 933.219 244.507 cv
934.531 246.084 li
935.434 247.168 935.743 248.76 935.122 249.806 cv
934.115 251.504 li
934.711 251.937 935.335 252.345 935.987 252.724 cv
936.873 253.24 937.781 253.681 938.703 254.061 cv
939.762 252.209 li
940.365 251.152 941.902 250.636 943.291 250.886 cv
945.31 251.25 li
946.699 251.501 947.959 252.521 948.155 253.722 cv
948.471 255.646 li
950.226 255.525 951.959 255.193 953.63 254.661 cv
953.254 252.581 li
953.037 251.383 953.882 250 955.107 249.299 cv
956.888 248.28 li
958.113 247.579 959.734 247.551 960.656 248.345 cv
962.125 249.607 li
963.368 248.413 964.487 247.055 965.447 245.539 cv
963.828 244.193 li
cp
f
332.716 170.574 mo
349.597 170.574 363.283 179.685 363.283 190.925 cv
363.283 196.47 359.948 201.494 354.546 205.165 cv
367.104 231.176 li
346.528 209.079 li
342.378 210.481 337.688 211.277 332.716 211.277 cv
315.834 211.277 302.149 202.165 302.149 190.925 cv
302.149 179.685 315.834 170.574 332.716 170.574 cv
cp
f
733.367 663.906 mo
736.203 679.469 li
721.294 683.334 li
717.384 667.358 li
733.367 663.906 li
cp
.870588 .607843 .439216 rgb
f
736.544 675.727 mo
748.284 702.42 li
748.284 702.42 745.574 716.925 724.728 719.337 cv
704.659 721.495 714.263 707.742 718.758 704.142 cv
723.302 700.502 721.027 684.069 721.027 684.069 cv
736.544 675.727 li
cp
.807843 .807843 .807843 rgb
f
736.544 675.727 mo
746.064 704.302 li
746.064 704.302 738.918 716.94 720.927 716.94 cv
703.27 716.94 719.625 700.889 719.625 700.889 cv
720.369 679.555 li
736.544 675.727 li
cp
0 .403922 .447059 rgb
f
735.037 681.094 mo
721.027 684.069 li
721.747 687.019 li
735.645 685.411 li
735.037 681.094 li
cp
.807843 .807843 .807843 rgb
f
735.189 688.802 mo
721.085 689.567 li
721.806 692.517 li
735.794 693.052 li
735.189 688.802 li
cp
f
734.668 695.497 mo
720.256 694.997 li
720.976 697.947 li
735.264 699.708 li
734.668 695.497 li
cp
f
758.304 670.13 mo
757.367 685.922 li
741.967 686.139 li
741.959 669.692 li
758.304 670.13 li
cp
.870588 .607843 .439216 rgb
f
759.32 684.621 mo
763.658 711.083 li
763.658 711.083 757.584 724.532 736.761 721.929 cv
718.107 719.326 732.423 708.481 732.423 708.481 cv
741.533 686.79 li
759.32 684.621 li
cp
.878431 .878431 .878431 rgb
f
759.32 684.621 mo
761.055 712.385 li
761.055 712.385 752.812 718.892 736.761 717.157 cv
720.71 715.422 732.857 707.179 732.857 707.179 cv
741.533 684.621 li
759.32 684.621 li
cp
0 .466667 .529412 rgb
f
755.849 687.224 mo
741.533 686.79 li
741.533 689.826 li
755.415 691.562 li
755.849 687.224 li
cp
.878431 .878431 .878431 rgb
f
754.168 694.748 mo
740.286 692.145 li
740.286 695.182 li
753.747 699.02 li
754.168 694.748 li
cp
f
752.074 701.127 mo
738.192 697.223 li
738.192 700.26 li
751.653 705.36 li
752.074 701.127 li
cp
f
682.534 550.897 mo
684.551 536.778 683.106 492.699 687.74 459.795 cv
689.502 447.281 691.56 426.652 695.553 412.941 cv
702.624 388.663 750.264 378.923 761.922 396.675 cv
790.554 440.273 775.622 469.707 775.622 469.707 cv
761.549 569.156 li
761.549 569.156 766.122 603.238 765.323 615.51 cv
764.387 629.872 757.987 675.483 757.987 675.483 cv
741.75 674.86 li
737.429 582.294 li
729.62 468.417 li
729.62 468.417 727.434 499.489 711.166 553.5 cv
708.147 563.523 712.269 573.361 712.269 573.361 cv
712.269 573.361 720.123 588.281 722.512 593.366 cv
730.688 610.763 730.688 652.518 734.062 667.719 cv
734.062 667.719 719.306 670.215 718.134 670.946 cv
711.367 652.169 692.841 595.484 690.993 589.94 cv
688.787 583.32 680.327 566.344 682.534 550.897 cv
cp
.909804 .317647 .0196078 rgb
f
682.534 550.897 mo
684.551 536.778 683.106 492.699 687.74 459.795 cv
689.396 448.032 691.315 429.102 694.856 415.484 cv
699.177 422.916 728.04 461.058 731.121 465.977 cv
735.548 473.042 742.789 542.576 742.076 558.18 cv
741.823 563.708 738.327 570.975 740.665 576.167 cv
741.887 578.877 744.57 583.975 753.68 585.71 cv
752.317 591.401 747.77 601.436 747.177 607.323 cv
746.49 614.138 746.141 620.988 745.921 627.832 cv
745.508 640.669 744.576 655.148 749.006 667.428 cv
749.968 670.093 751.07 672.703 752.276 675.264 cv
741.75 674.86 li
737.429 582.294 li
729.62 468.417 li
729.62 468.417 727.434 499.489 711.166 553.5 cv
708.147 563.523 712.269 573.361 712.269 573.361 cv
712.269 573.361 720.123 588.281 722.512 593.366 cv
730.688 610.763 730.688 652.518 734.062 667.719 cv
734.062 667.719 719.306 670.215 718.134 670.946 cv
711.367 652.169 692.841 595.484 690.993 589.94 cv
688.787 583.32 680.327 566.344 682.534 550.897 cv
cp
.827451 .258824 .00784314 rgb
f
778.627 357.064 mo
773.91 342.914 768.945 312.378 768.448 304.682 cv
777.386 298.227 788.557 296.489 788.557 296.489 cv
788.557 296.489 790.792 317.591 791.04 328.515 cv
791.288 339.438 791.288 363.271 778.627 357.064 cv
cp
.729412 .47451 .337255 rgb
f
689.095 235.295 mo
689.095 276.085 709.878 309.152 735.514 309.152 cv
761.15 309.152 781.932 276.085 781.932 235.295 cv
781.932 194.505 761.15 161.438 735.514 161.438 cv
709.878 161.438 689.095 194.505 689.095 235.295 cv
1 .741176 .321569 rgb
f
772.583 275.372 mo
775.313 276.378 786.362 276.489 789.713 304.418 cv
779.659 309.259 762.529 312.611 762.529 312.611 cv
762.529 312.611 765.508 272.765 772.583 275.372 cv
cp
0 .403922 .447059 rgb
f
770.746 317.612 mo
702.033 319.058 li
702.033 331.468 li
709.902 342.946 717.022 372.923 696.855 411.314 cv
696.855 411.314 707.262 419.125 734.592 419.776 cv
756.841 420.305 774.66 413.362 774.66 413.362 cv
741.099 352.1 770.746 317.612 770.746 317.612 cv
cp
f
707.433 339.574 mo
758.559 339.574 li
787.18 326.6 756.592 301.021 773.41 275.793 cv
750.533 267.506 li
721.735 266.979 li
721.735 266.979 703.209 271.558 691.62 276.628 cv
707.221 305.958 682.281 327.961 707.433 339.574 cv
cp
0 .466667 .529412 rgb
f
722.442 247.424 mo
723.039 266.979 li
719.367 267.933 li
734.125 313.683 li
751.836 267.506 li
747.279 265.525 li
747.957 247.424 li
722.442 247.424 li
cp
.870588 .607843 .439216 rgb
f
722.442 247.424 mo
723.039 266.979 li
719.367 267.933 li
734.125 313.683 li
725.172 277.241 li
735.161 273.079 li
748.911 252.538 li
747.957 247.424 li
722.442 247.424 li
cp
.729412 .47451 .337255 rgb
f
770.219 211.056 mo
769.297 210.88 768.346 211.123 767.428 211.706 cv
766.996 191.776 763.786 168 736.636 167.856 cv
710.77 167.72 705.366 192.819 704.821 212.845 cv
703.814 212.098 702.599 211.359 701.568 211.544 cv
698.279 212.133 702.506 235.205 709.095 228.04 cv
708.364 243.698 731.427 262.352 736.139 261.821 cv
741.418 261.227 764.316 245.707 763.748 227.999 cv
770.201 233.843 773.502 211.68 770.219 211.056 cv
.870588 .607843 .439216 rgb
f
755.353 208.408 mo
755.436 209.016 751.705 208.408 747.217 208.601 cv
742.728 208.795 739.242 209.715 739.099 209.109 cv
738.838 208.001 741.751 206.039 746.24 205.845 cv
750.728 205.651 755.192 207.223 755.353 208.408 cv
cp
.729412 .47451 .337255 rgb
f
755.263 207.923 mo
755.508 209.114 751.379 207.437 746.891 207.631 cv
742.403 207.824 739.254 209.815 739.009 208.624 cv
738.764 207.432 742.005 205.338 746.493 205.145 cv
750.982 204.951 755.018 206.731 755.263 207.923 cv
cp
.2 .215686 .227451 rgb
f
716.513 208.3 mo
716.43 208.907 720.161 208.299 724.65 208.493 cv
729.138 208.686 732.624 209.606 732.767 209.001 cv
733.029 207.893 730.115 205.93 725.627 205.737 cv
721.138 205.543 716.675 207.115 716.513 208.3 cv
cp
.729412 .47451 .337255 rgb
f
716.603 207.814 mo
716.359 209.006 720.487 207.329 724.976 207.522 cv
729.464 207.716 732.613 209.707 732.858 208.515 cv
733.102 207.324 729.862 205.23 725.373 205.036 cv
720.885 204.843 716.848 206.623 716.603 207.814 cv
cp
.2 .215686 .227451 rgb
f
728.457 221.799 mo
728.448 223.396 727.147 224.683 725.551 224.675 cv
723.954 224.666 722.667 223.365 722.675 221.769 cv
722.684 220.172 723.985 218.885 725.581 218.893 cv
727.178 218.902 728.465 220.203 728.457 221.799 cv
.184314 .0117647 0 rgb
f
749.885 222.399 mo
749.877 223.995 748.576 225.283 746.979 225.274 cv
745.382 225.266 744.095 223.965 744.103 222.368 cv
744.112 220.772 745.413 219.484 747.01 219.493 cv
748.606 219.501 749.893 220.802 749.885 222.399 cv
f
727.685 220.501 mo
727.573 221.002 727.076 221.317 726.575 221.205 cv
726.074 221.092 725.76 220.595 725.872 220.095 cv
725.984 219.594 726.481 219.279 726.982 219.391 cv
727.483 219.504 727.798 220.001 727.685 220.501 cv
1 1 1 rgb
f
749.344 221.236 mo
749.232 221.736 748.735 222.051 748.234 221.939 cv
747.733 221.827 747.419 221.33 747.531 220.829 cv
747.643 220.328 748.14 220.013 748.641 220.126 cv
749.142 220.238 749.456 220.735 749.344 221.236 cv
f
733.201 235.193 mo
733.425 236.389 734.677 237.309 736.193 237.317 cv
737.709 237.325 738.97 236.418 739.208 235.224 cv
733.201 235.193 li
cp
.729412 .47451 .337255 rgb
f
726.497 243.26 mo
729.607 243.539 731.01 238.827 736.339 241.195 cv
741.306 238.647 743.174 242.978 749.034 242.099 cv
742.889 244.676 731.563 244.836 726.497 243.26 cv
cp
f
730.819 247.224 mo
736.839 249.477 740.495 247.559 743.553 244.661 cv
735.581 253.42 735.587 250.784 730.819 247.224 cv
cp
f
746.305 165.667 mo
746.305 165.667 771.033 169.897 769.406 210.893 cv
764.688 210.73 763.797 225.048 763.797 225.048 cv
763.797 225.048 762.983 195.277 748.667 186.167 cv
734.351 177.057 746.305 165.667 746.305 165.667 cv
1 .756863 .4 rgb
f
740.327 224.861 mo
740.75 224.861 li
740.327 224.861 li
.909804 .317647 .0196078 rgb
f
757.144 228.942 mo
755.964 229.281 744.068 230.471 742.4 227.953 cv
740.96 225.78 739.827 221.932 741.169 218.571 cv
741.957 217.01 763.342 215.811 762.684 217.097 cv
761.402 222.402 760.379 228.012 757.144 228.942 cv
730.547 227.953 mo
728.879 230.471 716.983 229.281 715.803 228.942 cv
712.567 228.012 711.545 222.402 710.263 217.097 cv
709.605 215.811 730.99 217.01 731.778 218.571 cv
733.12 221.932 731.986 225.78 730.547 227.953 cv
763.069 214.851 mo
754.551 214.954 739.808 215.302 738.819 217.777 cv
738.322 219.02 734.893 219.16 734.456 217.887 cv
733.595 215.379 717.401 214.567 709.877 214.851 cv
705.79 215.006 707.161 217.623 709.1 217.623 cv
709.304 218.522 711.103 225.105 712.738 227.982 cv
714.372 230.861 722.92 230.591 727.244 230.321 cv
731.524 230.054 732.132 227.079 733.169 224.565 cv
734.559 221.195 738.465 221.209 739.778 224.565 cv
740.766 227.092 741.423 230.054 745.703 230.321 cv
750.027 230.591 758.574 230.861 760.209 227.982 cv
761.844 225.105 763.643 218.522 763.847 217.623 cv
765.786 217.623 767.161 214.802 763.069 214.851 cv
.988235 .988235 .988235 rgb
f
749.613 229.52 mo
746.396 229.52 743.205 229.169 742.4 227.953 cv
741.41 226.459 740.565 224.174 740.57 221.799 cv
740.572 220.719 740.75 219.622 741.169 218.571 cv
741.723 217.473 752.477 216.553 758.572 216.553 cv
761.008 216.553 762.7 216.7 762.699 217.041 cv
762.699 217.059 762.694 217.078 762.684 217.097 cv
761.402 222.402 760.379 228.012 757.144 228.942 cv
756.534 229.117 753.058 229.52 749.613 229.52 cv
755.052 217.251 mo
750.782 217.251 742.847 218.272 741.881 218.886 cv
740.724 221.915 741.648 225.45 743.093 227.63 cv
743.118 227.668 743.239 227.833 743.262 227.833 cv
743.267 227.833 743.268 227.826 743.263 227.809 cv
742.319 224.795 742.839 223.229 744.104 222.327 cv
744.104 222.34 744.103 222.354 744.103 222.368 cv
744.095 223.965 745.382 225.266 746.979 225.274 cv
746.984 225.274 746.989 225.274 746.994 225.274 cv
748.584 225.274 749.877 223.99 749.885 222.399 cv
749.888 221.82 749.721 221.28 749.43 220.826 cv
752.022 220.371 754.656 219.721 755.856 217.265 cv
755.607 217.256 755.337 217.251 755.052 217.251 cv
.894118 .803922 .721569 rgb
f
746.994 225.274 mo
746.989 225.274 746.984 225.274 746.979 225.274 cv
745.382 225.266 744.095 223.965 744.103 222.368 cv
744.103 222.354 744.104 222.34 744.104 222.327 cv
744.969 221.709 746.184 221.403 747.516 221.156 cv
747.567 221.531 747.844 221.851 748.234 221.939 cv
748.303 221.954 748.371 221.962 748.438 221.962 cv
748.864 221.962 749.247 221.668 749.344 221.236 cv
749.374 221.101 749.374 220.967 749.347 220.841 cv
749.375 220.836 749.403 220.831 749.43 220.826 cv
749.721 221.28 749.888 221.82 749.885 222.399 cv
749.877 223.99 748.584 225.274 746.994 225.274 cv
.54902 .505882 .501961 rgb
f
748.438 221.962 mo
748.371 221.962 748.303 221.954 748.234 221.939 cv
747.844 221.851 747.567 221.531 747.516 221.156 cv
748.11 221.047 748.727 220.949 749.347 220.841 cv
749.374 220.967 749.374 221.101 749.344 221.236 cv
749.247 221.668 748.864 221.962 748.438 221.962 cv
.956863 .996078 1 rgb
f
723.334 229.52 mo
719.888 229.52 716.413 229.117 715.803 228.942 cv
712.567 228.012 711.545 222.402 710.263 217.097 cv
710.253 217.078 710.248 217.059 710.248 217.041 cv
710.246 216.7 711.939 216.553 714.375 216.553 cv
720.469 216.553 731.223 217.472 731.778 218.571 cv
732.197 219.622 732.375 220.719 732.377 221.799 cv
732.381 224.174 731.536 226.459 730.547 227.953 cv
729.742 229.169 726.55 229.52 723.334 229.52 cv
714.374 217.218 mo
712.487 217.218 711.568 217.307 711.139 217.377 cv
711.222 217.725 711.305 218.075 711.387 218.423 cv
712.097 221.431 712.826 224.5 713.975 226.428 cv
712.212 216.864 721.83 222.509 724.357 217.736 cv
721.207 217.43 717.486 217.218 714.374 217.218 cv
725.566 218.893 mo
723.977 218.893 722.684 220.177 722.675 221.769 cv
722.667 223.365 723.954 224.666 725.551 224.675 cv
725.556 224.675 725.561 224.675 725.566 224.675 cv
727.156 224.675 728.448 223.391 728.457 221.799 cv
728.465 220.203 727.178 218.902 725.581 218.893 cv
725.576 218.893 725.571 218.893 725.566 218.893 cv
.894118 .803922 .721569 rgb
f
725.566 224.675 mo
725.561 224.675 725.556 224.675 725.551 224.675 cv
723.954 224.666 722.667 223.365 722.675 221.769 cv
722.684 220.177 723.977 218.893 725.566 218.893 cv
725.571 218.893 725.576 218.893 725.581 218.893 cv
727.178 218.902 728.465 220.203 728.457 221.799 cv
728.448 223.391 727.156 224.675 725.566 224.675 cv
726.778 219.369 mo
726.353 219.369 725.969 219.662 725.872 220.095 cv
725.76 220.595 726.074 221.092 726.575 221.205 cv
726.643 221.22 726.712 221.227 726.779 221.227 cv
727.204 221.227 727.588 220.934 727.685 220.501 cv
727.798 220.001 727.483 219.504 726.982 219.391 cv
726.914 219.376 726.845 219.369 726.778 219.369 cv
.54902 .505882 .501961 rgb
f
726.779 221.227 mo
726.712 221.227 726.643 221.22 726.575 221.205 cv
726.074 221.092 725.76 220.595 725.872 220.095 cv
725.969 219.662 726.353 219.369 726.778 219.369 cv
726.845 219.369 726.914 219.376 726.982 219.391 cv
727.483 219.504 727.798 220.001 727.685 220.501 cv
727.588 220.934 727.204 221.227 726.779 221.227 cv
.956863 .996078 1 rgb
f
713.975 226.428 mo
712.826 224.5 712.097 221.431 711.387 218.423 cv
711.305 218.075 711.222 217.725 711.139 217.377 cv
711.568 217.307 712.487 217.218 714.374 217.218 cv
717.486 217.218 721.207 217.43 724.357 217.736 cv
721.83 222.509 712.212 216.864 713.975 226.428 cv
.905882 .901961 .862745 rgb
f
743.262 227.833 mo
743.239 227.833 743.118 227.668 743.093 227.63 cv
741.648 225.45 740.724 221.915 741.881 218.886 cv
742.847 218.272 750.782 217.251 755.052 217.251 cv
755.337 217.251 755.607 217.256 755.856 217.265 cv
754.656 219.721 752.022 220.371 749.43 220.826 cv
749.371 220.734 749.307 220.645 749.238 220.56 cv
749.169 220.443 749.074 220.341 748.96 220.264 cv
748.448 219.789 747.763 219.497 747.01 219.493 cv
747.004 219.493 746.999 219.493 746.994 219.493 cv
745.419 219.493 744.135 220.755 744.104 222.327 cv
742.839 223.229 742.319 224.795 743.263 227.809 cv
743.268 227.826 743.267 227.833 743.262 227.833 cv
f
744.104 222.327 mo
744.135 220.755 745.419 219.493 746.994 219.493 cv
746.999 219.493 747.004 219.493 747.01 219.493 cv
747.763 219.497 748.448 219.789 748.96 220.264 cv
748.866 220.2 748.758 220.152 748.641 220.126 cv
748.572 220.11 748.504 220.103 748.437 220.103 cv
748.011 220.103 747.628 220.397 747.531 220.829 cv
747.506 220.94 747.502 221.05 747.516 221.156 cv
746.184 221.403 744.969 221.709 744.104 222.327 cv
749.347 220.841 mo
749.326 220.742 749.289 220.647 749.238 220.56 cv
749.307 220.645 749.371 220.734 749.43 220.826 cv
749.403 220.831 749.375 220.836 749.347 220.841 cv
.733333 .752941 .752941 rgb
f
747.516 221.156 mo
747.502 221.05 747.506 220.94 747.531 220.829 cv
747.628 220.397 748.011 220.103 748.437 220.103 cv
748.504 220.103 748.572 220.11 748.641 220.126 cv
748.758 220.152 748.866 220.2 748.96 220.264 cv
749.074 220.341 749.169 220.443 749.238 220.56 cv
749.289 220.647 749.326 220.742 749.347 220.841 cv
748.727 220.949 748.11 221.047 747.516 221.156 cv
.933333 .996078 1 rgb
f
757.367 179.983 mo
755.741 185.84 748.257 200.807 727.109 213.496 cv
705.96 226.185 713.606 250.262 716.534 261.975 cv
709.865 259.697 692.783 251.238 693.894 216.582 cv
694.447 199.346 711.941 145.602 749.884 167.294 cv
753.422 169.317 757.367 179.983 757.367 179.983 cv
cp
1 .756863 .4 rgb
f
766.368 332.643 mo
765.894 334.355 766.837 335.021 768.475 334.13 cv
808.812 312.19 li
810.45 311.299 812.162 309.188 812.637 307.476 cv
829.614 246.188 li
830.088 244.476 829.145 243.81 827.507 244.701 cv
787.171 266.642 li
785.533 267.533 783.82 269.643 783.346 271.355 cv
766.368 332.643 li
cp
.0313726 .0235294 .0392157 rgb
f
766.651 332.853 mo
766.176 334.566 767.12 335.232 768.758 334.341 cv
809.094 312.4 li
810.732 311.509 812.444 309.399 812.919 307.686 cv
829.896 246.399 li
830.371 244.687 829.427 244.021 827.789 244.912 cv
787.453 266.852 li
785.815 267.743 784.102 269.854 783.628 271.566 cv
766.651 332.853 li
cp
.788235 .776471 .8 rgb
f
766.65 332.853 mo
783.628 271.566 li
784.102 269.854 785.815 267.743 787.453 266.852 cv
827.789 244.912 li
828.82 244.351 829.573 244.409 829.874 244.953 cv
829.583 245.001 829.255 245.112 828.885 245.314 cv
788.548 267.254 li
786.91 268.145 785.198 270.256 784.724 271.968 cv
767.746 333.256 li
767.57 333.891 767.591 334.38 767.768 334.701 cv
766.772 334.867 766.283 334.179 766.65 332.853 cv
cp
.894118 .882353 .917647 rgb
f
820.086 267.692 mo
822.817 262.602 826.975 257.451 829.209 255.868 cv
830.649 254.849 828.279 253.1 826.23 253.82 cv
822.786 255.03 820.272 257.823 820.272 257.823 cv
820.086 267.692 li
cp
.729412 .47451 .337255 rgb
f
800.696 254.188 mo
800.567 251.958 803.73 250.379 804.408 250.327 cv
804.93 248.164 808.241 246.586 809.36 246.817 cv
810.121 245.492 811.242 244.695 813.671 245.331 cv
817.607 246.361 819.231 246.038 820.356 248.234 cv
821.482 250.431 824.545 256.7 824.805 258.459 cv
825.065 260.217 821.159 264.697 818.286 271.299 cv
815.671 277.31 812.701 279.33 810.51 282.602 cv
803.132 300.414 801.358 332.444 799.232 344.403 cv
798.323 349.522 784.83 363.082 780.986 360.788 cv
779.141 359.687 771.902 341.973 775.649 334.531 cv
789.302 307.413 795.26 294.503 801.291 280.128 cv
802.893 276.309 798.215 280.483 804.9 262.53 cv
804.154 260.391 804.468 258.77 804.468 258.77 cv
804.468 258.77 802.21 258.882 801.931 258.602 cv
797.492 261.03 li
797.678 257.586 799.778 254.608 800.696 254.188 cv
cp
.870588 .607843 .439216 rgb
f
809.36 246.817 mo
812.549 247.961 814.573 248.611 816.979 249.455 cv
818.403 249.954 820.393 255.429 821.519 257.625 cv
819.679 255.371 818.562 251.3 816.219 249.957 cv
814.068 248.723 811.427 247.972 809.36 246.817 cv
cp
.729412 .47451 .337255 rgb
f
804.495 250.342 mo
804.741 248.399 809.452 249.436 811.868 250.708 cv
813.223 251.421 816.286 258.455 817.411 260.652 cv
815.572 258.398 813.481 252.361 811.026 251.293 cv
808.342 250.125 805.482 250.222 804.495 250.342 cv
cp
f
800.696 254.188 mo
800.696 254.188 806.082 253.545 807.365 254.125 cv
808.649 254.705 812.28 260.788 812.402 261.015 cv
811.375 258.318 808.412 253.675 807.654 253.388 cv
806.895 253.101 802.901 253.054 800.696 254.188 cv
cp
f
775.649 334.531 mo
789.641 307.585 797.05 289.427 801.291 280.128 cv
803.009 276.36 798.215 280.483 804.9 262.53 cv
804.154 260.391 804.468 258.77 804.468 258.77 cv
804.468 258.77 802.21 258.882 801.931 258.602 cv
797.492 261.03 li
797.519 260.522 797.598 260.03 797.698 259.548 cv
799.078 258.643 800.705 257.476 801.691 257.582 cv
803.091 257.733 804.444 257.587 805.826 257.443 cv
806.196 259.202 806.896 262.151 806.596 262.898 cv
805.679 265.177 804.69 267.615 804.283 270.058 cv
803.528 274.587 802.285 277.551 805.392 280.969 cv
800.553 286.507 784.962 315.97 780.905 330.37 cv
780.342 332.368 777.18 346.502 785.414 354.736 cv
787.337 356.659 797.775 345.849 798.913 345.474 cv
795.012 352.844 784.069 362.628 780.985 360.788 cv
779.141 359.687 771.809 341.925 775.649 334.531 cv
cp
f
651.625 343.315 mo
654.402 336.929 665.724 312.189 674.508 301.777 cv
680.56 286.171 686.922 282.59 692.648 278.712 cv
699.092 292.324 697.264 302.45 696.922 305.453 cv
694.81 307.762 693.234 309.288 691.427 311.321 cv
680.389 323.751 673.44 340.784 669.461 346.21 cv
673.265 351.397 676.075 397.723 681.654 401.974 cv
682.481 402.023 683.037 402.082 683.081 402.067 cv
683.298 401.995 690.362 395.729 692.016 394.522 cv
692.654 393.111 693.361 391.93 696.018 392.244 cv
698.019 392.481 700.672 392.726 702.93 392.471 cv
705.839 392.142 705.882 392.192 706.791 393.139 cv
708.272 394.682 710.679 397.345 711.767 398.634 cv
713.857 401.111 716.19 403.155 716.508 403.538 cv
717.035 404.172 714.47 406.548 711.632 404.035 cv
708.894 401.609 708.637 400.497 708.637 400.497 cv
708.167 400.071 704.573 397.728 704.219 397.18 cv
702.545 397.77 699.692 397.276 698.956 397.559 cv
700.953 397.924 704.774 398.486 706.49 400.173 cv
707.516 401.181 708.496 403.603 710.876 405.541 cv
712.51 406.872 713.127 408.554 714.679 409.849 cv
716.046 410.99 713.97 413.283 711.061 410.84 cv
709.769 409.756 708.977 408.971 708.013 407.633 cv
705.386 405.538 703.274 403.49 702.655 403.529 cv
701.69 403.591 695.734 403.111 695.669 402.92 cv
698.588 404.468 701.958 405.569 702.821 405.966 cv
703.363 406.215 706.718 410.232 707.014 410.516 cv
708.087 411.545 710.207 413.824 710.871 414.411 cv
712.193 415.549 709.923 419.077 704.824 412.589 cv
702.041 410.74 700.947 409.666 700.633 409.589 cv
697.243 408.753 694.149 407.958 694.546 408.21 cv
694.944 408.462 700.195 410.138 701.055 410.832 cv
701.915 411.527 704.448 414.884 705.157 415.343 cv
707.555 416.896 708.276 417.868 708.276 417.868 cv
706.271 420.022 702.891 417.495 702.059 416.278 cv
700.798 415.728 699.187 414.331 698.289 413.458 cv
696.814 413.074 694.639 413.112 692.901 413.148 cv
689.395 413.532 683.367 417.475 676.718 410.909 cv
676.243 410.572 675.71 409.981 675.127 409.148 cv
675.063 409.071 li
674.135 407.915 673.579 406.944 673.307 406.125 cv
665.678 391.852 646.686 354.669 651.625 343.315 cv
cp
.870588 .607843 .439216 rgb
f
704.824 412.589 mo
702.041 410.74 700.947 409.666 700.633 409.589 cv
697.707 408.867 695.008 408.178 694.577 408.164 cv
695.599 406.4 698.283 408.575 701.315 408.596 cv
703.269 410.741 704.094 410.852 705.622 412.032 cv
708.167 415.651 710.079 415.479 711.247 414.824 cv
711.667 416.308 709.362 418.363 704.824 412.589 cv
cp
.729412 .47451 .337255 rgb
f
711.061 410.84 mo
709.77 409.756 708.977 408.971 708.013 407.633 cv
705.386 405.538 703.274 403.489 702.655 403.529 cv
701.782 403.585 696.847 403.199 695.856 402.983 cv
695.52 402.982 695.563 402.312 695.664 402.081 cv
696.198 400.865 698.141 401.759 699.887 402.078 cv
701.898 402.446 702.219 402.062 703.557 401.683 cv
703.972 402.817 704.775 403.646 705.81 404.621 cv
707.349 406.071 708.055 406.475 709.175 406.875 cv
709.29 407.732 709.76 408.677 710.957 409.824 cv
712.388 411.196 713.483 410.863 714.886 410.294 cv
715.309 412.237 713.238 412.668 711.061 410.84 cv
cp
f
705.056 395.17 mo
705.716 396.015 706.969 398.49 709.794 399.613 cv
709.84 401.043 710.902 402.234 712.257 403.049 cv
713.631 403.876 715.494 404.203 716.567 403.843 cv
716.265 404.856 713.939 406.078 711.632 404.035 cv
708.894 401.609 708.637 400.497 708.637 400.497 cv
708.168 400.071 704.573 397.728 704.219 397.18 cv
702.789 397.684 700.052 397.477 698.956 397.559 cv
698.997 396.55 700.726 396.526 701.656 396.334 cv
702.839 396.089 703.955 395.558 705.056 395.17 cv
cp
f
691.243 411.666 mo
693.596 410.665 696.633 411.241 698.862 412.425 cv
700.252 414.51 702.035 414.983 702.372 415.448 cv
704 417.697 705.935 418.635 708.214 417.793 cv
708.276 417.868 li
706.271 420.022 702.891 417.495 702.059 416.278 cv
700.798 415.728 699.187 414.331 698.289 413.458 cv
696.814 413.074 694.639 413.112 692.9 413.148 cv
689.395 413.532 683.367 417.475 676.718 410.909 cv
676.243 410.572 675.71 409.981 675.127 409.148 cv
675.063 409.071 li
674.309 408.132 673.812 407.321 673.502 406.609 cv
678.348 411.185 684.522 414.527 691.243 411.666 cv
cp
f
691.836 277.256 mo
689.106 278.262 680.582 283.123 673.424 301.127 cv
679.931 307.417 686.35 311.34 690.777 313.49 cv
692.513 314.334 696.742 306.069 696.742 306.069 cv
696.742 306.069 700.32 293.101 691.836 277.256 cv
cp
0 .403922 .447059 rgb
f
751.003 169.293 mo
753.944 181.057 755.492 187.403 742.026 200.095 cv
728.559 212.788 702.401 217.431 714.164 258.913 cv
705.187 244.364 702.246 222.23 714.784 212.169 cv
727.321 202.108 754.254 183.688 751.003 169.293 cv
cp
1 .807843 .580392 rgb
f
749.765 167.746 mo
746.979 178.89 743.109 182.141 729.024 192.356 cv
714.938 202.572 701.472 217.431 705.032 232.91 cv
701.627 221.301 705.342 204.739 714.629 196.845 cv
723.916 188.951 745.431 175.949 749.765 167.746 cv
cp
f
747.245 166.579 mo
738.003 170.044 697.281 184.774 700.747 219.43 cv
696.993 203.835 703.346 168.6 747.245 166.579 cv
cp
f
383.593 548.021 mo
383.469 550.352 382.262 552.369 380.486 553.61 cv
379.201 554.508 369.113 566.656 367.426 566.566 cv
354.244 472.648 li
356.286 469.702 366.857 459.641 368.372 458.389 cv
369.731 457.264 371.501 456.627 373.402 456.728 cv
381.132 457.14 li
385.151 457.354 388.235 460.784 388.021 464.803 cv
383.593 548.021 li
cp
.219608 .0235294 .0431373 rgb
f
370.842 560.772 mo
370.629 564.79 367.198 567.875 363.179 567.661 cv
355.449 567.249 li
351.43 567.036 348.346 563.605 348.56 559.586 cv
352.987 476.368 li
353.201 472.35 356.632 469.265 360.651 469.479 cv
368.381 469.891 li
372.4 470.104 375.484 473.535 375.27 477.554 cv
370.842 560.772 li
cp
.266667 .0313726 .0431373 rgb
f
383.87 457.656 mo
383.888 456.978 382.036 455.85 380.66 455.777 cv
372.929 455.365 li
372.765 455.356 372.602 455.351 372.439 455.351 cv
370.297 455.351 368.32 456.094 366.76 457.341 cv
365.017 458.736 356.64 466.769 353.436 470.728 cv
353.127 471.077 352.851 471.455 352.598 471.85 cv
352.496 471.998 li
352.539 471.94 li
351.748 473.207 351.253 474.68 351.168 476.271 cv
347.661 542.198 li
347.457 543.844 349.349 544.758 349.477 542.341 cv
352.987 476.368 li
353.201 472.35 356.632 469.265 360.651 469.479 cv
368.381 469.891 li
369.566 469.954 370.665 470.302 371.627 470.857 cv
371.696 470.691 371.766 470.527 371.835 470.362 cv
372.048 470.412 li
372.048 470.412 383.627 458.217 383.87 457.656 cv
cp
.909804 .317647 .0196078 rgb
f
352.496 471.998 mo
352.483 472.016 li
352.496 471.998 li
cp
.0235294 .133333 .2 rgb
f
371.751 474.34 mo
370.977 481.891 li
370.881 482.823 370.104 483.527 369.169 483.527 cv
368.978 483.517 li
357.805 482.371 li
357.32 482.321 356.885 482.086 356.578 481.709 cv
356.27 481.332 356.129 480.858 356.178 480.374 cv
356.952 472.822 li
357.048 471.89 357.825 471.187 358.76 471.187 cv
358.951 471.197 li
370.124 472.343 li
370.609 472.393 371.044 472.628 371.351 473.005 cv
371.659 473.382 371.8 473.856 371.751 474.34 cv
cp
370.404 469.625 mo
359.229 468.479 li
356.727 468.222 354.491 470.042 354.234 472.544 cv
353.46 480.094 li
353.204 482.596 355.024 484.832 357.526 485.089 cv
368.7 486.235 li
371.202 486.492 373.438 484.671 373.695 482.17 cv
374.469 474.619 li
374.726 472.117 372.906 469.881 370.404 469.625 cv
cp
0 0 0 rgb
f
372.092 474.112 mo
371.318 481.663 li
371.222 482.596 370.446 483.299 369.511 483.299 cv
369.32 483.289 li
358.147 482.143 li
357.662 482.093 357.226 481.858 356.919 481.481 cv
356.612 481.104 356.47 480.63 356.52 480.146 cv
357.294 472.595 li
357.39 471.663 358.166 470.959 359.101 470.959 cv
359.292 470.969 li
370.465 472.115 li
370.95 472.165 371.386 472.4 371.693 472.777 cv
372.001 473.154 372.142 473.628 372.092 474.112 cv
cp
370.745 469.397 mo
359.571 468.251 li
357.069 467.994 354.833 469.814 354.576 472.316 cv
353.802 479.867 li
353.545 482.369 355.365 484.605 357.867 484.861 cv
369.042 486.007 li
371.544 486.264 373.78 484.444 374.036 481.942 cv
374.811 474.392 li
375.067 471.89 373.247 469.653 370.745 469.397 cv
cp
f
368.629 488.879 mo
356.251 487.397 li
357.046 480.766 li
369.425 482.248 li
368.629 488.879 li
cp
.34902 .0666667 .0941176 rgb
f
347.747 537.427 mo
347.718 537.887 347.321 538.236 346.861 538.207 cv
346.401 538.177 346.052 537.78 346.081 537.32 cv
347.242 519.294 li
347.271 518.833 347.668 518.484 348.128 518.514 cv
348.589 518.544 348.938 518.941 348.908 519.401 cv
347.747 537.427 li
cp
.847059 .615686 .145098 rgb
f
427.789 655.086 mo
427.683 656.473 425.457 658.869 423.555 661.512 cv
421.653 658.869 419.427 656.473 419.321 655.086 cv
414.929 597.689 425.189 570.572 420.116 547.237 cv
420.116 547.237 li
420.05 538.623 419.852 524.246 419.254 515.619 cv
418.88 510.224 419.52 506.366 420.48 503.652 cv
422.662 503.302 424.21 504.884 424.171 510.675 cv
424.098 521.735 426.804 547.745 427.34 552.788 cv
427.213 553.32 427.082 553.841 426.961 554.397 cv
421.888 577.732 432.181 597.689 427.789 655.086 cv
cp
423.555 678.133 mo
422.132 673.387 li
422.132 673.387 422.78 672.382 423.555 671.154 cv
424.33 672.382 424.978 673.387 424.978 673.387 cv
423.555 678.133 li
cp
461.392 675.169 mo
461.392 675.169 463.265 671.394 464.227 668.177 cv
470.859 557.793 li
470.706 555.063 470.12 552.497 469.211 550.126 cv
469.405 550.092 469.586 550.062 469.782 550.028 cv
470.266 537.84 468.446 476.303 465.791 463.261 cv
463.137 450.219 452.669 424.431 452.669 424.431 cv
450.342 424.431 li
451.589 420.076 452.334 417.405 452.334 417.405 cv
384.841 417.405 li
384.841 417.405 378.086 451.798 376.297 465.531 cv
374.636 478.275 379.829 531.763 377.049 552.775 cv
376.718 554.032 376.478 555.335 376.343 556.68 cv
376.312 556.806 376.283 556.937 376.251 557.058 cv
376.311 557.069 li
376.29 557.31 376.264 557.549 376.251 557.793 cv
382.883 668.177 li
383.845 671.394 385.718 675.169 385.718 675.169 cv
385.562 675.984 382.631 682.038 381.493 682.709 cv
384.638 690.524 li
384.717 708.204 li
416.227 709.235 li
419.134 689.838 li
423.555 683.021 li
427.976 689.838 li
430.883 709.235 li
462.393 708.204 li
462.472 690.524 li
465.617 682.709 li
464.479 682.038 461.548 675.984 461.392 675.169 cv
cp
.0235294 .133333 .2 rgb
f
427.789 655.086 mo
427.683 656.473 425.457 658.869 423.555 661.512 cv
421.653 658.869 419.427 656.473 419.321 655.086 cv
414.929 597.689 425.189 570.572 420.116 547.237 cv
420.116 547.237 li
420.05 538.623 419.852 524.246 419.254 515.619 cv
418.88 510.224 419.52 506.366 420.48 503.652 cv
422.662 503.302 424.21 504.884 424.171 510.675 cv
424.098 521.735 426.804 547.745 427.34 552.788 cv
427.213 553.32 427.082 553.841 426.961 554.397 cv
421.888 577.732 432.181 597.689 427.789 655.086 cv
cp
423.555 678.133 mo
422.132 673.387 li
422.132 673.387 422.78 672.382 423.555 671.154 cv
424.33 672.382 424.978 673.387 424.978 673.387 cv
423.555 678.133 li
cp
442.696 703.142 mo
439.417 700.078 435.449 695.72 436.084 690.814 cv
436.768 685.526 441.422 682.159 445.864 679.728 cv
441.087 678.288 436.234 677.142 431.844 674.675 cv
431.432 674.444 431.468 673.774 431.818 673.514 cv
434.249 671.708 435.902 669.304 438.377 667.607 cv
430.201 659.629 433.619 645.587 434.166 635.482 cv
434.924 621.476 430.313 607.729 432.357 593.386 cv
432.48 592.518 438.696 570.091 442.909 575.341 cv
434.125 564.396 428.454 551.312 429.989 536.775 cv
431.201 525.306 430.856 511.324 436.157 500.789 cv
437.624 497.872 439.7 496.816 437.323 494.221 cv
433.401 489.94 415.188 491.783 410.574 493.721 cv
406.124 495.592 409.03 496.49 411.473 500.027 cv
418.778 510.6 415.592 525.968 414.624 538.005 cv
413.73 549.115 412.673 559.626 406.334 569.139 cv
402.526 574.853 404.271 572.593 408.144 576.837 cv
416.265 585.737 408.151 606.998 408.359 617.88 cv
408.591 629.965 412.327 641.751 412.417 653.894 cv
412.453 658.868 413.941 666.933 411.243 671.33 cv
408.29 676.142 403.292 673.391 399.666 676.556 cv
394.799 680.805 412.146 679.381 414.172 680.392 cv
422.282 684.439 409.954 688.545 406.341 688.371 cv
403.169 688.217 393.453 686.096 394.207 692.018 cv
401.665 691.158 406.994 699.873 405.532 706.456 cv
405.352 707.269 405.136 708.07 404.906 708.865 cv
416.227 709.235 li
419.134 689.838 li
423.555 683.021 li
427.976 689.838 li
430.883 709.235 li
449.736 708.618 li
447.267 706.979 444.893 705.195 442.696 703.142 cv
cp
.0156863 .105882 .14902 rgb
f
463.72 455.258 mo
459.725 441.817 452.669 424.431 452.669 424.431 cv
450.342 424.431 li
451.589 420.076 452.334 417.405 452.334 417.405 cv
384.841 417.405 li
384.841 417.405 381.696 433.421 379.129 447.958 cv
420.339 477.275 453.013 460.668 463.72 455.258 cv
cp
f
419.362 731.603 mo
419.362 727.45 419.196 716.901 417.421 708.671 cv
398.762 703.196 384.73 706.815 383.713 713.044 cv
376.795 717.457 363.116 725.159 367.946 731.769 cv
419.362 731.603 li
cp
.878431 .878431 .878431 rgb
f
418.365 731.603 mo
417.131 718.936 412.716 710.628 410.301 708.467 cv
403.023 705.322 391.535 704.891 385.784 707.64 cv
385.784 707.64 384.465 710.173 382.716 713.044 cv
375.798 717.457 362.119 725.159 366.95 731.769 cv
418.365 731.603 li
cp
1 1 1 rgb
f
420.726 733.633 mo
420.726 734.877 419.718 735.886 418.474 735.886 cv
366.829 735.886 li
365.585 735.886 364.576 734.877 364.576 733.633 cv
364.576 732.389 365.585 731.381 366.829 731.381 cv
418.474 731.381 li
419.718 731.381 420.726 732.389 420.726 733.633 cv
cp
.878431 .878431 .878431 rgb
f
409.933 712.423 mo
409.612 711.138 409.209 709.886 408.841 708.626 cv
406.789 707.862 404.5 707.236 402.047 706.811 cv
395.669 705.706 389.74 706.201 385.979 707.858 cv
385.426 709.102 384.897 710.36 384.416 711.63 cv
387.974 709.387 395.006 709.354 402.266 710.613 cv
405.26 711.132 407.896 712.083 410.122 713.262 cv
410.002 712.699 410.002 712.699 409.933 712.423 cv
cp
f
410.397 713.799 mo
408.344 713.035 403.071 711.851 400.618 711.426 cv
394.241 710.321 387.786 710.714 384.025 712.371 cv
382.047 714.349 li
385.605 712.106 403.804 713.14 411.386 717.316 cv
411.621 716.684 410.397 713.799 410.397 713.799 cv
cp
f
430.166 731.603 mo
430.166 727.45 430.333 716.901 432.107 708.671 cv
450.766 703.196 464.798 706.815 465.815 713.044 cv
472.733 717.457 486.412 725.159 481.582 731.769 cv
430.166 731.603 li
cp
f
431.163 731.603 mo
432.397 718.936 436.812 710.628 439.227 708.467 cv
446.505 705.322 457.993 704.891 463.744 707.64 cv
463.744 707.64 465.063 710.173 466.812 713.044 cv
473.73 717.457 487.409 725.159 482.578 731.769 cv
431.163 731.603 li
cp
1 1 1 rgb
f
428.802 733.633 mo
428.802 734.877 429.81 735.886 431.055 735.886 cv
482.699 735.886 li
483.943 735.886 484.952 734.877 484.952 733.633 cv
484.952 732.389 483.943 731.381 482.699 731.381 cv
431.055 731.381 li
429.81 731.381 428.802 732.389 428.802 733.633 cv
cp
.878431 .878431 .878431 rgb
f
439.595 712.423 mo
439.916 711.138 440.319 709.886 440.687 708.626 cv
442.74 707.862 445.029 707.236 447.482 706.811 cv
453.859 705.706 459.788 706.201 463.549 707.858 cv
464.102 709.102 464.631 710.36 465.112 711.63 cv
461.554 709.387 454.522 709.354 447.262 710.613 cv
444.268 711.132 441.632 712.083 439.406 713.262 cv
439.526 712.699 439.526 712.699 439.595 712.423 cv
cp
f
439.131 713.799 mo
441.184 713.035 446.457 711.851 448.91 711.426 cv
455.287 710.321 461.743 710.714 465.503 712.371 cv
467.481 714.349 li
463.923 712.106 445.724 713.14 438.142 717.316 cv
437.907 716.684 439.131 713.799 439.131 713.799 cv
cp
f
475.97 294.311 mo
480.743 297.294 487.306 306.244 489.095 324.143 cv
490.885 342.042 515.347 371.874 505.801 389.773 cv
496.255 407.672 481.041 386.789 480.146 379.63 cv
479.251 372.47 476.865 355.168 473.881 349.202 cv
470.898 343.235 463.44 331.601 463.44 331.601 cv
475.97 294.311 li
cp
.976471 .72549 .635294 rgb
f
462.095 332.91 mo
468.984 343.214 li
468.984 343.214 490.111 335.967 495.025 327.491 cv
493.674 316.436 484.092 295.677 476.231 294.571 cv
473.774 304.521 464.06 329.962 462.095 332.91 cv
cp
.827451 .258824 .00784314 rgb
f
367.077 301.965 mo
367.077 301.965 348.569 306.096 350.092 335.161 cv
351.351 359.17 349.464 370.234 349.464 385.746 cv
349.464 389.92 352.505 402.855 356.61 406.329 cv
370.483 418.07 383.009 392.331 378.548 387.303 cv
372.136 380.078 378.401 372.62 376.232 341.296 cv
375.784 334.82 376.836 324.583 376.836 324.583 cv
367.077 301.965 li
cp
.976471 .72549 .635294 rgb
f
381.013 332.946 mo
379.549 342.658 li
379.549 342.658 353.647 340.687 348.041 329.123 cv
347.211 314.386 358.4 294.139 366.326 293.68 cv
367.96 303.798 379.295 329.847 381.013 332.946 cv
cp
.827451 .258824 .00784314 rgb
f
380.622 444.827 mo
375.081 442.902 386.488 438.644 380.556 427.694 cv
379.777 426.255 383.862 422.27 381.317 417.504 cv
377.656 410.651 383.446 415.375 383.443 403.819 cv
383.427 350.636 374.391 310.892 374.391 310.892 cv
464.604 310.892 li
464.604 310.892 454.471 387.536 462.228 445.41 cv
427.623 464.502 380.622 444.827 380.622 444.827 cv
cp
f
391.039 282.282 mo
449.864 282.282 li
460.203 286.539 477.402 293.832 476.547 294.903 cv
472.289 310.338 464.76 346.803 440.522 346.803 cv
399.493 346.803 li
372.034 346.803 368.302 310.126 364.044 294.69 cv
363.868 293.852 380.894 286.551 391.039 282.282 cv
cp
.909804 .317647 .0196078 rgb
f
381.621 428.454 mo
381.621 428.454 401.392 440.621 421.619 445.944 cv
409.3 445.792 387.856 442.75 381.621 428.454 cv
cp
.756863 .219608 .00784314 rgb
f
359.411 472.348 mo
454.132 282.906 li
454.132 282.906 466.882 284.727 469.615 290.192 cv
465.516 301.121 373.072 469.615 369.429 474.169 cv
361.688 472.803 359.411 472.348 359.411 472.348 cv
cp
.34902 .0666667 .0941176 rgb
f
435.943 319.282 mo
380.194 430.781 li
380.96 431.089 381.727 431.397 382.493 431.705 cv
385.458 432.898 388.389 434.228 391.342 435.497 cv
408.537 404.467 432.252 361.106 449.089 329.732 cv
444.757 326.175 440.378 322.697 435.943 319.282 cv
cp
.266667 .0313726 .0431373 rgb
f
417.196 238.079 mo
416.749 238.079 li
417.196 238.079 li
.909804 .317647 .0196078 rgb
f
434.677 262.738 mo
438.452 276.94 li
449.15 282.529 li
420.171 305.736 li
390.459 282.526 li
401.878 276.996 li
405.665 262.738 li
434.677 262.738 li
cp
1 .780392 .690196 rgb
f
434.677 262.738 mo
438.452 276.94 li
449.941 282.314 li
420.171 305.736 li
420.037 285.059 li
403.304 271.626 li
405.665 262.738 li
434.677 262.738 li
cp
.827451 .592157 .533333 rgb
f
385.068 223.157 mo
386.025 222.98 387.009 223.238 387.957 223.846 cv
388.514 203.193 392.804 182.227 420.945 182.227 cv
447.754 182.227 453.484 203.313 453.94 224.073 cv
454.988 223.304 456.09 222.96 457.158 223.157 cv
460.564 223.786 460.831 229.483 459.607 236.115 cv
458.382 242.747 456.129 247.804 452.723 247.175 cv
451.701 246.986 450.827 246.321 450.136 245.306 cv
450.136 261.069 433.606 277.395 420.945 277.395 cv
408.369 277.395 391.865 261.631 391.865 245.615 cv
391.213 246.455 390.418 247.006 389.503 247.175 cv
386.097 247.804 384.33 242.747 383.105 236.115 cv
381.881 229.483 381.662 223.786 385.068 223.157 cv
1 .780392 .690196 rgb
f
391.87 246.015 mo
391.218 246.855 390.423 247.406 389.508 247.575 cv
386.231 248.18 384.464 242.756 383.105 236.508 cv
385.78 241.893 388.144 246.878 390.87 242.093 cv
391.071 241.74 390.296 226.405 390.691 226.353 cv
390.553 225.865 388.089 224.7 387.964 224.206 cv
388.309 211.486 390.079 198.655 397.966 190.679 cv
395.733 198.962 394.453 208.588 394.453 218.859 cv
394.453 249.885 406.529 269.998 420.925 269.998 cv
435.321 269.998 446.585 249.885 446.585 218.859 cv
446.585 208.44 445.267 198.685 442.974 190.321 cv
450.594 197.639 453.734 209.514 454.062 224.472 cv
453.552 224.828 450.766 226.803 450.766 226.803 cv
451.16 226.855 450.157 241.111 450.317 241.484 cv
451.665 244.631 454.806 245.157 458.797 240.088 cv
457.553 245.493 455.158 248.024 452.728 247.575 cv
451.706 247.386 450.832 246.721 450.141 245.706 cv
450.141 261.468 433.611 277.38 420.95 277.38 cv
408.374 277.38 391.87 262.031 391.87 246.015 cv
.858824 .631373 .552941 rgb
f
401.978 221.383 mo
401.996 222.225 404.884 221.221 408.486 221.29 cv
412.088 221.358 414.991 222.472 415.022 221.631 cv
415.078 220.091 412.487 217.513 408.885 217.444 cv
405.283 217.376 401.944 219.741 401.978 221.383 cv
cp
f
439.584 221.733 mo
439.436 222.564 436.55 221.277 432.95 221.278 cv
429.349 221.279 426.585 222.581 426.545 221.738 cv
426.413 218.893 429.341 217.046 432.942 217.045 cv
436.543 217.044 440.047 219.142 439.584 221.733 cv
cp
f
401.983 220.71 mo
401.952 222.364 405.01 219.868 408.612 219.936 cv
412.214 220.005 414.995 222.612 415.027 220.957 cv
415.058 219.303 412.189 216.558 408.587 216.49 cv
404.985 216.421 402.015 219.055 401.983 220.71 cv
cp
.203922 .00784314 .0117647 rgb
f
439.596 220.71 mo
439.627 222.364 436.569 219.868 432.967 219.936 cv
429.366 220.005 426.584 222.612 426.553 220.957 cv
426.521 219.303 429.39 216.558 432.992 216.49 cv
436.594 216.421 439.565 219.055 439.596 220.71 cv
cp
.227451 .054902 .00784314 rgb
f
432.038 231.76 mo
432.038 233.415 433.38 234.757 435.034 234.757 cv
436.689 234.757 438.031 233.415 438.031 231.76 cv
438.031 230.106 436.689 228.764 435.034 228.764 cv
433.38 228.764 432.038 230.106 432.038 231.76 cv
.184314 .0117647 0 rgb
f
432.642 230.877 mo
432.642 231.711 433.317 232.386 434.151 232.386 cv
434.985 232.386 435.66 231.711 435.66 230.877 cv
435.66 230.043 434.985 229.368 434.151 229.368 cv
433.317 229.368 432.642 230.043 432.642 230.877 cv
1 1 1 rgb
f
408.375 232.226 mo
408.375 233.881 409.717 235.222 411.372 235.222 cv
413.026 235.222 414.368 233.881 414.368 232.226 cv
414.368 230.571 413.026 229.23 411.372 229.23 cv
409.717 229.23 408.375 230.571 408.375 232.226 cv
.184314 .0117647 0 rgb
f
408.785 231.342 mo
408.785 232.176 409.461 232.852 410.294 232.852 cv
411.128 232.852 411.803 232.176 411.803 231.342 cv
411.803 230.509 411.128 229.833 410.294 229.833 cv
409.461 229.833 408.785 230.509 408.785 231.342 cv
1 1 1 rgb
f
426.42 251.373 mo
425.99 253.094 423.652 254.409 420.83 254.409 cv
418.009 254.409 415.67 253.094 415.241 251.373 cv
426.42 251.373 li
cp
.858824 .631373 .552941 rgb
f
455.768 220.885 mo
455.768 220.885 468.202 198.648 451.01 178.52 cv
430.628 158.805 425.71 152.382 425.43 147.07 cv
420.678 149.586 411.846 160.356 411.287 162.872 cv
409.61 162.313 408.492 158.958 409.33 156.722 cv
404.298 158.679 396.75 168.184 395.912 172.097 cv
394.793 170.979 394.793 170.14 395.073 168.743 cv
390.6 172.097 372.194 193.743 386.985 221.146 cv
388.447 222.128 390.615 223.624 390.615 223.624 cv
390.837 235.649 li
394.793 222.138 li
394.793 222.138 389.963 198.924 398.31 202.104 cv
409.564 206.39 431.774 205.111 442.398 201.476 cv
453.021 197.842 447.35 220.74 447.35 222.417 cv
447.35 224.095 450.984 235.556 450.984 235.556 cv
451.631 223.759 li
455.768 220.885 li
.203922 .00784314 .0117647 rgb
f
457.579 195.936 mo
451.709 200.968 436.333 206.279 419.839 206 cv
403.346 205.72 369.799 200.688 393.561 174.131 cv
393.002 176.088 389.088 206.559 453.945 195.656 cv
437.731 196.495 376.229 191.463 407.539 162.11 cv
407.259 164.905 400.27 179.442 448.913 192.861 cv
432.14 185.592 400.27 170.776 424.312 152.046 cv
423.474 155.96 426.828 168.26 437.451 175.249 cv
448.074 182.238 456.524 189.333 457.579 195.936 cv
cp
.227451 .054902 .00784314 rgb
f
393.559 228.275 mo
392.864 226.65 415.473 228.165 416.306 230.136 cv
417.725 234.38 416.527 239.239 415.005 241.983 cv
413.241 245.162 400.664 243.66 399.416 243.232 cv
395.996 242.058 394.915 234.973 393.559 228.275 cv
426.235 230.136 mo
427.068 228.165 449.678 226.65 448.983 228.275 cv
447.627 234.973 446.546 242.058 443.125 243.232 cv
441.877 243.66 429.3 245.162 427.537 241.983 cv
426.015 239.239 424.816 234.38 426.235 230.136 cv
392.329 228.938 mo
392.545 230.074 394.448 238.386 396.176 242.02 cv
397.904 245.655 406.941 245.314 411.513 244.973 cv
416.038 244.636 416.732 240.896 417.777 237.705 cv
419.165 233.467 423.294 233.449 424.764 237.705 cv
425.861 240.879 426.504 244.636 431.029 244.973 cv
435.601 245.314 444.637 245.655 446.365 242.02 cv
448.094 238.386 449.996 230.074 450.212 228.938 cv
452.262 228.938 453.711 225.634 449.39 225.439 cv
441.435 225.08 424.314 226.106 423.404 229.273 cv
422.942 230.879 419.317 230.703 418.791 229.133 cv
417.745 226.008 402.157 225.569 393.152 225.439 cv
388.826 225.377 390.28 228.938 392.329 228.938 cv
.988235 .537255 .168627 rgb
f
435.164 243.962 mo
431.762 243.962 428.388 243.518 427.537 241.983 cv
426.49 240.097 425.597 237.211 425.602 234.212 cv
425.604 232.849 425.792 231.462 426.235 230.136 cv
426.821 228.749 438.191 227.588 444.635 227.588 cv
445.226 227.588 445.776 227.598 446.271 227.618 cv
446.251 227.899 446.229 228.176 446.207 228.455 cv
445.771 228.438 445.252 228.427 444.635 228.427 cv
441.925 228.427 438.779 228.609 435.892 228.889 cv
435.62 228.808 435.332 228.764 435.034 228.764 cv
433.38 228.764 432.038 230.106 432.038 231.76 cv
432.038 233.415 433.38 234.757 435.034 234.757 cv
436.664 234.757 437.989 233.456 438.03 231.836 cv
441.153 232.428 444.8 231.907 445.24 236.458 cv
444.88 238.666 444.452 240.78 443.96 242.8 cv
443.698 242.985 443.42 243.13 443.125 243.232 cv
442.48 243.453 438.805 243.962 435.164 243.962 cv
.956863 .890196 .847059 rgb
f
443.96 242.8 mo
444.452 240.78 444.88 238.666 445.24 236.458 cv
445.332 237.415 445.283 238.595 445.057 240.058 cv
446.272 237.622 447.043 233.747 447.793 229.949 cv
447.881 229.509 447.968 229.067 448.056 228.628 cv
447.743 228.567 447.182 228.494 446.207 228.455 cv
446.229 228.176 446.251 227.899 446.271 227.618 cv
447.393 227.664 448.24 227.763 448.674 227.924 cv
448.747 228.181 448.822 228.439 448.897 228.698 cv
447.696 234.689 446.67 240.884 443.96 242.8 cv
.886274 .815686 .776471 rgb
f
435.034 234.757 mo
433.38 234.757 432.038 233.415 432.038 231.76 cv
432.038 230.106 433.38 228.764 435.034 228.764 cv
435.332 228.764 435.62 228.808 435.892 228.889 cv
435.274 228.949 434.668 229.013 434.081 229.081 cv
434.125 229.181 434.171 229.277 434.219 229.369 cv
434.197 229.368 434.174 229.368 434.151 229.368 cv
433.317 229.368 432.642 230.043 432.642 230.877 cv
432.642 231.711 433.317 232.386 434.151 232.386 cv
434.953 232.386 435.608 231.761 435.657 230.972 cv
436.357 231.429 437.174 231.674 438.03 231.836 cv
437.989 233.456 436.664 234.757 435.034 234.757 cv
.54902 .505882 .501961 rgb
f
434.151 232.386 mo
433.317 232.386 432.642 231.711 432.642 230.877 cv
432.642 230.043 433.317 229.368 434.151 229.368 cv
434.174 229.368 434.197 229.368 434.219 229.369 cv
434.594 230.089 435.087 230.601 435.657 230.972 cv
435.608 231.761 434.953 232.386 434.151 232.386 cv
.956863 .996078 1 rgb
f
448.897 228.698 mo
448.822 228.439 448.747 228.181 448.674 227.924 cv
448.885 228.002 448.998 228.095 448.998 228.204 cv
448.998 228.227 448.993 228.251 448.983 228.275 cv
448.954 228.416 448.926 228.557 448.897 228.698 cv
.560784 .501961 .505882 rgb
f
435.164 243.962 mo
431.762 243.962 428.388 243.518 427.537 241.983 cv
426.49 240.097 425.597 237.211 425.602 234.212 cv
425.597 237.211 426.49 240.097 427.537 241.983 cv
428.388 243.518 431.762 243.962 435.164 243.962 cv
438.805 243.962 442.48 243.453 443.125 243.232 cv
443.42 243.13 443.698 242.985 443.96 242.8 cv
446.67 240.884 447.696 234.689 448.897 228.698 cv
448.926 228.557 448.954 228.416 448.983 228.275 cv
448.993 228.251 448.998 228.227 448.998 228.204 cv
448.998 228.227 448.993 228.251 448.983 228.275 cv
447.627 234.973 446.546 242.058 443.125 243.232 cv
442.48 243.453 438.805 243.962 435.164 243.962 cv
.94902 .768627 .584314 rgb
f
407.378 243.962 mo
403.736 243.962 400.062 243.453 399.416 243.232 cv
398.246 242.83 397.35 241.737 396.623 240.204 cv
395.772 236.351 395.152 232.182 394.797 227.729 cv
395.564 227.633 396.64 227.588 397.907 227.588 cv
404.351 227.588 415.72 228.749 416.306 230.136 cv
416.75 231.462 416.938 232.849 416.94 234.212 cv
416.945 237.211 416.051 240.097 415.005 241.983 cv
414.153 243.518 410.78 243.962 407.378 243.962 cv
413.018 234.73 mo
414.488 235.843 415.135 237.824 414.093 241.801 cv
414.088 241.822 414.088 241.831 414.093 241.831 cv
414.118 241.831 414.246 241.623 414.272 241.575 cv
415.8 238.823 416.777 234.358 415.554 230.533 cv
415.259 230.31 414.351 230.043 413.099 229.777 cv
412.611 229.432 412.015 229.23 411.372 229.23 cv
411.114 229.23 410.864 229.262 410.626 229.323 cv
407.686 228.85 404.084 228.469 401.628 228.469 cv
401.327 228.469 401.042 228.475 400.778 228.487 cv
402.196 231.951 405.505 232.57 408.53 233.179 cv
408.928 234.367 410.05 235.222 411.372 235.222 cv
411.98 235.222 412.546 235.041 413.018 234.73 cv
.956863 .890196 .847059 rgb
f
396.623 240.204 mo
395.224 237.256 394.451 232.682 393.559 228.275 cv
393.548 228.251 393.543 228.227 393.543 228.204 cv
393.542 227.985 394.005 227.83 394.797 227.729 cv
395.152 232.182 395.772 236.351 396.623 240.204 cv
.886274 .815686 .776471 rgb
f
411.372 235.222 mo
410.05 235.222 408.928 234.367 408.53 233.179 cv
410.252 233.525 411.881 233.868 413.018 234.73 cv
412.546 235.041 411.98 235.222 411.372 235.222 cv
413.099 229.777 mo
412.373 229.623 411.53 229.469 410.626 229.323 cv
410.864 229.262 411.114 229.23 411.372 229.23 cv
412.015 229.23 412.611 229.432 413.099 229.777 cv
.54902 .505882 .501961 rgb
f
407.378 243.962 mo
403.736 243.962 400.062 243.453 399.416 243.232 cv
395.996 242.058 394.915 234.973 393.559 228.275 cv
393.548 228.251 393.543 228.227 393.543 228.204 cv
393.543 228.227 393.548 228.251 393.559 228.275 cv
394.451 232.682 395.224 237.256 396.623 240.204 cv
397.35 241.737 398.246 242.83 399.416 243.232 cv
400.062 243.453 403.736 243.962 407.378 243.962 cv
410.78 243.962 414.153 243.518 415.005 241.983 cv
416.051 240.097 416.945 237.211 416.94 234.212 cv
416.945 237.211 416.051 240.097 415.005 241.983 cv
414.153 243.518 410.78 243.962 407.378 243.962 cv
.94902 .768627 .584314 rgb
f
445.24 236.458 mo
444.8 231.907 441.153 232.428 438.03 231.836 cv
438.03 231.811 438.031 231.786 438.031 231.76 cv
438.031 230.404 437.129 229.258 435.892 228.889 cv
438.779 228.609 441.925 228.427 444.635 228.427 cv
445.252 228.427 445.771 228.438 446.207 228.455 cv
445.98 231.237 445.655 233.91 445.24 236.458 cv
.933333 .945098 .92549 rgb
f
445.057 240.058 mo
445.283 238.595 445.332 237.415 445.24 236.458 cv
445.655 233.91 445.98 231.237 446.207 228.455 cv
447.182 228.494 447.743 228.567 448.056 228.628 cv
447.968 229.067 447.881 229.509 447.793 229.949 cv
447.043 233.747 446.272 237.622 445.057 240.058 cv
.901961 .905882 .890196 rgb
f
438.03 231.836 mo
437.174 231.674 436.357 231.429 435.657 230.972 cv
435.659 230.941 435.66 230.909 435.66 230.877 cv
435.66 230.066 435.021 229.405 434.219 229.369 cv
434.171 229.277 434.125 229.181 434.081 229.081 cv
434.668 229.013 435.274 228.949 435.892 228.889 cv
437.129 229.258 438.031 230.404 438.031 231.76 cv
438.031 231.786 438.03 231.811 438.03 231.836 cv
.733333 .752941 .752941 rgb
f
435.657 230.972 mo
435.087 230.601 434.594 230.089 434.219 229.369 cv
435.021 229.405 435.66 230.066 435.66 230.877 cv
435.66 230.909 435.659 230.941 435.657 230.972 cv
.933333 .996078 1 rgb
f
414.093 241.831 mo
414.088 241.831 414.088 241.822 414.093 241.801 cv
415.135 237.824 414.488 235.843 413.018 234.73 cv
413.831 234.194 414.368 233.272 414.368 232.226 cv
414.368 231.214 413.867 230.32 413.099 229.777 cv
414.351 230.043 415.259 230.31 415.554 230.533 cv
416.777 234.358 415.8 238.823 414.272 241.575 cv
414.246 241.623 414.118 241.831 414.093 241.831 cv
408.53 233.179 mo
405.505 232.57 402.196 231.951 400.778 228.487 cv
401.042 228.475 401.327 228.469 401.628 228.469 cv
404.084 228.469 407.686 228.85 410.626 229.323 cv
409.332 229.655 408.375 230.828 408.375 232.226 cv
408.375 232.559 408.43 232.88 408.53 233.179 cv
.933333 .945098 .92549 rgb
f
413.018 234.73 mo
411.881 233.868 410.252 233.525 408.53 233.179 cv
408.43 232.88 408.375 232.559 408.375 232.226 cv
408.375 230.828 409.332 229.655 410.626 229.323 cv
411.53 229.469 412.373 229.623 413.099 229.777 cv
413.867 230.32 414.368 231.214 414.368 232.226 cv
414.368 233.272 413.831 234.194 413.018 234.73 cv
410.294 229.833 mo
409.461 229.833 408.785 230.509 408.785 231.342 cv
408.785 232.176 409.461 232.852 410.294 232.852 cv
411.128 232.852 411.803 232.176 411.803 231.342 cv
411.803 230.509 411.128 229.833 410.294 229.833 cv
.733333 .752941 .752941 rgb
f
410.294 232.852 mo
409.461 232.852 408.785 232.176 408.785 231.342 cv
408.785 230.509 409.461 229.833 410.294 229.833 cv
411.128 229.833 411.803 230.509 411.803 231.342 cv
411.803 232.176 411.128 232.852 410.294 232.852 cv
.933333 .996078 1 rgb
f
425.192 260.602 mo
425.192 259.572 424.358 258.737 423.328 258.737 cv
422.298 258.737 421.463 259.572 421.463 260.602 cv
421.463 261.631 422.298 262.466 423.328 262.466 cv
424.358 262.466 425.192 261.631 425.192 260.602 cv
cp
.184314 .0117647 0 rgb
f
428.48 408.972 mo
431.644 407.373 436.138 405.027 439.59 400.071 cv
442.275 396.215 444.18 396.372 446.587 398.907 cv
448.994 401.442 445.94 407.657 442.219 410.405 cv
439.496 412.415 428.48 408.972 428.48 408.972 cv
cp
.976471 .72549 .635294 rgb
f
417.872 426.265 mo
421.574 427.05 442.431 426.564 445.364 414.669 cv
442.438 410.432 424.172 410.685 418.708 418.102 cv
413.243 425.519 417.872 426.265 417.872 426.265 cv
cp
f
378.11 383.408 mo
389.052 388.775 403.605 409.577 417.323 414.366 cv
420.229 414.525 422.958 411.628 426.575 409.784 cv
422.718 414.062 419.142 419.065 417.018 424.678 cv
416.223 424.425 415.837 424.348 414.331 424.028 cv
402.931 421.609 407.128 420.474 372.132 412.455 cv
362.859 410.33 350.976 402.28 352.643 392.483 cv
354.227 383.175 364.469 376.716 378.11 383.408 cv
cp
1 .780392 .690196 rgb
f
371.431 380.852 mo
354.726 382.443 352.652 396.858 391.392 412.157 cv
424.945 425.406 410.889 416.693 418.082 414.338 cv
420.715 414.022 423.277 411.457 426.583 409.776 cv
422.721 414.055 419.186 419.021 417.061 424.638 cv
416.266 424.384 415.837 424.348 414.331 424.028 cv
402.931 421.609 414.512 423.173 379.516 415.154 cv
370.243 413.029 350.822 410.099 352.643 392.483 cv
352.915 389.86 355.392 377.711 371.431 380.852 cv
cp
.976471 .72549 .635294 rgb
f
452.532 411.59 mo
453.238 409.206 451.572 409.394 452.555 407.137 cv
450.321 406.065 448.077 404.881 446.521 403.699 cv
442.063 400.313 439.883 403.674 436.115 404.647 cv
432.697 405.529 431.734 407.733 428.392 408.438 cv
425.816 408.981 424.691 411.988 422.732 413.475 cv
415.357 419.073 416.805 422.751 416.84 424.668 cv
421.332 422.368 li
423.433 423.652 427.714 425.766 429.686 427.764 cv
429.98 429.337 430.663 431.979 431.701 433.472 cv
431.594 435.36 433.169 440.112 437.115 439.592 cv
438.198 439.449 438.508 437.771 437.005 434.395 cv
436.56 433.397 435.917 428.346 435.506 426.99 cv
435.094 425.634 430.206 420.064 429.951 419.51 cv
429.697 418.957 432.755 422.034 436.138 425.37 cv
436.452 425.678 436.8 427.605 438.502 431.572 cv
438.753 442.118 445.962 439.449 445.394 437.29 cv
445.124 436.189 444.119 432.917 443.754 431.054 cv
443.654 430.539 442.605 423.778 442.171 423.123 cv
441.48 422.08 438.366 418.478 436.221 414.731 cv
436.123 414.979 442.98 419.794 444.221 420.427 cv
445.017 420.833 445.712 424.525 446.994 428.64 cv
446.939 430.751 447.185 432.154 447.765 434.234 cv
449.073 438.92 454.696 437.54 454.075 435.345 cv
453.371 432.854 453.861 431.595 453.089 429.005 cv
451.964 425.236 452.352 421.461 452.027 419.654 cv
451.483 416.629 447.318 413.272 445.207 411.442 cv
447.408 412.488 448.596 411.268 452.532 411.59 cv
cp
1 .780392 .690196 rgb
f
421.235 419.448 mo
421.128 421.336 429.444 425.381 430.232 426.43 cv
430.708 427.063 431.308 430.895 432.662 433.442 cv
433.068 436.446 434.079 438.249 438.016 438.419 cv
437.847 439.055 437.424 439.551 437.115 439.592 cv
433.169 440.112 431.594 435.36 431.701 433.472 cv
430.663 431.979 429.98 429.337 429.686 427.764 cv
427.714 425.766 426.686 425.533 424.585 424.249 cv
424.585 424.249 419.801 429.523 414.792 424.124 cv
412.96 422.15 416.998 420.528 417.053 420.421 cv
418.106 424.554 421.284 418.578 421.235 419.448 cv
cp
.976471 .72549 .635294 rgb
f
438.502 431.572 mo
436.8 427.605 436.452 425.678 436.138 425.37 cv
433.219 422.492 430.547 419.811 430.031 419.484 cv
432.916 418.359 434.195 422.599 437.893 424.814 cv
438.305 428.494 439.213 429.208 439.995 431.561 cv
439.769 437.226 443.276 437.851 445.314 438.002 cv
444.456 439.875 438.725 440.958 438.502 431.572 cv
cp
f
447.765 434.234 mo
447.185 432.154 446.939 430.752 446.994 428.64 cv
445.712 424.525 445.017 420.833 444.221 420.427 cv
443.099 419.855 437.406 415.877 436.391 414.932 cv
435.98 414.689 436.653 414.011 436.991 413.84 cv
438.769 412.941 440.324 415.292 442.169 416.892 cv
444.296 418.735 445.043 418.561 447.035 419.128 cv
446.495 420.626 446.712 422.083 447.079 423.863 cv
447.625 426.509 448.117 427.447 449.119 428.679 cv
448.468 429.668 448.17 431.007 448.577 433.085 cv
449.064 435.57 451.842 435.548 454.088 435.96 cv
452.81 438.32 448.744 437.741 447.765 434.234 cv
cp
f
446.449 403.75 mo
452.308 406.485 455.917 406.858 458.707 407.466 cv
461.498 408.074 466.096 410.704 473.317 411.85 cv
475.047 412.124 476.202 415.186 474.37 416.928 cv
472.537 418.671 470.377 418.67 465.825 417.28 cv
461.762 416.04 459.329 416.178 455.547 415.064 cv
451.764 413.951 447.159 412.979 445.709 411.962 cv
444.26 410.945 446.449 403.75 446.449 403.75 cv
cp
1 .780392 .690196 rgb
f
422.664 306.139 mo
429.361 352.784 li
429.499 353.538 430.667 354.135 431.974 354.135 cv
447.886 354.135 li
449.192 354.135 450.361 353.538 450.499 352.784 cv
457.195 306.139 li
422.664 306.139 li
cp
.34902 .0666667 .0941176 rgb
f
422.664 304.242 mo
429.361 295.172 li
429.499 295.026 430.667 294.909 431.974 294.909 cv
447.886 294.909 li
449.192 294.909 450.361 295.026 450.499 295.172 cv
457.195 304.242 li
422.664 304.242 li
cp
f
437.306 303.347 mo
455.422 303.347 li
449.944 295.928 li
449.619 295.873 448.887 295.804 447.886 295.804 cv
437.306 295.804 li
437.306 303.347 li
cp
.466667 .235294 .027451 rgb
f
459.134 305.313 mo
459.134 306.24 458.382 306.991 457.456 306.991 cv
421.881 306.991 li
420.955 306.991 420.203 306.24 420.203 305.313 cv
420.203 304.386 420.955 303.635 421.881 303.635 cv
457.456 303.635 li
458.382 303.635 459.134 304.386 459.134 305.313 cv
cp
.878431 .878431 .878431 rgb
f
455.732 304.41 mo
437.156 304.41 li
437.156 306.217 li
455.732 306.217 li
456.231 306.217 456.635 305.812 456.635 305.313 cv
456.635 304.814 456.231 304.41 455.732 304.41 cv
cp
1 1 1 rgb
f
430.271 308.345 mo
423.93 308.345 li
430.136 351.572 li
430.264 352.271 431.346 352.824 432.557 352.824 cv
433.851 352.824 li
430.271 308.345 li
cp
.466667 .235294 .027451 rgb
f
442.801 308.345 mo
441.458 352.824 li
447.302 352.824 li
448.513 352.824 449.596 352.271 449.724 351.572 cv
455.93 308.345 li
442.801 308.345 li
cp
f
452.454 339.167 mo
455.107 320.682 li
424.752 320.682 li
427.406 339.167 li
452.454 339.167 li
cp
.203922 .00784314 .0117647 rgb
f
431.39 320.682 mo
425.797 320.682 li
428.482 339.167 li
432.79 339.167 li
431.39 320.682 li
cp
.156863 .00392157 .0117647 rgb
f
442.619 320.682 mo
441.682 339.167 li
451.526 339.167 li
453.987 320.682 li
442.619 320.682 li
cp
.329412 .0313726 .0470588 rgb
f
423.764 259.557 mo
423.018 259.222 421.862 260.639 423.018 261.273 cv
426.62 263.248 439.128 269.551 439.128 269.551 cv
439.128 294.936 li
441.514 294.936 li
441.514 267.91 li
441.514 267.91 428.686 261.72 423.764 259.557 cv
cp
.878431 .878431 .878431 rgb
f
500.83 368.521 mo
492.473 360.738 468.972 356.154 460.252 345.578 cv
459.181 342.976 460.937 339.247 461.454 335.147 cv
458.807 340.495 455.412 345.891 451.001 350.21 cv
451.485 350.834 451.677 351.156 452.448 352.404 cv
458.279 361.852 457.969 357.518 476.405 386.272 cv
481.291 393.891 492.38 401.405 500.73 395.739 cv
508.662 390.355 511.25 378.224 500.83 368.521 cv
cp
1 .780392 .690196 rgb
f
504.143 372.255 mo
508.031 388.268 496.76 397.578 470.53 368.458 cv
447.812 343.238 460.196 352.468 460.036 344.869 cv
459.482 342.318 460.99 338.882 461.459 335.136 cv
458.812 340.489 455.438 345.832 451.025 350.154 cv
451.508 350.777 451.677 351.156 452.448 352.404 cv
458.279 361.852 453.166 351.876 471.602 380.63 cv
476.488 388.249 485.341 404.848 500.73 395.739 cv
503.021 394.383 512.109 385.659 504.143 372.255 cv
cp
.976471 .72549 .635294 rgb
f
460.606 314.261 mo
458.355 312.926 455.641 310.292 453.447 308.108 cv
450.619 305.296 448.986 306.173 447.406 306.654 cv
444.832 307.437 441.57 308.002 439.575 308.78 cv
435.745 310.273 433.227 311.453 432.639 311.688 cv
431.667 312.077 431.805 317.65 436.443 316.722 cv
440.917 315.827 441.924 314.597 441.924 314.597 cv
442.697 314.431 448.015 314.345 448.748 313.926 cv
450.109 316.064 453.423 317.764 454.006 318.736 cv
451.673 317.57 447.301 315.162 444.385 315.939 cv
442.643 316.404 439.345 318.353 435.569 318.912 cv
432.975 319.295 431.99 320.277 429.506 320.682 cv
427.319 321.038 427.862 326.785 432.527 326.007 cv
434.598 325.662 435.948 325.297 437.845 324.354 cv
441.984 323.795 445.553 322.875 446.175 323.434 cv
447.144 324.307 453.698 328.571 453.892 328.377 cv
449.81 327.988 445.552 326.649 444.385 326.455 cv
443.653 326.333 437.189 328.224 436.691 328.348 cv
434.885 328.8 431.598 329.259 430.514 329.475 cv
428.375 329.864 428.256 337.612 437.897 333.391 cv
442.036 333.279 443.894 332.786 444.273 332.943 cv
448.377 334.642 452.143 336.152 451.559 336.152 cv
450.976 336.152 444.367 334.014 443.007 334.208 cv
441.646 334.403 436.861 335.945 435.815 335.958 cv
432.275 336.002 430.853 336.995 431.069 338.05 cv
431.856 341.893 436.666 341.333 438.344 340.438 cv
440.029 340.762 442.642 340.273 444.162 339.879 cv
446.603 340.847 449.885 343.886 451.719 345.274 cv
450.798 350.7 li
452.547 349.922 456.613 349.37 459.335 340.234 cv
460.058 337.807 462.424 335.505 462.095 332.91 cv
461.667 329.543 463.358 327.729 463.067 324.218 cv
462.747 320.346 465.099 316.926 460.606 314.261 cv
cp
1 .780392 .690196 rgb
f
423.092 309.119 mo
421.328 308.095 419.815 307.759 418.931 309.083 cv
415.958 313.543 419.896 317.556 423.021 318.24 cv
423.498 318.345 423.966 318.388 424.425 318.401 cv
423.092 309.119 li
cp
.976471 .72549 .635294 rgb
f
454.398 344.13 mo
452.72 345.025 446.399 339.096 445.197 338.815 cv
444.471 338.645 440.806 339.711 438.065 339.544 cv
435.212 340.438 433.254 340.271 431.845 336.727 cv
431.321 337.151 431.007 337.748 431.069 338.05 cv
431.856 341.893 436.666 341.333 438.344 340.438 cv
440.029 340.762 442.642 340.273 444.162 339.879 cv
446.603 340.847 449.737 343.773 451.571 345.16 cv
450.798 350.7 li
453.307 350.454 454.77 348.477 454.85 348.381 cv
450.767 349.159 455.171 343.718 454.398 344.13 cv
cp
f
437.897 333.391 mo
442.036 333.279 443.894 332.786 444.273 332.943 cv
447.814 334.41 451.097 335.732 451.557 336.068 cv
451.657 332.943 447.406 333.559 444.218 331.097 cv
440.75 332.272 439.813 331.74 437.43 332.015 cv
432.366 334.614 430.681 331.657 429.894 329.849 cv
428.469 331.427 429.316 337.148 437.897 333.391 cv
cp
f
432.527 326.007 mo
434.598 325.662 435.948 325.297 437.845 324.354 cv
441.984 323.795 445.553 322.875 446.175 323.434 cv
447.051 324.223 452.474 327.772 453.655 328.306 cv
454.006 328.58 454.406 327.677 454.454 327.294 cv
454.702 325.281 452.074 324.846 450.035 323.826 cv
447.685 322.651 447.604 321.891 446.455 320.302 cv
445.269 321.43 443.879 321.846 442.148 322.26 cv
439.575 322.875 438.568 322.819 437.131 322.419 cv
436.443 323.434 435.324 324.273 433.31 324.777 cv
430.902 325.379 430.035 322.818 428.945 320.929 cv
427.214 323.099 429.036 326.589 432.527 326.007 cv
cp
f
449.205 310.635 mo
447.954 311.188 445.001 313.366 441.298 312.502 cv
440.302 314.317 438.4 314.988 436.443 314.932 cv
434.455 314.876 433.117 313.722 432.232 312.375 cv
431.877 313.936 432.673 317.476 436.443 316.722 cv
440.917 315.827 441.924 314.597 441.924 314.597 cv
442.697 314.431 448.015 314.345 448.748 313.926 cv
449.911 315.752 452.913 317.73 454.006 318.736 cv
454.633 317.395 452.838 315.945 451.992 314.932 cv
450.916 313.644 450.1 312.04 449.205 310.635 cv
cp
f
614.169 727.271 mo
614.169 739.409 599.572 748.018 578.633 748.018 cv
557.693 748.018 538.34 740.021 538.34 727.271 cv
538.34 719.115 556.159 712.503 576.254 712.503 cv
596.349 712.503 614.169 719.115 614.169 727.271 cv
cp
0 .298039 .337255 rgb
f
612.64 725.367 mo
612.64 734.836 598.508 741.262 578.413 741.262 cv
558.318 741.262 539.869 734.836 539.869 725.367 cv
539.869 715.898 556.159 708.222 576.254 708.222 cv
596.349 708.222 612.64 715.898 612.64 725.367 cv
cp
0 .501961 .6 rgb
f
570.346 626.43 mo
570.346 720.732 li
570.346 725.345 582.385 725.081 582.385 720.732 cv
582.385 626.43 li
570.346 626.43 li
cp
.878431 .878431 .878431 rgb
f
567.583 622.825 mo
567.583 669.366 li
567.583 676.097 585.148 675.711 585.148 669.366 cv
585.148 622.825 li
567.583 622.825 li
cp
.607843 .603922 .603922 rgb
f
659.194 600.458 mo
659.194 627.012 622.061 634.369 576.254 634.369 cv
530.448 634.369 493.315 628.349 493.315 600.458 cv
493.315 582.615 532.295 568.151 576.254 568.151 cv
620.214 568.151 659.194 582.615 659.194 600.458 cv
cp
0 .298039 .337255 rgb
f
655.85 600.458 mo
655.85 618.3 620.214 626.343 576.254 626.343 cv
532.295 626.343 496.659 618.3 496.659 600.458 cv
496.659 582.615 532.295 568.151 576.254 568.151 cv
620.214 568.151 655.85 582.615 655.85 600.458 cv
cp
0 .501961 .6 rgb
f
659.194 462.225 mo
659.194 547.788 622.061 571.496 576.254 571.496 cv
530.448 571.496 493.315 552.098 493.315 462.225 cv
493.315 404.733 532.295 358.126 576.254 358.126 cv
620.214 358.126 659.194 404.733 659.194 462.225 cv
cp
0 .298039 .337255 rgb
f
655.85 469.157 mo
655.85 530.478 620.214 558.118 576.254 558.118 cv
532.295 558.118 496.659 530.478 496.659 469.157 cv
496.659 407.836 532.295 358.126 576.254 358.126 cv
620.214 358.126 655.85 407.836 655.85 469.157 cv
cp
0 .501961 .6 rgb
f
615.155 571.662 mo
617.233 501.422 627.455 453.391 627.455 453.391 cv
529.79 453.391 li
529.79 453.391 540.453 516.386 542.087 571.661 cv
615.155 571.662 li
cp
.521569 .345098 .729412 rgb
f
609.432 422.418 mo
545.747 422.418 li
534.554 427.026 515.934 434.922 516.859 436.081 cv
521.469 452.792 522.135 481.957 549.063 492.269 cv
606.328 492.269 li
633.56 482.77 634.047 452.561 638.657 435.85 cv
638.847 434.944 620.414 427.04 609.432 422.418 cv
cp
.6 .392157 .8 rgb
f
516.808 435.964 mo
508.825 439.745 506.883 452.953 498.742 467.474 cv
493.941 476.039 483.028 509.221 480.258 509.358 cv
443.486 511.174 442.431 539.923 458.82 539.923 cv
462.755 539.923 493.684 540.042 495.743 540.042 cv
512.994 540.042 522.116 481.178 535.885 484.563 cv
524.035 473.285 516.808 435.964 516.808 435.964 cv
cp
.521569 .345098 .729412 rgb
f
518.296 441.884 mo
520.314 467.5 528.373 478.649 529.697 481.084 cv
521.295 488.086 513.651 513.384 508.946 519.915 cv
506.969 522.659 495.895 524.463 486.094 521.953 cv
481.804 523.16 481.654 529.801 478.048 529.604 cv
478.303 539.923 li
480.354 539.923 492.634 540.042 494.23 540.042 cv
512.389 540.042 517.34 497.176 530.896 486.328 cv
531.13 486.14 534.206 483.696 536.226 484.45 cv
535.738 484.031 527.527 477.933 518.296 441.884 cv
cp
.333333 .223529 .486275 rgb
f
638.657 435.85 mo
646.639 439.632 648.582 452.839 656.722 467.36 cv
665.536 483.082 707.218 521.938 677.364 536.682 cv
652.247 549.085 633.348 481.064 619.579 484.45 cv
631.429 473.172 638.657 435.85 638.657 435.85 cv
cp
.521569 .345098 .729412 rgb
f
619.579 484.45 mo
620.067 484.031 628.278 477.933 637.509 441.884 cv
635.491 467.5 627.432 478.649 626.108 481.084 cv
634.51 488.087 644.37 506.763 649.075 513.294 cv
654.027 520.169 683.526 549.986 687.618 517.474 cv
688.984 525.251 686.599 532.121 677.364 536.682 cv
656.01 547.227 638.465 497.176 624.909 486.328 cv
624.675 486.14 621.599 483.696 619.579 484.45 cv
cp
.333333 .223529 .486275 rgb
f
589.428 508.652 mo
586.067 507.392 582.064 502.861 585.635 499.29 cv
588.374 496.551 594.878 504.962 599.289 507.693 cv
599.289 507.693 594.576 510.583 589.428 508.652 cv
cp
.976471 .72549 .635294 rgb
f
591.947 532.759 mo
589.026 532.719 587.1 529.708 586.952 528.922 cv
584.355 528.593 582.081 524.929 582.206 523.59 cv
580.558 522.873 578.984 521.376 579.308 518.441 cv
579.579 515.977 579.404 512.553 581.825 510.952 cv
584.246 509.351 591.783 504.558 593.805 504.026 cv
595.826 503.493 601.57 507.476 609.66 509.976 cv
617.025 512.251 618.891 520.932 623.281 522.407 cv
638.116 522.781 650.518 506.741 662.811 505.429 cv
678.138 503.794 686.222 514.517 684.996 524.823 cv
683.705 535.671 669.693 539.407 659.996 537.996 cv
623.403 532.67 635.188 535.567 623.325 533.632 cv
618.519 532.847 617.535 533.329 617.535 533.329 cv
617.535 533.329 612.383 536.356 607.813 532.954 cv
603.243 529.552 600.008 527.803 599.733 527.793 cv
598.135 528.1 596.812 527.754 596.812 527.754 cv
596.812 527.754 597.362 529.095 596.739 530.517 cv
597.788 531.515 599.661 533.201 599.661 533.201 cv
599.661 533.201 598.04 536.633 596.317 536.034 cv
594.594 535.434 593.371 535.813 591.947 532.759 cv
cp
1 .780392 .690196 rgb
f
582.206 523.59 mo
583.128 519.714 583.625 517.264 584.298 514.343 cv
584.697 512.613 590.837 509.576 593.257 507.975 cv
590.862 510.418 586.249 512.252 584.984 515.165 cv
583.822 517.84 583.287 521.024 582.206 523.59 cv
cp
1 .823529 .760784 rgb
f
586.958 528.818 mo
584.655 528.783 585.255 523.142 586.427 520.153 cv
587.085 518.477 594.908 513.982 597.329 512.382 cv
594.933 514.825 588.15 518.053 587.221 521.061 cv
586.205 524.351 586.689 527.68 586.958 528.818 cv
cp
f
591.947 532.759 mo
591.947 532.759 590.496 526.547 591.007 524.971 cv
591.518 523.396 598.156 518.361 598.405 518.189 cv
595.385 519.74 590.344 523.807 590.108 524.731 cv
589.871 525.654 590.335 530.329 591.947 532.759 cv
cp
f
594.68 532.1 mo
595.352 531.043 596.476 529.276 595.052 527.379 cv
598.596 526.692 601.982 525.263 604.427 527.634 cv
614.067 536.984 617.924 527.243 616.57 522.674 cv
613.397 511.968 596.822 505.723 594.773 504.035 cv
597.351 504.499 602.615 507.799 609.66 509.976 cv
616.601 512.12 618.659 519.952 622.547 522.081 cv
628.875 527.342 612.541 530.919 649.283 530.237 cv
691.705 529.45 682.141 513.334 678.362 509.13 cv
684.24 513.468 685.427 521.973 684.996 524.823 cv
683.526 534.552 669.693 539.407 659.996 537.996 cv
623.403 532.67 635.188 535.567 623.325 533.632 cv
618.519 532.847 617.535 533.329 617.535 533.329 cv
617.535 533.329 612.383 536.356 607.813 532.954 cv
603.243 529.552 600.008 527.803 599.733 527.793 cv
598.135 528.1 596.812 527.754 596.812 527.754 cv
596.812 527.754 597.362 529.095 596.739 530.517 cv
597.788 531.515 599.661 533.201 599.661 533.201 cv
599.661 533.201 599.475 533.59 599.168 534.081 cv
599.165 534.085 li
598.088 532.532 596.964 531.321 594.68 532.1 cv
cp
.976471 .72549 .635294 rgb
f
485.945 522.866 mo
487.47 515.219 481.762 509.02 473.196 509.02 cv
464.63 509.02 456.449 515.219 454.923 522.866 cv
453.398 530.513 459.106 536.712 467.673 536.712 cv
476.239 536.712 484.42 530.513 485.945 522.866 cv
cp
f
448.545 518.169 mo
443.829 520.339 439.372 523.23 438.868 524.968 cv
438.363 526.706 436.268 534.585 436.706 535.663 cv
437.145 536.742 440.075 538.215 441.661 536.562 cv
442.696 535.483 442.7 532.501 442.851 532.35 cv
444.447 530.749 444.426 528.805 444.404 527.835 cv
446.987 528.135 458.264 522.899 458.264 522.899 cv
458.264 522.899 451.328 516.889 448.545 518.169 cv
cp
.858824 .631373 .552941 rgb
f
449.509 517.417 mo
446.404 519.972 443.374 521.053 442.314 523.368 cv
441.254 525.684 436.634 536.18 436.709 537.617 cv
436.785 539.055 439.165 541.017 441.254 538.815 cv
442.617 537.378 443.596 533.404 443.792 533.203 cv
445.874 531.07 446.488 528.48 446.783 527.188 cv
449.207 527.587 461.93 520.611 461.93 520.611 cv
461.93 520.611 452.499 514.956 449.509 517.417 cv
cp
1 .780392 .690196 rgb
f
456.841 518.091 mo
456.704 517.309 451.554 513.75 445.874 522.914 cv
445.724 525.145 444.662 527.155 441.689 530.46 cv
441.69 530.508 li
441.064 533.658 439.901 536.808 438.126 539.527 cv
439.005 539.975 440.167 539.96 441.254 538.815 cv
442.617 537.378 443.595 533.404 443.792 533.203 cv
445.874 531.07 447.461 528.401 447.757 527.109 cv
450.181 527.509 461.93 520.611 461.93 520.611 cv
461.93 520.611 459.572 519.197 456.841 518.091 cv
cp
.976471 .72549 .635294 rgb
f
478.848 539.923 mo
479.102 539.082 479.236 538.213 479.236 537.322 cv
479.236 530.146 470.592 524.328 459.929 524.328 cv
449.266 524.328 440.622 530.146 440.622 537.322 cv
440.622 538.213 440.756 539.082 441.01 539.923 cv
478.848 539.923 li
cp
1 1 1 rgb
f
482.682 525.035 mo
483.288 517.84 483.317 519.464 483.154 516.647 cv
482.594 506.96 465.562 507.886 458.291 511.925 cv
451.021 515.964 449.394 517.811 448.903 520.894 cv
448.416 523.952 447.195 530.374 447.027 532.986 cv
446.867 535.461 451.953 536.896 454.526 534.145 cv
456.976 531.526 456.275 525.355 457.07 524.603 cv
458.853 524.197 462.025 524.298 462.642 524.553 cv
461.986 527.84 461.223 530.488 461.223 533.214 cv
461.324 536.042 467.888 537.758 470.311 533.555 cv
471.366 531.726 471.216 529.739 471.451 527.235 cv
475.013 528.861 477.507 531.333 478.39 533.82 cv
479.804 538.97 487.68 539.475 487.882 534.022 cv
487.956 532.034 482.34 529.091 482.682 525.035 cv
cp
1 .780392 .690196 rgb
f
462.839 524.353 mo
462.611 523.898 462.995 519.013 464.432 516.456 cv
462.211 517.642 460.08 518.996 457.656 519.779 cv
455.499 520.475 455.693 520.683 455.696 523.048 cv
455.698 524.768 455.66 526.434 455.414 528.137 cv
454.728 532.869 450.993 534.9 447.086 533.526 cv
447.631 535.652 452.148 536.688 454.526 534.145 cv
456.976 531.526 456.275 525.355 457.07 524.603 cv
458.03 524.385 461.689 524.333 462.839 524.353 cv
cp
.976471 .72549 .635294 rgb
f
482.163 535.369 mo
479.983 533.832 478.637 531.681 477.898 529.112 cv
476.785 525.242 474.504 523.707 475.193 518.636 cv
473.741 520.61 470.235 520.866 470.337 521.702 cv
470.576 523.671 470.516 527.44 469.4 530.127 cv
467.777 534.037 464.649 535.34 461.308 533.692 cv
462.074 536.219 468.028 537.515 470.311 533.555 cv
471.366 531.726 471.216 529.739 471.451 527.235 cv
475.013 528.861 477.507 531.333 478.39 533.82 cv
479.599 538.226 485.524 539.217 487.342 536.003 cv
485.627 536.574 483.817 536.535 482.163 535.369 cv
cp
f
613.647 571.894 mo
544.457 571.894 li
544.457 571.894 li
540.816 571.894 li
540.816 571.894 507 575.907 506.331 607.344 cv
506.206 613.246 507.119 617.899 508.722 621.564 cv
638.767 621.564 li
640.37 617.899 648.167 611.232 648.042 605.329 cv
647.373 573.892 613.647 571.894 613.647 571.894 cv
cp
.0470588 .192157 .266667 rgb
f
506.772 614.527 mo
507.174 617.201 507.837 619.541 508.722 621.564 cv
638.767 621.564 li
639.654 619.536 642.464 617.205 644.776 614.527 cv
577.156 606.17 li
506.772 614.527 li
cp
.054902 .137255 .188235 rgb
f
565.283 707.223 mo
565.283 707.223 571.57 700.264 572.856 697.909 cv
595.607 615.431 li
600.675 596.366 613.224 576.804 628.948 579.848 cv
646.898 584.282 651.328 599.066 645.204 618.208 cv
600.004 701.733 li
600.168 701.954 600.256 702.076 600.256 702.076 cv
596.355 709.507 600.106 715.166 598.133 717.994 cv
588.266 725.344 li
582.388 740.928 li
582.388 740.928 572.351 742.67 561.756 732.734 cv
562.794 726.568 567.29 715.76 567.29 715.76 cv
565.283 707.223 li
cp
.0470588 .192157 .266667 rgb
f
600.004 701.733 mo
600.004 701.733 573.762 716.434 594.719 618.65 cv
572.856 697.909 li
571.57 700.264 565.283 707.223 565.283 707.223 cv
567.29 715.76 li
567.29 715.76 562.794 726.568 561.756 732.734 cv
572.351 742.67 582.388 740.928 582.388 740.928 cv
588.266 725.344 li
598.133 717.994 li
600.106 715.166 596.355 709.507 600.256 702.076 cv
600.256 702.076 600.168 701.954 600.004 701.733 cv
cp
.0196078 .0784314 .109804 rgb
f
554.964 794.557 mo
551.959 794.557 556.393 789.728 551.994 787.928 cv
543.824 784.585 537.868 786.227 536.781 782.503 cv
535.355 777.619 540.876 767.59 546.466 759.664 cv
547.549 758.126 li
555.005 747.518 558.517 740.752 560.969 732.27 cv
561.393 730.805 li
562.479 731.874 li
570.028 739.311 577.744 740.114 580.712 740.114 cv
581.682 740.114 582.246 740.031 582.252 740.031 cv
583.342 739.868 li
583.295 740.969 li
583.01 747.357 581.52 755.787 578.738 766.739 cv
578.502 767.672 578.273 768.588 578.049 769.484 cv
575.102 781.283 572.511 795.696 562.734 795.696 cv
554.964 794.557 li
cp
.8 .8 .8 rgb
f
577.859 766.515 mo
580.637 755.577 582.105 747.281 582.388 740.928 cv
582.388 740.928 571.998 742.526 561.841 732.521 cv
559.265 741.434 555.494 748.401 548.292 758.648 cv
538.112 773.133 532.93 779.147 552.338 787.087 cv
571.89 795.087 573.502 783.675 577.859 766.515 cv
cp
.576471 .0980392 .0980392 rgb
f
566.456 776.814 mo
560.295 773.813 553.865 771.233 547.209 769.547 cv
545.561 769.13 543.727 768.664 541.842 768.33 cv
536.773 777.116 529.987 784.598 549.917 792.753 cv
570.528 801.186 570.462 789.925 573.857 780.806 cv
571.436 779.401 568.984 778.046 566.456 776.814 cv
cp
.8 .8 .8 rgb
f
541.842 768.33 mo
536.773 777.116 537.742 781.115 552.338 787.087 cv
565.861 792.621 570.462 789.925 573.857 780.806 cv
565.806 765.628 543.335 766.876 541.842 768.33 cv
cp
.878431 .878431 .878431 rgb
f
579.425 743.962 mo
572.284 744.346 563.229 737.881 563.229 737.881 cv
563.229 737.881 562.332 739.474 561.828 740.554 cv
571.349 749.17 579.333 747.477 579.333 747.477 cv
579.333 747.477 579.333 747.477 579.425 743.962 cv
cp
.8 .8 .8 rgb
f
578.626 750.807 mo
571.484 751.191 560.938 743.544 560.938 743.544 cv
560.938 743.544 559.587 745.789 559.083 746.869 cv
568.604 755.486 578.534 754.323 578.534 754.323 cv
578.534 754.323 578.534 754.323 578.626 750.807 cv
cp
f
576.804 758.929 mo
569.662 759.313 557.063 752.08 557.063 752.08 cv
557.063 752.08 555.712 754.325 555.209 755.405 cv
564.729 764.022 576.712 762.444 576.712 762.444 cv
576.712 762.444 576.712 762.444 576.804 758.929 cv
cp
f
588.07 709.851 mo
588.07 709.851 581.699 702.969 580.384 700.629 cv
556.626 618.436 li
551.324 599.435 538.537 580.027 522.851 583.264 cv
504.957 587.917 500.708 602.754 507.066 621.82 cv
553.285 704.785 li
553.124 705.009 553.038 705.131 553.038 705.131 cv
557.029 712.514 553.347 718.219 555.355 721.022 cv
565.312 728.251 li
571.379 743.762 li
571.379 743.762 581.437 745.381 591.91 735.316 cv
590.796 729.164 586.169 718.411 586.169 718.411 cv
588.07 709.851 li
cp
.0470588 .192157 .266667 rgb
f
607.529 762.059 mo
606.426 760.532 li
598.84 750.015 591.822 735.104 591.822 735.104 cv
585.846 740.698 580.158 744.541 571.379 743.762 cv
571.248 749.74 572.479 758.797 575.344 769.526 cv
575.593 770.457 575.833 771.37 576.068 772.265 cv
579.141 783.96 582.971 797.778 592.594 797.778 cv
595.634 797.778 597.881 792.278 602.346 790.386 cv
610.475 786.943 617.349 787.067 618.39 783.33 cv
619.756 778.43 613.216 769.915 607.529 762.059 cv
cp
.8 .8 .8 rgb
f
576.221 769.292 mo
573.31 758.388 571.74 750.111 571.379 743.762 cv
571.379 743.762 581.788 745.232 591.822 735.104 cv
594.507 743.985 598.363 750.906 605.69 761.063 cv
616.047 775.423 621.301 781.372 601.992 789.55 cv
582.54 797.789 580.788 786.397 576.221 769.292 cv
cp
.717647 .101961 .101961 rgb
f
587.75 779.451 mo
593.873 776.374 600.271 773.716 606.906 771.948 cv
608.549 771.511 610.377 771.023 612.258 770.666 cv
617.434 779.389 625.586 786.17 605.756 794.569 cv
585.25 803.253 583.904 792.609 580.398 783.533 cv
582.802 782.098 585.237 780.713 587.75 779.451 cv
cp
.8 .8 .8 rgb
f
587.75 779.451 mo
593.873 776.374 600.271 773.716 606.906 771.948 cv
608.549 771.511 610.377 771.023 612.258 770.666 cv
617.434 779.389 616.514 783.4 601.992 789.55 cv
588.538 795.249 583.904 792.609 580.398 783.533 cv
582.802 782.098 585.237 780.713 587.75 779.451 cv
cp
.878431 .878431 .878431 rgb
f
574.379 746.759 mo
581.525 747.056 590.499 740.481 590.499 740.481 cv
590.499 740.481 591.416 742.063 591.933 743.137 cv
582.518 751.869 574.514 750.273 574.514 750.273 cv
574.514 750.273 574.514 750.273 574.379 746.759 cv
cp
f
575.262 753.594 mo
582.408 753.89 592.86 746.116 592.86 746.116 cv
592.86 746.116 594.238 748.344 594.755 749.418 cv
585.34 758.15 575.397 757.108 575.397 757.108 cv
575.397 757.108 575.397 757.108 575.262 753.594 cv
cp
f
577.184 761.693 mo
584.329 761.989 596.839 754.604 596.839 754.604 cv
596.839 754.604 598.217 756.832 598.734 757.906 cv
589.319 766.638 577.319 765.207 577.319 765.207 cv
577.319 765.207 577.319 765.207 577.184 761.693 cv
cp
f
561.415 398.072 mo
557.327 416.368 li
545.747 422.418 li
577.119 447.543 li
609.432 422.418 li
596.924 416.428 li
592.823 398.072 li
561.415 398.072 li
cp
1 .780392 .690196 rgb
f
561.415 398.072 mo
557.327 416.368 li
545.747 422.418 li
577.119 447.543 li
577.264 425.158 li
595.33 409.294 li
592.823 398.072 li
561.415 398.072 li
cp
.858824 .631373 .552941 rgb
f
615.122 355.647 mo
614.086 355.456 613.02 355.734 611.994 356.393 cv
611.392 334.033 606.747 311.336 576.281 311.336 cv
547.257 311.336 541.054 334.164 540.561 356.638 cv
539.426 355.806 538.233 355.433 537.076 355.647 cv
533.389 356.328 531.475 362.7 532.801 369.881 cv
534.127 377.061 538.19 382.33 541.878 381.649 cv
542.985 381.445 543.93 380.724 544.678 379.626 cv
544.678 396.69 562.574 416.774 576.281 416.774 cv
589.896 416.774 607.763 397.299 607.763 379.96 cv
608.469 380.87 609.33 381.466 610.321 381.649 cv
614.008 382.33 618.072 377.061 619.398 369.881 cv
620.724 362.7 618.809 356.328 615.122 355.647 cv
cp
1 .780392 .690196 rgb
f
607.758 379.967 mo
608.464 380.877 609.325 381.474 610.315 381.657 cv
613.863 382.312 617.759 377.457 619.229 370.693 cv
616.333 376.523 611.792 380.902 608.841 375.721 cv
608.623 375.339 609.462 358.738 609.035 358.682 cv
609.183 358.153 611.851 356.892 611.987 356.357 cv
611.613 342.586 609.697 328.695 601.158 320.06 cv
603.576 329.028 604.962 339.449 604.962 350.568 cv
604.962 384.157 592.327 411.386 576.742 411.386 cv
561.157 411.386 548.523 384.157 548.523 350.568 cv
548.523 339.288 549.949 328.728 552.432 319.673 cv
544.183 327.595 540.784 340.452 540.429 356.645 cv
540.98 357.03 543.997 359.168 543.997 359.168 cv
543.57 359.225 544.656 374.659 544.483 375.063 cv
543.023 378.469 538.857 380.981 534.537 375.494 cv
536.42 379.598 539.242 382.142 541.872 381.657 cv
542.979 381.452 543.925 380.732 544.673 379.633 cv
544.673 396.698 562.568 416.781 576.276 416.781 cv
589.891 416.781 607.758 397.306 607.758 379.967 cv
cp
.858824 .631373 .552941 rgb
f
596.815 353.301 mo
596.796 354.212 593.669 353.126 589.77 353.2 cv
585.87 353.274 582.727 354.48 582.694 353.569 cv
582.633 351.902 585.438 349.111 589.337 349.037 cv
593.237 348.963 596.852 351.524 596.815 353.301 cv
cp
f
556.102 353.68 mo
556.262 354.58 559.387 353.186 563.285 353.187 cv
567.183 353.189 570.176 354.598 570.218 353.685 cv
570.361 350.605 567.191 348.606 563.293 348.604 cv
559.395 348.603 555.602 350.875 556.102 353.68 cv
cp
f
596.809 352.572 mo
596.843 354.363 593.532 351.661 589.633 351.735 cv
585.734 351.809 582.722 354.631 582.688 352.84 cv
582.654 351.049 585.76 348.077 589.66 348.003 cv
593.559 347.929 596.775 350.781 596.809 352.572 cv
cp
.196078 0 .00392157 rgb
f
556.089 352.572 mo
556.055 354.363 559.366 351.661 563.266 351.735 cv
567.165 351.809 570.176 354.631 570.21 352.84 cv
570.244 351.049 567.138 348.077 563.239 348.003 cv
559.34 347.929 556.123 350.781 556.089 352.572 cv
cp
f
568.72 364.885 mo
568.72 366.676 567.268 368.129 565.476 368.129 cv
563.685 368.129 562.232 366.676 562.232 364.885 cv
562.232 363.093 563.685 361.641 565.476 361.641 cv
567.268 361.641 568.72 363.093 568.72 364.885 cv
cp
.184314 .0117647 0 rgb
f
568.067 363.928 mo
568.067 364.831 567.335 365.562 566.433 365.562 cv
565.53 365.562 564.799 364.831 564.799 363.928 cv
564.799 363.026 565.53 362.294 566.433 362.294 cv
567.335 362.294 568.067 363.026 568.067 363.928 cv
cp
1 1 1 rgb
f
594.338 365.389 mo
594.338 367.18 592.885 368.632 591.094 368.632 cv
589.302 368.632 587.85 367.18 587.85 365.389 cv
587.85 363.597 589.302 362.145 591.094 362.145 cv
592.885 362.145 594.338 363.597 594.338 365.389 cv
cp
.184314 .0117647 0 rgb
f
593.894 364.432 mo
593.894 365.334 593.163 366.066 592.26 366.066 cv
591.358 366.066 590.627 365.334 590.627 364.432 cv
590.627 363.53 591.358 362.798 592.26 362.798 cv
593.163 362.798 593.894 363.53 593.894 364.432 cv
cp
1 1 1 rgb
f
569.644 385.974 mo
570.21 387.315 573.292 388.341 577.011 388.341 cv
580.729 388.341 583.811 387.315 584.377 385.974 cv
569.644 385.974 li
cp
.858824 .631373 .552941 rgb
f
575.772 411.14 mo
561.268 411.14 547.977 388.186 544.903 364.372 cv
544.452 364.372 li
544.221 369.083 544.32 380.104 544.32 380.104 cv
545.945 402.681 563.501 417.247 576.465 417.247 cv
589.302 417.247 608.948 401.546 608.948 379.488 cv
609.468 375.137 609.319 368.826 609.349 364.643 cv
609.183 364.64 609.015 364.649 608.85 364.644 cv
607.539 377.484 598.453 411.14 575.772 411.14 cv
cp
.203922 .00784314 .0117647 rgb
f
615.405 377.906 mo
614.949 379.73 613.528 380.946 612.231 380.622 cv
610.934 380.298 610.251 378.557 610.707 376.732 cv
611.163 374.908 612.584 373.692 613.881 374.016 cv
615.179 374.34 615.861 376.081 615.405 377.906 cv
cp
.215686 .207843 .211765 rgb
f
537.92 377.906 mo
538.376 379.73 539.797 380.946 541.094 380.622 cv
542.392 380.298 543.074 378.557 542.618 376.732 cv
542.162 374.908 540.741 373.692 539.444 374.016 cv
538.147 374.34 537.464 376.081 537.92 377.906 cv
cp
f
565.54 392.83 mo
570.004 393.284 573.712 391.014 576.663 392.225 cv
580.37 391.241 583.638 393.954 588.088 393.057 cv
583.17 394.948 568.567 394.267 565.54 392.83 cv
cp
.858824 .631373 .552941 rgb
f
567.659 395.206 mo
570.182 397.607 576.814 400.093 585.515 397.143 cv
581.808 396.991 572.577 397.249 567.659 395.206 cv
cp
f
618.447 351.753 mo
618.451 351.5 618.467 351.251 618.467 350.997 cv
618.467 324.944 599.717 303.824 576.588 303.824 cv
553.459 303.824 534.709 324.944 534.709 350.997 cv
534.709 351.174 534.721 351.348 534.723 351.524 cv
538.184 351.524 li
541.217 329.134 557.253 312.048 576.588 312.048 cv
595.99 312.048 612.072 329.25 615.026 351.753 cv
618.447 351.753 li
cp
.6 .392157 .8 rgb
f
621.645 352.025 mo
621.645 349.754 619.816 347.913 617.559 347.913 cv
615.303 347.913 613.474 349.754 613.474 352.025 cv
613.474 354.296 615.303 356.137 617.559 356.137 cv
619.816 356.137 621.645 354.296 621.645 352.025 cv
cp
535.39 356.137 mo
533.134 356.137 531.304 354.296 531.304 352.025 cv
531.304 349.754 533.134 347.913 535.39 347.913 cv
537.647 347.913 539.476 349.754 539.476 352.025 cv
539.476 354.296 537.647 356.137 535.39 356.137 cv
cp
.878431 .878431 .878431 rgb
f
543.36 372.825 mo
543.206 378.858 540.45 380.859 537.182 380.994 cv
533.914 381.129 531.16 378.665 531.03 375.492 cv
530.377 359.472 li
530.247 356.298 532.791 353.616 536.059 353.481 cv
539.328 353.346 542.729 355.921 542.609 360.621 cv
543.36 372.825 li
cp
.968627 .968627 .968627 rgb
f
534.353 373.381 mo
534.452 375.809 533.341 377.827 531.872 377.887 cv
530.403 377.948 529.132 376.029 529.033 373.601 cv
528.534 361.344 li
528.435 358.916 529.545 356.898 531.015 356.837 cv
532.484 356.777 533.755 358.696 533.854 361.124 cv
534.353 373.381 li
cp
.6 .392157 .8 rgb
f
609.834 372.61 mo
609.811 378.646 612.506 380.728 615.769 380.96 cv
619.032 381.192 621.857 378.811 622.08 375.643 cv
623.204 359.649 li
623.426 356.481 620.962 353.724 617.699 353.492 cv
614.437 353.26 610.961 355.732 610.943 360.434 cv
609.834 372.61 li
cp
.968627 .968627 .968627 rgb
f
617.686 373.401 mo
617.516 375.825 618.567 377.874 620.033 377.979 cv
621.5 378.083 622.827 376.203 622.997 373.778 cv
623.857 361.542 li
624.027 359.118 622.976 357.068 621.509 356.963 cv
620.042 356.859 618.715 358.74 618.545 361.164 cv
617.686 373.401 li
cp
.6 .392157 .8 rgb
f
618.447 351.753 mo
618.451 351.5 616.217 351.25 616.197 350.997 cv
613.928 320.957 592.364 307.936 576.588 307.936 cv
557.181 307.936 536.752 329.409 536.752 350.997 cv
536.752 351.174 534.721 351.348 534.723 351.524 cv
538.184 351.524 li
541.217 329.134 557.253 312.048 576.588 312.048 cv
595.99 312.048 612.072 329.25 615.026 351.753 cv
618.447 351.753 li
cp
.878431 .878431 .878431 rgb
f
542.54 571.894 mo
577.61 587.557 li
615.237 572.06 li
614.234 571.93 613.647 571.894 613.647 571.894 cv
544.457 571.894 li
544.457 571.894 li
542.54 571.894 li
cp
.0509804 .219608 .286275 rgb
f
218.605 583.146 mo
268.33 594.025 345.515 625.797 349.342 638.54 cv
353.716 653.105 360.67 659.762 365.312 672.495 cv
369.954 685.227 383.239 736.808 397.596 776.854 cv
398.533 779.467 422.933 792.656 433.452 796.584 cv
441.273 799.505 462.634 800.231 456.845 810.171 cv
452.082 814.934 415.522 812.413 400.836 809.189 cv
387.655 806.295 375.315 810.907 380.358 789.704 cv
382.408 781.085 375.111 769.461 365.662 751.206 cv
346.066 713.35 331.806 715.006 325.916 681.198 cv
322.041 658.957 308.573 653.799 297.315 650.615 cv
277.516 645.016 243.806 648.142 189.373 630.163 cv
199.056 614.43 208.495 598.553 218.605 583.146 cv
cp
.968627 .701961 .611765 rgb
f
219.087 582.413 mo
271.509 593.472 348.542 621.89 352.389 634.699 cv
356.763 649.264 362.703 659.081 367.345 671.813 cv
370.281 679.867 374.643 704.145 382.58 730.535 cv
383.151 732.436 388.257 739.185 388.388 739.584 cv
388.63 740.319 388.04 747.929 389.158 751.487 cv
390.463 755.639 394.892 760.861 394.972 761.118 cv
395.217 761.915 395.888 771.956 396.107 772.646 cv
396.107 772.646 385.344 777.706 378.977 778.197 cv
378.977 778.197 373.637 773.235 371.098 769.592 cv
369.564 767.39 368.52 761.915 365.996 759.453 cv
365.996 759.453 359.558 751.959 359.437 751.737 cv
359.437 751.737 358.426 743.855 356.531 740.628 cv
340.601 713.504 330.169 705.185 325.802 688.683 cv
320.027 666.858 303.265 655.376 303.265 655.376 cv
260.591 641.352 239.686 648.87 189.259 630.347 cv
199.136 614.305 208.754 598.11 219.087 582.413 cv
cp
.054902 .137255 .188235 rgb
f
194.726 621.431 mo
210.904 623.858 285.414 650.615 301.48 644.665 cv
305.616 643.133 314.132 666.015 318.093 663.989 cv
320.305 662.858 325.487 643.673 327.578 642.324 cv
329.378 641.162 324.544 659.16 324.224 661.361 cv
323.408 666.976 328.451 663.152 339.122 664.836 cv
326.129 670.504 337.598 672.409 339.563 678.309 cv
343.998 691.634 341.648 706.479 369.036 753.452 cv
373.917 761.823 389.981 767.34 389.663 752.808 cv
391.342 756.67 394.901 760.887 394.972 761.119 cv
395.217 761.914 395.888 771.956 396.107 772.646 cv
396.107 772.646 385.344 777.706 378.977 778.197 cv
378.977 778.197 373.637 773.235 371.098 769.592 cv
369.564 767.39 368.52 761.915 365.996 759.453 cv
365.996 759.453 359.558 751.959 359.437 751.737 cv
359.437 751.737 358.426 743.855 356.531 740.628 cv
340.601 713.504 330.169 705.185 325.802 688.683 cv
320.027 666.858 302.075 655.971 302.075 655.971 cv
266.967 645.26 246.617 658.03 189.259 630.347 cv
191.087 627.378 192.91 624.407 194.726 621.431 cv
cp
.0196078 .0784314 .109804 rgb
f
378.407 801.545 mo
378.407 801.545 375.753 803.652 379.321 812.057 cv
381.501 812.057 455.224 814.59 457.965 812.833 cv
460.706 811.076 459.001 807.377 457.265 808.49 cv
454.068 810.54 418.574 804.91 396.419 802.188 cv
386.807 801.008 378.407 801.545 378.407 801.545 cv
cp
.211765 .266667 .298039 rgb
f
404.848 773.959 mo
391.318 781.691 li
378.271 785.073 li
378.271 785.073 375.017 793.563 378.496 801.759 cv
395.386 804.139 415.009 808.27 428.435 810.591 cv
434.692 811.672 455.879 810.67 458.552 808.957 cv
458.866 808.756 461.205 796.608 451.238 795.221 cv
425.452 791.631 428.984 786.759 404.848 773.959 cv
cp
.937255 .937255 .937255 rgb
f
424.084 785.202 mo
415.853 793.866 li
419.969 796.249 li
429.272 788.393 li
424.084 785.202 li
cp
416.503 779.787 mo
408.272 788.451 li
412.388 790.834 li
421.691 782.978 li
416.503 779.787 li
cp
414.326 778.213 mo
405.023 786.069 li
400.908 783.686 li
409.139 775.022 li
414.326 778.213 li
cp
1 1 1 rgb
f
283.483 332.918 mo
284.051 340.187 284.788 354.329 283.229 357.633 cv
281.834 360.339 277.929 361.437 278.116 365.303 cv
278.585 374.989 282.167 383.474 279.136 383.864 cv
276.106 384.254 273.991 383.666 273.2 384.951 cv
272.743 385.693 272.333 386.986 271.752 388.511 cv
271.581 388.959 272.03 390.783 270.315 391.424 cv
271.328 392.542 269.989 393.55 268.908 395.942 cv
267.386 400.329 265.857 403.886 263.06 405.147 cv
257.907 407.468 240.788 396.751 240.156 399.202 cv
239.142 402.457 235.321 410.136 233.749 416.82 cv
239.377 432.056 li
198.576 403.702 li
198.576 403.702 208.534 380.299 205.718 367.626 cv
202.903 354.953 198.538 341.294 208.696 328.138 cv
218.853 314.981 228.782 296.524 254.708 306.461 cv
280.635 316.397 283.116 328.225 283.483 332.918 cv
cp
.968627 .701961 .611765 rgb
f
236.348 423.855 mo
239.377 432.056 li
198.576 403.702 li
198.576 403.702 199.487 401.81 201.058 397.148 cv
207.715 402.417 228.612 418.965 236.348 423.855 cv
cp
.917647 .631373 .54902 rgb
f
233.855 417.108 mo
233.855 417.108 230.57 412.172 229.323 410.279 cv
227.452 407.44 231.636 391.581 231.636 391.581 cv
236.128 388.018 237.774 380.699 239.619 374.982 cv
240.666 371.735 242.929 361.189 242.513 354.177 cv
242.374 351.842 244.194 355.459 245.602 358.383 cv
245.602 358.383 248.129 370.805 246.577 378.31 cv
245.504 383.497 261.127 396.894 268.813 396.123 cv
267.646 398.85 265.067 404.242 263.06 405.146 cv
257.907 407.468 240.788 396.751 240.156 399.202 cv
239.142 402.457 235.321 410.136 233.749 416.82 cv
233.855 417.108 li
cp
f
270.978 354.625 mo
270.799 355.414 273.773 355.145 277.176 356.04 cv
280.579 356.936 283.075 358.645 283.3 357.867 cv
283.711 356.444 281.852 353.442 278.449 352.546 cv
275.047 351.651 271.327 353.086 270.978 354.625 cv
cp
.917647 .623529 .545098 rgb
f
271.61 353.507 mo
270.291 354.674 275.135 353.779 278.495 354.864 cv
281.855 355.948 282.46 358.601 283.779 357.434 cv
285.098 356.267 284.517 353.491 281.157 352.407 cv
277.797 351.322 272.929 352.34 271.61 353.507 cv
cp
.196078 0 .00392157 rgb
f
272.026 364.269 mo
271.72 365.896 272.587 367.425 273.964 367.685 cv
275.34 367.944 276.704 366.835 277.011 365.208 cv
277.317 363.581 276.45 362.052 275.073 361.793 cv
273.697 361.534 272.333 362.642 272.026 364.269 cv
cp
.184314 .0117647 0 rgb
f
272.531 363.465 mo
272.376 364.284 272.813 365.054 273.506 365.185 cv
274.2 365.316 274.887 364.757 275.041 363.938 cv
275.196 363.118 274.759 362.348 274.065 362.217 cv
273.372 362.087 272.685 362.645 272.531 363.465 cv
cp
1 1 1 rgb
f
271.624 379.204 mo
270.718 383.816 276.224 382.142 280.281 383.014 cv
280.06 383.534 279.694 383.846 279.126 383.919 cv
277.057 384.186 274.351 383.897 273.554 384.602 cv
272.011 383.993 270.001 382.903 271.624 379.204 cv
cp
.917647 .623529 .545098 rgb
f
233.272 348.608 mo
231.032 350.651 229.643 354.3 229.878 358.289 cv
230.219 364.091 233.862 368.415 238.016 367.948 cv
239.345 367.798 240.563 367.172 241.597 366.204 cv
240.405 368.742 238.488 370.426 236.24 370.557 cv
232.22 370.792 228.668 365.977 228.307 359.803 cv
227.999 354.519 230.131 349.962 233.272 348.608 cv
cp
f
239.622 363.974 mo
235.353 363.575 232.411 360.152 234.904 356.742 cv
238.381 351.985 238.401 357.274 237.85 358.224 cv
236.369 360.782 238.076 361.253 239.622 363.974 cv
cp
f
270.596 392.626 mo
270.331 393.583 269.433 394.689 268.899 395.872 cv
268.847 396.023 268.698 396.468 268.518 396.978 cv
268.336 396.766 268.169 395.56 268.316 394.591 cv
268.375 394.204 265.283 392.801 264.61 391.451 cv
265.237 391.865 269.186 393.692 270.596 392.626 cv
cp
f
237.227 384.484 mo
239.62 377.025 242.202 370.153 243.49 355.388 cv
243.49 355.388 246.181 367.979 245.458 377.552 cv
245.245 380.368 251.529 389.669 258.905 394.25 cv
259.593 393.146 260.741 391.11 261.847 388.274 cv
263.58 383.834 271.144 386.196 272.569 386.433 cv
273.219 386.541 272.678 389.141 271.595 388.924 cv
270.512 388.707 264.555 388.383 263.472 389.032 cv
262.662 389.518 260.825 393.088 259.948 394.861 cv
262.823 396.444 265.82 397.257 268.635 396.644 cv
270.567 398.985 267.691 407.448 261.832 406.942 cv
245.891 405.567 234.833 391.942 237.227 384.484 cv
cp
.196078 0 .00392157 rgb
f
239.377 429.465 mo
239.377 429.465 249.049 460.307 249.583 474.718 cv
250.116 489.129 237.951 504.871 234.749 520.883 cv
231.546 536.895 237.841 587.156 237.841 587.156 cv
162.763 607.438 li
162.763 607.438 160.43 557.968 159.146 490.797 cv
158.137 438.069 176.75 425.784 199.247 399.455 cv
208.854 404.792 239.377 429.465 239.377 429.465 cv
cp
0 .466667 .529412 rgb
f
167.302 606.212 mo
172.274 597.746 179.962 506.428 179.311 498.376 cv
178.738 491.287 177.13 458.86 179.058 451.92 cv
183.027 437.638 205.461 433.199 213.924 447.48 cv
219.545 456.966 223.125 478.217 228.109 487.994 cv
232.08 495.783 243.323 497.755 243.323 497.755 cv
240.009 505.318 236.312 513.068 234.749 520.883 cv
231.546 536.895 237.841 587.156 237.841 587.156 cv
167.302 606.212 li
cp
0 .403922 .447059 rgb
f
311.054 525.035 mo
318.34 527.869 328.79 525.31 332.416 522.751 cv
336.041 520.191 343.293 519.978 344.572 519.765 cv
345.852 519.552 349.904 514.433 340.094 511.447 cv
330.283 508.461 315.533 520.343 311.054 525.035 cv
cp
.917647 .631373 .54902 rgb
f
332.298 515.004 mo
334.912 512.257 337.34 513.947 339.15 514.446 cv
342.506 515.373 346.077 516.084 349.235 517.238 cv
350.19 517.587 351.975 521.556 353.632 524.857 cv
355.128 527.835 358.482 528.939 354.715 530.155 cv
352.797 530.774 349.416 527.371 348.991 525.808 cv
346.625 524.984 344.738 521.954 344.737 521.952 cv
344.278 521.291 340.003 520.849 339.181 520.53 cv
334.913 518.872 330.124 517.29 332.298 515.004 cv
cp
.886275 .584314 .513726 rgb
f
311.42 513.651 mo
327.795 506.357 328.082 505.365 332.629 506.258 cv
339.732 509.343 343.286 510.496 346.847 512.229 cv
347.917 512.75 352.158 517.172 354.865 520.756 cv
357.307 523.99 360.508 526.24 357.107 526.767 cv
355.376 527.035 351.394 525.923 350.567 522.581 cv
347.93 521.332 343.719 517.845 343.719 517.845 cv
343.719 517.845 337.83 517.173 333.695 516.246 cv
331.886 516.178 330.609 517.3 327.8 518.673 cv
321.765 521.624 318.609 524.836 312.13 522.841 cv
307.566 521.432 300.08 523.718 300.08 523.718 cv
300.08 523.718 300.193 523.966 298.915 518.544 cv
306.288 520.037 307.589 515.357 311.42 513.651 cv
cp
.917647 .631373 .54902 rgb
f
311.922 511.661 mo
328.876 504.978 331.654 506.097 334.703 507.703 cv
338.999 510.442 342.569 511.82 346.209 513.553 cv
347.302 514.073 347.814 516.971 350.58 520.555 cv
353.075 523.789 356.347 526.039 352.871 526.566 cv
351.102 526.834 347.877 525.406 347.032 522.064 cv
344.337 520.815 343.034 517.849 343.034 517.849 cv
343.034 517.849 339.526 518.485 335.301 517.558 cv
333.452 517.49 331.61 519.764 328.739 521.138 cv
322.572 524.088 319.158 527.3 312.537 525.305 cv
307.873 523.897 292.206 528.593 292.206 528.593 cv
292.206 528.593 287.496 521.134 286.19 515.712 cv
298.059 517.063 306.686 513.724 311.922 511.661 cv
cp
.968627 .701961 .611765 rgb
f
208.345 438.523 mo
197.414 431.897 186.324 432.75 179.926 447.252 cv
177.77 452.139 179.634 462.499 183.282 474.512 cv
186.751 506.827 201.396 520.76 206.941 535.831 cv
231.977 544.339 269.854 535.348 296.879 527.315 cv
294.872 519.637 292.936 516.029 290.099 515.922 cv
269.745 515.154 247.777 509.022 230.325 508.651 cv
226.471 509.567 233.244 511.234 215.756 470.712 cv
217.462 462.181 215.361 442.776 208.345 438.523 cv
cp
f
302.675 526.314 mo
302.675 526.314 302.546 514.459 300.315 514.459 cv
298.083 514.459 294.575 514.726 294.482 516.205 cv
294.412 517.32 295.504 527.722 296.061 527.848 cv
297.36 528.142 302.326 527.5 302.675 526.314 cv
cp
.2 .215686 .227451 rgb
f
292.014 514.657 mo
292.145 515.636 293.046 516.324 294.025 516.193 cv
301.639 515.175 li
302.619 515.044 303.307 514.144 303.176 513.165 cv
303.045 512.185 302.145 511.497 301.165 511.628 cv
293.551 512.646 li
292.571 512.777 291.883 513.677 292.014 514.657 cv
cp
f
303.176 513.165 mo
303.307 514.144 302.619 515.044 301.639 515.175 cv
294.025 516.193 li
293.046 516.324 292.145 515.636 292.014 514.657 cv
291.996 514.518 303.137 512.87 303.176 513.165 cv
cp
.0666667 .0941176 .109804 rgb
f
292.422 513.272 mo
292.699 512.943 293.091 512.707 293.551 512.646 cv
301.165 511.628 li
301.662 511.562 302.137 511.707 302.504 511.994 cv
302.248 512.093 292.75 513.433 292.422 513.272 cv
cp
.745098 .858824 .929412 rgb
f
192.098 474.515 mo
192.098 474.515 190.861 501.374 213.337 523.737 cv
213.337 523.737 215.927 529.951 217.607 531.266 cv
231.802 542.377 278.626 531.82 295.597 525.76 cv
295.83 527.357 li
268.806 535.39 231.977 544.339 206.941 535.831 cv
201.396 520.76 186.751 506.827 183.282 474.512 cv
181.261 467.857 179.792 461.714 179.246 456.723 cv
179.841 458.836 191.076 473.468 192.098 474.515 cv
cp
.917647 .631373 .54902 rgb
f
228.854 586.83 mo
228.854 586.83 265.38 586.645 296.974 590.858 cv
324.989 594.593 340.077 610.263 335.459 626.425 cv
331.281 641.047 333.542 650.405 330.579 663.629 cv
327.615 676.853 310.962 727.446 301.436 768.909 cv
300.815 771.614 303.545 785.015 310.28 794 cv
315.288 800.68 337.693 800.12 331.529 813.007 cv
309.123 813.007 300.38 813.254 286.713 797.878 cv
277.748 787.793 264.301 785.552 279.989 770.423 cv
286.366 764.274 286.497 750.55 288.394 730.081 cv
292.327 687.637 279.429 681.335 292.716 649.695 cv
301.457 628.879 291.91 632.049 280.704 635.411 cv
259.583 641.747 209.027 639.474 192.779 639.474 cv
176.53 639.474 159.03 634.513 162.952 603.136 cv
213.38 592.49 228.854 586.83 228.854 586.83 cv
cp
.968627 .701961 .611765 rgb
f
161.667 602.332 mo
212.095 591.686 230.127 586.167 230.127 586.167 cv
230.127 586.167 266.828 586.202 298.422 590.414 cv
326.437 594.15 345.366 608.673 340.747 624.836 cv
336.569 639.458 336.271 650.928 333.308 664.152 cv
331.433 672.517 322.002 695.31 314.442 721.81 cv
313.897 723.719 314.553 732.156 314.448 732.563 cv
314.255 733.312 309.651 739.4 308.673 742.999 cv
307.531 747.199 308.441 753.985 308.369 754.245 cv
308.145 755.047 303.291 763.863 303.104 764.563 cv
303.104 764.563 291.311 763.013 285.686 759.991 cv
285.686 759.991 283.868 752.931 283.698 748.494 cv
283.595 745.812 285.67 740.64 284.874 737.205 cv
284.874 737.205 283.498 727.422 283.516 727.17 cv
283.516 727.17 286.92 719.988 287.066 716.249 cv
288.293 684.817 284.001 672.183 289.23 655.935 cv
296.147 634.443 290.164 635.203 290.164 635.203 cv
269.043 641.54 209.361 642.613 193.112 642.613 cv
176.863 642.613 156.436 633.178 161.667 602.332 cv
cp
.0470588 .192157 .266667 rgb
f
163.283 601.99 mo
169.402 633.074 194.646 623.21 207.242 621.528 cv
214.457 620.565 262.896 639.872 295.252 617.789 cv
298.895 615.302 291.639 630.553 296.067 630.985 cv
298.539 631.226 313.256 617.872 315.745 617.864 cv
317.887 617.857 304.104 630.401 302.647 632.081 cv
298.93 636.368 305.239 635.87 313.314 643.047 cv
299.316 640.806 307.944 648.6 306.413 654.627 cv
302.956 668.239 292.966 679.467 290.672 733.794 cv
290.264 743.476 300.81 756.789 308.385 744.383 cv
307.714 748.541 308.434 754.012 308.369 754.245 cv
308.145 755.047 303.291 763.863 303.104 764.563 cv
303.104 764.563 291.312 763.013 285.686 759.991 cv
285.686 759.991 283.868 752.931 283.698 748.494 cv
283.595 745.812 285.67 740.64 284.874 737.205 cv
284.874 737.205 283.498 727.422 283.516 727.17 cv
283.516 727.17 286.92 719.988 287.066 716.249 cv
288.293 684.817 284.001 672.183 289.23 655.934 cv
296.147 634.443 290.164 635.203 290.164 635.203 cv
269.043 641.54 209.361 642.613 193.112 642.613 cv
176.863 642.613 155.675 632.721 162.217 602.216 cv
162.767 602.1 162.741 602.104 163.283 601.99 cv
cp
.054902 .137255 .188235 rgb
f
277.837 777.521 mo
277.837 777.521 271.383 776.724 269.851 785.726 cv
269.468 788.599 279.618 795.876 284.406 800.856 cv
289.194 805.835 302.703 816.368 309.214 816.368 cv
315.726 816.368 328.83 816.368 332.086 816.368 cv
335.341 816.368 336.325 812.03 334.263 812.03 cv
328.819 812.03 277.837 777.521 277.837 777.521 cv
cp
.211765 .266667 .298039 rgb
f
306.901 769.823 mo
299.537 770.69 li
282.693 766.688 li
282.693 766.688 274.936 770.081 273.442 778.859 cv
273.068 781.66 284.214 792.232 288.057 797.765 cv
293.472 805.563 304.172 813.38 310.522 813.38 cv
316.872 813.38 332.179 813.38 335.354 813.38 cv
335.727 813.38 338.665 805.692 333.681 801.614 cv
329.572 798.252 320.421 795.824 319.113 794.517 cv
313.434 792.145 306.901 769.823 306.901 769.823 cv
cp
.937255 .937255 .937255 rgb
f
315.621 788.184 mo
303.871 790.363 li
305.803 794.708 li
317.946 793.813 li
315.621 788.184 li
cp
312.665 779.349 mo
300.915 781.528 li
302.847 785.873 li
314.99 784.978 li
312.665 779.349 li
cp
311.828 776.796 mo
299.684 777.691 li
297.753 773.346 li
309.503 771.167 li
311.828 776.796 li
cp
1 1 1 rgb
f
284.741 343.622 mo
285.272 330.701 283.856 318.488 283.679 315.479 cv
283.502 312.47 263.678 293.885 238.013 297.425 cv
212.349 300.965 200.667 313.355 199.959 320.258 cv
199.251 327.161 201.021 348.047 202.437 354.418 cv
212.703 351.409 248.633 343.622 284.741 343.622 cv
cp
.113725 .231373 .239216 rgb
f
257.35 317.387 mo
256.534 310.252 239.333 297.277 239.333 297.277 cv
264.352 294.538 283.505 312.522 283.679 315.479 cv
283.856 318.488 285.272 330.701 284.741 343.622 cv
276.231 343.622 267.734 344.055 259.579 344.756 cv
259.592 344.297 257.768 321.046 257.35 317.387 cv
cp
.117647 .27451 .278431 rgb
f
199.959 320.258 mo
200.643 313.586 211.582 301.79 235.486 297.812 cv
235.537 298.414 223.432 315.95 223.508 316.776 cv
223.852 320.471 225.967 343.197 226.393 346.891 cv
207.598 351.338 208.21 350.355 202.072 352.154 cv
200.656 345.782 199.251 327.161 199.959 320.258 cv
cp
f
245.106 346.299 mo
229.799 355.252 195.852 370.334 188.343 368.313 cv
180.834 366.291 167.624 364.123 171.956 362.101 cv
176.289 360.08 226.623 342.545 245.106 346.299 cv
cp
.2 .215686 .227451 rgb
f
226.974 495.818 mo
221.342 499.717 191.884 512.28 189.285 512.28 cv
181.92 487.587 181.487 481.089 179.754 473.725 cv
178.021 466.36 171.09 438.202 192.317 433.436 cv
213.545 428.671 218.31 446.866 218.31 457.696 cv
221.763 469.396 226.974 495.818 226.974 495.818 cv
cp
0 .501961 .6 rgb
f
143.213 530.179 mo
143.213 640.565 li
143.213 651.995 152.512 661.294 163.942 661.294 cv
269.423 661.294 li
269.423 661.294 273.529 669.067 257.334 669.067 cv
221.706 669.067 163.942 669.067 163.942 669.067 cv
148.201 669.067 135.44 656.306 135.44 640.565 cv
135.44 640.565 135.44 571.406 135.44 543.181 cv
135.44 524.071 143.213 530.179 143.213 530.179 cv
cp
.113725 .231373 .239216 rgb
f
164.374 656.543 mo
164.374 660.121 167.274 663.021 170.852 663.021 cv
281.408 663.021 li
284.985 663.021 287.885 660.121 287.885 656.543 cv
287.885 647.474 li
287.885 643.897 284.985 640.997 281.408 640.997 cv
170.852 640.997 li
167.274 640.997 164.374 643.897 164.374 647.474 cv
164.374 656.543 li
cp
.521569 .345098 .729412 rgb
f
266.33 687.85 mo
265.678 680.946 257.913 675.329 249.018 675.329 cv
176.466 675.329 li
167.572 675.329 159.806 680.946 159.154 687.85 cv
146.884 812.922 li
140.838 812.922 li
152.705 687.241 li
153.677 676.952 164.302 668.851 176.466 668.851 cv
249.018 668.851 li
261.182 668.851 271.808 676.952 272.779 687.241 cv
284.646 812.922 li
277.939 812.922 li
266.33 687.85 li
cp
.0784314 .172549 .176471 rgb
f
150.379 626.922 mo
150.745 630.241 153.732 632.634 157.051 632.268 cv
160.37 631.902 162.764 628.914 162.398 625.595 cv
144.684 465.055 li
144.318 461.736 141.331 459.342 138.012 459.708 cv
134.693 460.075 132.299 463.062 132.665 466.381 cv
150.379 626.922 li
cp
.521569 .345098 .729412 rgb
f
906.35 332.918 mo
905.782 340.187 905.045 354.329 906.604 357.633 cv
907.999 360.339 911.904 361.437 911.717 365.303 cv
911.248 374.989 907.666 383.474 910.697 383.864 cv
913.728 384.254 915.842 383.666 916.633 384.951 cv
917.09 385.693 917.5 386.986 918.081 388.511 cv
918.252 388.959 917.803 390.783 919.518 391.424 cv
918.505 392.542 919.844 393.55 920.925 395.942 cv
922.447 400.329 923.976 403.886 926.773 405.147 cv
931.926 407.468 949.045 396.751 949.678 399.202 cv
950.691 402.457 954.512 410.136 956.084 416.82 cv
947.494 439.531 li
991.257 403.702 li
991.257 403.702 981.299 380.299 984.115 367.626 cv
986.93 354.953 991.295 341.294 981.137 328.138 cv
970.98 314.981 961.051 296.524 935.125 306.461 cv
909.198 316.397 906.717 328.225 906.35 332.918 cv
cp
.968627 .701961 .611765 rgb
f
951.946 427.925 mo
947.188 440.506 li
991.257 403.702 li
991.257 403.702 990.346 401.81 988.775 397.148 cv
982.118 402.417 959.682 423.035 951.946 427.925 cv
cp
.917647 .631373 .54902 rgb
f
955.978 417.108 mo
955.978 417.108 959.263 412.172 960.51 410.279 cv
962.381 407.44 958.197 391.581 958.197 391.581 cv
953.705 388.018 952.059 380.699 950.214 374.982 cv
949.167 371.735 946.904 361.189 947.32 354.177 cv
947.459 351.842 945.639 355.459 944.231 358.383 cv
944.231 358.383 944.247 379.289 945.799 386.794 cv
946.872 391.981 928.904 411.054 921.02 396.123 cv
922.187 398.85 924.766 404.242 926.773 405.146 cv
931.926 407.468 949.045 396.751 949.678 399.202 cv
950.691 402.457 954.512 410.136 956.084 416.82 cv
955.978 417.108 li
cp
f
918.855 354.625 mo
919.034 355.414 916.06 355.145 912.657 356.04 cv
909.254 356.936 906.758 358.645 906.533 357.867 cv
906.122 356.444 907.981 353.442 911.384 352.546 cv
914.786 351.651 918.506 353.086 918.855 354.625 cv
cp
.917647 .623529 .545098 rgb
f
918.223 353.507 mo
919.542 354.674 914.699 353.779 911.338 354.864 cv
907.978 355.948 907.373 358.601 906.054 357.434 cv
904.735 356.267 905.316 353.491 908.676 352.407 cv
912.036 351.322 916.904 352.34 918.223 353.507 cv
cp
.937255 .67451 .215686 rgb
f
917.807 364.269 mo
918.113 365.896 917.246 367.425 915.87 367.685 cv
914.493 367.944 913.129 366.835 912.823 365.208 cv
912.516 363.581 913.383 362.052 914.76 361.793 cv
916.136 361.534 917.5 362.642 917.807 364.269 cv
cp
.184314 .0117647 0 rgb
f
917.302 363.465 mo
917.457 364.284 917.02 365.054 916.327 365.185 cv
915.633 365.316 914.946 364.757 914.792 363.938 cv
914.638 363.118 915.074 362.348 915.768 362.217 cv
916.461 362.087 917.148 362.645 917.302 363.465 cv
cp
1 1 1 rgb
f
918.209 379.204 mo
919.115 383.816 913.609 382.142 909.552 383.014 cv
909.773 383.534 910.139 383.846 910.707 383.919 cv
912.776 384.186 915.482 383.897 916.279 384.602 cv
917.822 383.993 919.833 382.903 918.209 379.204 cv
cp
.917647 .623529 .545098 rgb
f
956.561 348.608 mo
958.802 350.651 960.19 354.3 959.955 358.289 cv
959.615 364.091 955.971 368.415 951.818 367.948 cv
950.488 367.798 949.27 367.172 948.236 366.204 cv
949.428 368.742 951.345 370.426 953.593 370.557 cv
957.614 370.792 961.165 365.977 961.526 359.803 cv
961.834 354.519 959.702 349.962 956.561 348.608 cv
cp
f
950.211 363.974 mo
954.48 363.575 957.422 360.152 954.929 356.742 cv
951.452 351.985 951.432 357.274 951.983 358.224 cv
953.464 360.782 951.757 361.253 950.211 363.974 cv
cp
f
919.237 392.626 mo
919.502 393.583 920.4 394.689 920.934 395.872 cv
920.986 396.023 921.135 396.468 921.315 396.978 cv
921.497 396.766 921.664 395.56 921.517 394.591 cv
921.459 394.204 924.55 392.801 925.223 391.451 cv
924.596 391.865 920.647 393.692 919.237 392.626 cv
cp
f
947.494 439.531 mo
947.494 439.531 940.784 460.307 940.25 474.718 cv
939.717 489.129 951.882 504.871 955.084 520.883 cv
958.287 536.895 951.992 587.156 951.992 587.156 cv
1027.07 607.438 li
1027.07 607.438 1029.4 557.968 1030.69 490.797 cv
1031.7 438.069 1013.08 425.784 990.586 399.455 cv
980.979 404.792 947.494 439.531 947.494 439.531 cv
cp
.0470588 .192157 .266667 rgb
f
1025.78 603.18 mo
1020.81 594.713 1013.12 503.395 1013.77 495.343 cv
1014.34 488.255 1015.95 455.827 1014.02 448.888 cv
1010.06 434.605 987.621 430.167 979.159 444.447 cv
973.537 453.933 969.957 475.184 964.973 484.961 cv
961.002 492.75 949.759 494.722 949.759 494.722 cv
953.073 502.285 956.771 510.036 958.334 517.85 cv
961.536 533.862 955.241 584.124 955.241 584.124 cv
1025.78 603.18 li
cp
.0235294 .133333 .2 rgb
f
878.779 525.035 mo
871.493 527.869 861.043 525.31 857.417 522.751 cv
853.792 520.191 846.54 519.978 845.261 519.765 cv
843.981 519.552 839.929 514.433 849.739 511.447 cv
859.55 508.461 874.3 520.343 878.779 525.035 cv
cp
.917647 .631373 .54902 rgb
f
857.535 515.004 mo
854.921 512.257 852.493 513.947 850.683 514.446 cv
847.327 515.373 843.756 516.084 840.598 517.238 cv
839.643 517.587 837.859 521.556 836.201 524.857 cv
834.705 527.835 831.351 528.939 835.118 530.155 cv
837.036 530.774 840.417 527.371 840.842 525.808 cv
843.208 524.984 845.095 521.954 845.096 521.952 cv
845.555 521.291 849.83 520.849 850.652 520.53 cv
854.92 518.872 859.709 517.29 857.535 515.004 cv
cp
.886275 .584314 .513726 rgb
f
878.413 513.651 mo
862.039 506.357 861.752 505.365 857.204 506.258 cv
850.101 509.343 846.547 510.496 842.986 512.229 cv
841.916 512.75 837.675 517.172 834.968 520.756 cv
832.526 523.99 829.325 526.24 832.726 526.767 cv
834.457 527.035 838.439 525.923 839.266 522.581 cv
841.903 521.332 846.114 517.845 846.114 517.845 cv
846.114 517.845 852.003 517.173 856.138 516.246 cv
857.947 516.178 859.224 517.3 862.033 518.673 cv
868.069 521.624 871.224 524.836 877.703 522.841 cv
882.268 521.432 889.753 523.718 889.753 523.718 cv
889.753 523.718 889.641 523.966 890.919 518.544 cv
883.545 520.037 882.244 515.357 878.413 513.651 cv
cp
.917647 .631373 .54902 rgb
f
877.911 511.661 mo
860.957 504.978 858.179 506.097 855.13 507.703 cv
850.834 510.442 847.264 511.82 843.624 513.553 cv
842.531 514.073 842.02 516.971 839.253 520.555 cv
836.758 523.789 833.486 526.039 836.962 526.566 cv
838.731 526.834 841.956 525.406 842.801 522.064 cv
845.496 520.815 846.799 517.849 846.799 517.849 cv
846.799 517.849 850.307 518.485 854.532 517.558 cv
856.381 517.49 858.223 519.764 861.094 521.138 cv
867.262 524.088 870.675 527.3 877.296 525.305 cv
881.96 523.897 897.627 528.593 897.627 528.593 cv
897.627 528.593 902.337 521.134 903.643 515.712 cv
891.775 517.063 883.147 513.724 877.911 511.661 cv
cp
.968627 .701961 .611765 rgb
f
981.488 438.523 mo
992.419 431.897 1003.51 432.75 1009.91 447.252 cv
1012.06 452.139 1010.2 462.499 1006.55 474.512 cv
1003.08 506.827 988.438 520.76 982.892 535.831 cv
957.856 544.339 919.979 535.348 892.955 527.315 cv
894.962 519.637 896.897 516.029 899.734 515.922 cv
920.088 515.154 942.056 509.022 959.508 508.651 cv
963.362 509.567 956.589 511.234 974.077 470.712 cv
972.371 462.181 974.472 442.776 981.488 438.523 cv
cp
f
887.158 526.314 mo
887.158 526.314 887.287 514.459 889.518 514.459 cv
891.75 514.459 895.259 514.726 895.351 516.205 cv
895.421 517.32 894.329 527.722 893.772 527.848 cv
892.473 528.142 887.507 527.5 887.158 526.314 cv
cp
.2 .215686 .227451 rgb
f
897.819 514.657 mo
897.688 515.636 896.787 516.324 895.808 516.193 cv
888.194 515.175 li
887.214 515.044 886.526 514.144 886.657 513.165 cv
886.788 512.185 887.688 511.497 888.668 511.628 cv
896.282 512.646 li
897.262 512.777 897.95 513.677 897.819 514.657 cv
cp
f
886.657 513.165 mo
886.526 514.144 887.214 515.044 888.194 515.175 cv
895.808 516.193 li
896.787 516.324 897.688 515.636 897.819 514.657 cv
897.837 514.518 886.697 512.87 886.657 513.165 cv
cp
.0666667 .0941176 .109804 rgb
f
897.411 513.272 mo
897.134 512.943 896.742 512.707 896.282 512.646 cv
888.668 511.628 li
888.171 511.562 887.696 511.707 887.33 511.994 cv
887.585 512.093 897.083 513.433 897.411 513.272 cv
cp
.745098 .858824 .929412 rgb
f
997.736 474.515 mo
997.736 474.515 998.972 501.374 976.496 523.737 cv
976.496 523.737 973.906 529.951 972.226 531.266 cv
958.031 542.377 911.207 531.82 894.236 525.76 cv
894.003 527.357 li
921.027 535.39 957.856 544.339 982.892 535.831 cv
988.438 520.76 1003.08 506.827 1006.55 474.512 cv
1008.57 467.857 1010.04 461.714 1010.59 456.723 cv
1009.99 458.836 998.757 473.468 997.736 474.515 cv
cp
.917647 .631373 .54902 rgb
f
961.052 586.806 mo
961.052 586.806 924.505 586.628 893.377 590.687 cv
865.774 594.287 852.416 609.389 858.818 624.965 cv
864.611 639.056 863.383 648.074 867.806 660.819 cv
872.23 673.563 894.469 722.322 908.572 762.28 cv
909.492 764.886 908.242 777.802 902.498 786.46 cv
898.228 792.898 875.761 792.358 883.348 804.778 cv
905.754 804.778 914.524 805.016 926.494 790.198 cv
934.345 780.479 947.545 778.319 930.186 763.739 cv
923.13 757.813 921.485 744.587 917.328 724.861 cv
908.709 683.956 920.911 677.883 904.131 647.39 cv
893.092 627.33 902.989 630.385 914.566 633.625 cv
936.387 639.731 986.534 637.094 1002.78 637.094 cv
1019.03 637.094 1034.51 631.847 1027.12 601.608 cv
975.52 591.348 961.052 586.806 961.052 586.806 cv
cp
.968627 .701961 .611765 rgb
f
1027.59 601.276 mo
975.99 591.016 959.706 586.167 959.706 586.167 cv
959.706 586.167 923.009 586.201 891.88 590.26 cv
864.277 593.86 846.952 607.857 853.355 623.433 cv
859.147 637.525 860.712 648.579 865.135 661.323 cv
867.933 669.385 879.88 691.351 890.366 716.889 cv
891.122 718.729 891.398 726.86 891.548 727.252 cv
891.824 727.975 897.099 733.842 898.475 737.31 cv
900.081 741.358 899.919 747.898 900.021 748.148 cv
900.333 748.921 906.16 757.417 906.425 758.091 cv
906.425 758.091 918.046 756.598 923.337 753.685 cv
923.337 753.685 924.376 746.882 924.057 742.606 cv
923.864 740.021 921.217 735.037 921.634 731.726 cv
921.634 731.726 921.93 722.298 921.884 722.055 cv
921.884 722.055 917.688 715.134 917.129 711.531 cv
912.432 681.239 915.329 669.063 908.305 653.404 cv
899.016 632.692 905.083 633.424 905.083 633.424 cv
926.904 639.531 986.704 640.565 1002.95 640.565 cv
1019.2 640.565 1036.23 631.002 1027.59 601.276 cv
cp
.788235 .223529 0 rgb
f
1025.13 600.786 mo
1022.45 630.742 999.277 621.866 986.495 620.245 cv
979.174 619.317 932.866 637.924 898.072 616.642 cv
894.155 614.245 903.095 628.943 898.714 629.359 cv
896.268 629.591 880.078 616.722 877.588 616.714 cv
875.445 616.708 890.613 628.796 892.256 630.416 cv
896.446 634.547 890.082 634.067 882.799 640.984 cv
896.55 638.824 888.782 646.335 890.978 652.144 cv
895.938 665.261 907.168 676.083 915.459 728.439 cv
916.937 737.769 907.86 750.6 898.916 738.644 cv
900.046 742.651 899.93 747.923 900.021 748.148 cv
900.333 748.921 906.16 757.417 906.425 758.091 cv
906.425 758.091 918.046 756.598 923.337 753.685 cv
923.337 753.685 924.376 746.882 924.057 742.606 cv
923.864 740.021 921.217 735.037 921.634 731.726 cv
921.634 731.726 921.93 722.298 921.884 722.055 cv
921.884 722.055 917.688 715.134 917.129 711.53 cv
912.432 681.239 915.329 669.063 908.305 653.404 cv
899.016 632.692 905.083 633.424 905.083 633.424 cv
926.904 639.531 986.704 640.565 1002.95 640.565 cv
1019.2 640.565 1037.15 630.603 1027.24 601.205 cv
1026.67 601.093 1025.69 600.896 1025.13 600.786 cv
cp
.756863 .219608 .00784314 rgb
f
933.122 770.579 mo
933.122 770.579 939.488 769.812 942.014 778.487 cv
942.714 781.255 933.367 788.269 929.129 793.068 cv
924.891 797.866 912.545 808.018 906.034 808.018 cv
899.522 808.018 886.418 808.018 883.162 808.018 cv
879.907 808.018 878.444 803.837 880.506 803.837 cv
885.95 803.837 933.122 770.579 933.122 770.579 cv
cp
.211765 .266667 .298039 rgb
f
903.208 763.161 mo
910.668 763.996 li
927.07 760.14 li
927.07 760.14 935.202 763.409 937.665 771.869 cv
938.348 774.569 928.369 784.757 925.138 790.089 cv
920.583 797.604 910.746 805.138 904.396 805.138 cv
898.046 805.138 882.739 805.138 879.564 805.138 cv
879.192 805.138 875.404 797.729 879.938 793.798 cv
883.676 790.558 892.559 788.219 893.722 786.959 cv
899.14 784.673 903.208 763.161 903.208 763.161 cv
cp
.8 .8 .8 rgb
f
894.811 786.281 mo
907.054 787.143 li
908.506 782.956 li
896.515 780.856 li
894.811 786.281 li
cp
896.792 777.766 mo
909.034 778.629 li
910.486 774.441 li
898.496 772.341 li
896.792 777.766 li
cp
900.755 764.456 mo
912.746 766.556 li
911.293 770.744 li
899.051 769.881 li
900.755 764.456 li
cp
1 1 1 rgb
f
960.979 586.83 mo
960.979 586.83 924.453 586.645 892.859 590.858 cv
864.844 594.593 849.756 610.263 854.374 626.425 cv
858.552 641.047 856.291 650.405 859.254 663.629 cv
862.218 676.853 878.872 727.446 888.397 768.909 cv
889.018 771.614 886.288 785.015 879.553 794 cv
874.545 800.68 852.141 800.12 858.304 813.007 cv
880.71 813.007 889.453 813.254 903.12 797.878 cv
912.085 787.793 925.532 785.552 909.844 770.423 cv
903.467 764.274 903.336 750.55 901.439 730.081 cv
897.506 687.637 910.404 681.335 897.117 649.695 cv
888.376 628.879 897.923 632.049 909.129 635.411 cv
930.25 641.747 980.7 639.011 996.949 639.011 cv
1013.2 639.011 1031.64 634.066 1027.72 602.689 cv
977.288 592.043 960.979 586.83 960.979 586.83 cv
cp
.968627 .701961 .611765 rgb
f
1027.24 601.205 mo
976.809 590.559 959.706 586.167 959.706 586.167 cv
959.706 586.167 923.005 586.202 891.411 590.414 cv
863.396 594.15 844.468 608.673 849.086 624.836 cv
853.264 639.458 853.562 650.928 856.526 664.152 cv
858.4 672.517 867.831 695.31 875.391 721.81 cv
875.936 723.719 875.28 732.156 875.385 732.563 cv
875.578 733.312 880.182 739.4 881.16 742.999 cv
882.302 747.199 881.392 753.985 881.464 754.245 cv
881.688 755.047 886.542 763.863 886.729 764.563 cv
886.729 764.563 898.522 763.013 904.147 759.991 cv
904.147 759.991 905.965 752.931 906.135 748.494 cv
906.238 745.812 904.163 740.64 904.959 737.205 cv
904.959 737.205 906.335 727.422 906.317 727.17 cv
906.317 727.17 902.913 719.988 902.767 716.249 cv
901.54 684.817 905.832 672.183 900.603 655.935 cv
893.686 634.443 899.669 635.203 899.669 635.203 cv
920.79 641.54 980.473 642.613 996.721 642.613 cv
1012.97 642.613 1032.47 632.051 1027.24 601.205 cv
cp
.909804 .317647 .0196078 rgb
f
1026.55 601.99 mo
1020.43 633.074 995.188 623.21 982.591 621.528 cv
975.377 620.565 926.937 639.872 894.581 617.789 cv
890.938 615.302 898.194 630.553 893.766 630.985 cv
891.294 631.226 876.577 617.872 874.089 617.864 cv
871.946 617.857 885.729 630.401 887.186 632.081 cv
890.903 636.368 884.594 635.87 876.519 643.047 cv
890.517 640.806 881.89 648.6 883.42 654.627 cv
886.877 668.239 896.867 679.467 899.161 733.794 cv
899.569 743.476 889.023 756.789 881.448 744.383 cv
882.12 748.541 881.399 754.012 881.464 754.245 cv
881.688 755.047 886.542 763.863 886.729 764.563 cv
886.729 764.563 898.522 763.013 904.147 759.991 cv
904.147 759.991 905.965 752.931 906.135 748.494 cv
906.238 745.812 904.163 740.64 904.959 737.205 cv
904.959 737.205 906.335 727.422 906.317 727.17 cv
906.317 727.17 902.913 719.988 902.767 716.249 cv
901.54 684.817 905.832 672.183 900.603 655.934 cv
893.686 634.443 899.669 635.203 899.669 635.203 cv
920.79 641.54 980.473 642.613 996.721 642.613 cv
1012.97 642.613 1034.16 632.721 1027.62 602.216 cv
1027.07 602.1 1027.09 602.104 1026.55 601.99 cv
cp
.827451 .258824 .00784314 rgb
f
911.996 777.521 mo
911.996 777.521 918.45 776.724 919.982 785.726 cv
920.365 788.599 910.215 795.876 905.427 800.856 cv
900.639 805.835 887.13 816.368 880.619 816.368 cv
874.107 816.368 861.003 816.368 857.748 816.368 cv
854.492 816.368 853.508 812.03 855.57 812.03 cv
861.014 812.03 911.996 777.521 911.996 777.521 cv
cp
.211765 .266667 .298039 rgb
f
882.932 769.823 mo
890.296 770.69 li
907.14 766.688 li
907.14 766.688 914.897 770.081 916.391 778.859 cv
916.765 781.66 905.619 792.232 901.776 797.765 cv
896.361 805.563 885.661 813.38 879.311 813.38 cv
872.961 813.38 857.654 813.38 854.479 813.38 cv
854.107 813.38 851.168 805.692 856.152 801.614 cv
860.261 798.252 869.413 795.824 870.72 794.517 cv
876.399 792.145 882.932 769.823 882.932 769.823 cv
cp
.937255 .937255 .937255 rgb
f
871.887 793.813 mo
884.03 794.708 li
885.962 790.363 li
874.212 788.184 li
871.887 793.813 li
cp
874.843 784.978 mo
886.986 785.873 li
888.918 781.528 li
877.168 779.349 li
874.843 784.978 li
cp
880.33 771.167 mo
892.08 773.346 li
890.149 777.691 li
878.005 776.796 li
880.33 771.167 li
cp
1 1 1 rgb
f
960.523 508.946 mo
961.794 512.918 965.366 534.157 969.547 540.141 cv
976.657 540.164 988.651 539.356 989.264 537.695 cv
996.629 513.002 1008.35 481.089 1010.08 473.725 cv
1011.81 466.36 1018.74 438.202 997.516 433.436 cv
976.289 428.671 971.523 446.866 971.523 457.696 cv
964.716 491.92 958.79 503.531 960.523 508.946 cv
cp
.0470588 .192157 .266667 rgb
f
1046.62 530.179 mo
1046.62 640.565 li
1046.62 651.995 1037.32 661.294 1025.89 661.294 cv
920.41 661.294 li
920.41 661.294 916.304 669.067 932.499 669.067 cv
968.127 669.067 1025.89 669.067 1025.89 669.067 cv
1041.63 669.067 1054.39 656.306 1054.39 640.565 cv
1054.39 640.565 1054.39 571.406 1054.39 543.181 cv
1054.39 524.071 1046.62 530.179 1046.62 530.179 cv
cp
.113725 .231373 .239216 rgb
f
1025.46 656.543 mo
1025.46 660.121 1022.56 663.021 1018.98 663.021 cv
908.426 663.021 li
904.848 663.021 901.948 660.121 901.948 656.543 cv
901.948 647.474 li
901.948 643.897 904.848 640.997 908.426 640.997 cv
1018.98 640.997 li
1022.56 640.997 1025.46 643.897 1025.46 647.474 cv
1025.46 656.543 li
cp
.521569 .345098 .729412 rgb
f
923.503 687.85 mo
924.155 680.946 931.92 675.329 940.815 675.329 cv
1013.37 675.329 li
1022.26 675.329 1030.03 680.946 1030.68 687.85 cv
1042.95 812.922 li
1049 812.922 li
1037.13 687.241 li
1036.16 676.952 1025.53 668.851 1013.37 668.851 cv
940.815 668.851 li
928.651 668.851 918.025 676.952 917.054 687.241 cv
905.187 812.922 li
911.894 812.922 li
923.503 687.85 li
cp
.0784314 .172549 .176471 rgb
f
1039.45 626.922 mo
1039.09 630.241 1036.1 632.634 1032.78 632.268 cv
1029.46 631.902 1027.07 628.914 1027.44 625.595 cv
1045.15 465.055 li
1045.52 461.736 1048.5 459.342 1051.82 459.708 cv
1055.14 460.075 1057.53 463.062 1057.17 466.381 cv
1039.45 626.922 li
cp
.521569 .345098 .729412 rgb
f
960.384 508.165 mo
960.235 507.295 945.871 508.923 943.164 510.006 cv
943.489 519.428 946.846 538.056 948.254 539.356 cv
951.07 539.789 966.557 540.656 969.914 540.006 cv
966.774 532.208 962.225 514.23 960.384 508.165 cv
cp
.0235294 .133333 .2 rgb
f
906.083 336.725 mo
906.083 336.725 916.919 333.221 924.139 330.91 cv
923.272 337.553 928.615 341.596 928.615 341.596 cv
936.991 340.441 li
936.991 340.441 944.54 356.397 945.097 361.849 cv
947.676 357.192 947.32 354.177 947.32 354.177 cv
947.32 354.177 947.388 348.527 953.452 347.661 cv
959.517 346.794 965.005 355.747 967.026 361.524 cv
969.048 367.3 977.712 374.52 979.734 374.52 cv
984.066 373.653 984.066 373.653 984.066 373.653 cv
984.066 373.653 987.459 350.91 989.263 341.808 cv
992.008 330.116 989.208 304.996 966.681 296.331 cv
955.706 284.49 914.752 288.167 900.601 310.983 cv
886.449 333.798 883.561 328.311 882.695 328.022 cv
883.561 332.354 894.531 341.923 906.083 336.725 cv
cp
.847059 .615686 .145098 rgb
f
964.932 297.842 mo
964.066 290.261 930.059 285.929 913.381 301.741 cv
896.702 317.553 889.987 332.499 883.706 329.466 cv
891.504 336.831 908.615 323.618 918.146 313.871 cv
927.677 304.123 945.221 295.892 962.983 300.008 cv
953.236 300.874 933.958 296.759 911.864 325.567 cv
917.28 322.751 924.861 318.203 946.738 321.452 cv
968.615 324.701 973.813 313.871 970.348 306.289 cv
973.813 308.672 973.813 335.098 987.026 345.495 cv
990.059 338.13 992.225 304.34 964.932 297.842 cv
cp
.937255 .67451 .215686 rgb
f
955.943 342.896 mo
949.229 342.896 li
949.229 335.206 li
955.943 335.206 li
955.943 342.896 li
cp
.917647 .917647 .917647 rgb
f
934.695 358.921 mo
934.695 348.694 942.985 340.403 953.212 340.403 cv
963.439 340.403 971.73 348.694 971.73 358.921 cv
971.73 369.148 963.439 377.438 953.212 377.438 cv
942.985 377.438 934.695 369.148 934.695 358.921 cv
cp
.988235 .988235 .988235 rgb
f
938.96 358.596 mo
938.96 350.725 945.341 344.344 953.212 344.344 cv
961.083 344.344 967.464 350.725 967.464 358.596 cv
967.464 366.467 961.083 372.848 953.212 372.848 cv
945.341 372.848 938.96 366.467 938.96 358.596 cv
cp
.521569 .345098 .729412 rgb
f
960.452 332.09 mo
960.452 334.483 958.512 336.422 956.12 336.422 cv
948.928 336.422 li
946.535 336.422 944.596 334.483 944.596 332.09 cv
944.596 291.487 li
944.596 289.095 946.535 287.155 948.928 287.155 cv
956.12 287.155 li
958.512 287.155 960.452 289.095 960.452 291.487 cv
960.452 332.09 li
cp
.988235 .988235 .988235 rgb
f
959.178 328.976 mo
959.178 331.368 957.55 333.308 955.542 333.308 cv
949.506 333.308 li
947.498 333.308 945.87 331.368 945.87 328.976 cv
945.87 288.373 li
945.87 285.98 947.498 284.041 949.506 284.041 cv
955.542 284.041 li
957.55 284.041 959.178 285.98 959.178 288.373 cv
959.178 328.976 li
cp
.521569 .345098 .729412 rgb
f
361.288 822.958 mo
351.865 822.958 li
351.865 546.553 li
361.288 546.553 li
361.288 822.958 li
cp
1 .741176 .321569 rgb
f
822.633 822.958 mo
813.21 822.958 li
813.21 546.553 li
822.633 546.553 li
822.633 822.958 li
cp
f
953.027 538.226 mo
236.487 538.226 li
236.487 553.386 li
953.027 553.386 li
953.027 538.226 li
cp
1 .807843 .580392 rgb
f
937.647 552.329 mo
255.56 552.329 li
254.629 556.193 li
936.715 556.193 li
937.647 552.329 li
cp
1 .741176 .321569 rgb
f
295.221 532.856 mo
295.221 533.717 295.919 534.415 296.781 534.415 cv
412.42 534.415 li
413.282 534.415 413.98 533.717 413.98 532.856 cv
413.98 531.994 413.282 531.296 412.42 531.296 cv
296.781 531.296 li
295.919 531.296 295.221 531.994 295.221 532.856 cv
cp
.776471 .776471 .776471 rgb
f
418.742 531.996 mo
419.561 532.263 420.453 531.772 420.734 530.901 cv
458.496 413.877 li
458.777 413.005 458.341 412.082 457.522 411.816 cv
456.703 411.549 455.811 412.04 455.53 412.911 cv
417.768 529.935 li
417.487 530.807 417.923 531.73 418.742 531.996 cv
cp
0 .298039 .337255 rgb
f
417.701 532.668 mo
457.052 411.557 li
459.873 413.046 461.31 416.378 460.29 419.516 cv
424.583 529.412 li
423.679 532.194 421.124 533.956 418.355 534.006 cv
417.367 536.462 414.986 538.204 412.177 538.2 cv
296.625 538.066 li
293.325 538.062 290.604 535.664 290.062 532.519 cv
417.701 532.668 li
cp
.878431 .878431 .878431 rgb
f
399.72 535.307 mo
399.72 535.799 400.119 536.198 400.611 536.198 cv
411.084 536.198 li
411.576 536.198 411.975 535.799 411.975 535.307 cv
411.975 534.814 411.576 534.415 411.084 534.415 cv
400.611 534.415 li
400.119 534.415 399.72 534.814 399.72 535.307 cv
cp
.776471 .776471 .776471 rgb
f
384.346 535.307 mo
384.346 535.799 384.745 536.198 385.237 536.198 cv
395.709 536.198 li
396.202 536.198 396.601 535.799 396.601 535.307 cv
396.601 534.814 396.202 534.415 395.709 534.415 cv
385.237 534.415 li
384.745 534.415 384.346 534.814 384.346 535.307 cv
cp
f
298.786 535.307 mo
298.786 535.799 299.185 536.198 299.677 536.198 cv
310.149 536.198 li
310.642 536.198 311.041 535.799 311.041 535.307 cv
311.041 534.814 310.642 534.415 310.149 534.415 cv
299.677 534.415 li
299.185 534.415 298.786 534.814 298.786 535.307 cv
cp
f
892.317 532.674 mo
892.317 533.535 891.619 534.233 890.757 534.233 cv
775.117 534.233 li
774.256 534.233 773.558 533.535 773.558 532.674 cv
773.558 531.812 774.256 531.114 775.117 531.114 cv
890.757 531.114 li
891.619 531.114 892.317 531.812 892.317 532.674 cv
cp
f
768.796 531.814 mo
767.977 532.081 767.085 531.59 766.804 530.719 cv
729.042 413.695 li
728.761 412.823 729.197 411.9 730.016 411.634 cv
730.835 411.367 731.727 411.858 732.008 412.729 cv
769.77 529.753 li
770.051 530.625 769.615 531.548 768.796 531.814 cv
cp
0 .298039 .337255 rgb
f
769.837 532.486 mo
730.486 411.375 li
727.665 412.865 726.228 416.196 727.248 419.334 cv
762.955 529.23 li
763.859 532.012 766.414 533.774 769.183 533.824 cv
770.171 536.28 772.552 538.022 775.361 538.019 cv
890.913 537.884 li
894.213 537.88 896.934 535.482 897.476 532.337 cv
769.837 532.486 li
cp
.878431 .878431 .878431 rgb
f
787.818 535.125 mo
787.818 535.617 787.419 536.016 786.926 536.016 cv
776.454 536.016 li
775.962 536.016 775.563 535.617 775.563 535.125 cv
775.563 534.632 775.962 534.233 776.454 534.233 cv
786.926 534.233 li
787.419 534.233 787.818 534.632 787.818 535.125 cv
cp
.776471 .776471 .776471 rgb
f
803.192 535.125 mo
803.192 535.617 802.793 536.016 802.301 536.016 cv
791.828 536.016 li
791.336 536.016 790.937 535.617 790.937 535.125 cv
790.937 534.632 791.336 534.233 791.828 534.233 cv
802.301 534.233 li
802.793 534.233 803.192 534.632 803.192 535.125 cv
cp
f
888.752 535.125 mo
888.752 535.617 888.353 536.016 887.861 536.016 cv
877.388 536.016 li
876.896 536.016 876.497 535.617 876.497 535.125 cv
876.497 534.632 876.896 534.233 877.388 534.233 cv
887.861 534.233 li
888.353 534.233 888.752 534.632 888.752 535.125 cv
cp
f
492.556 532.31 mo
492.797 535.65 495.234 538.284 498.24 538.284 cv
666.358 538.284 li
669.363 538.284 671.801 535.65 672.042 532.31 cv
492.556 532.31 li
cp
1 1 1 rgb
f
663.347 529.435 mo
662.597 532.713 658.74 535.328 654.721 535.328 cv
513.165 535.328 li
509.145 535.328 505.391 532.712 504.771 529.435 cv
488.84 445.33 li
487.895 440.342 492.183 437.191 497.27 437.191 cv
676.403 437.191 li
681.489 437.191 683.725 440.342 682.584 445.33 cv
663.347 529.435 li
cp
f
662.851 531.601 mo
662.11 534.841 658.278 537.427 654.281 537.427 cv
513.522 537.427 li
509.525 537.427 505.795 534.841 505.181 531.6 cv
489.452 448.559 li
488.52 443.64 491.844 439.575 496.895 439.575 cv
674.755 439.575 li
679.806 439.575 682.97 443.64 681.845 448.559 cv
662.851 531.601 li
cp
.878431 .878431 .878431 rgb
f
601.091 495.305 mo
601.591 486.843 594.13 479.726 584.407 479.726 cv
574.684 479.726 566.964 486.843 567.156 495.305 cv
567.341 503.435 574.817 509.795 583.86 509.795 cv
592.903 509.795 600.61 503.435 601.091 495.305 cv
cp
1 1 1 rgb
f
837.269 514.522 mo
840.971 494.8 li
842.098 494.344 843.272 494.056 844.461 493.996 cv
849.965 493.723 853.613 498.224 852.608 504.049 cv
851.604 509.875 846.328 514.819 840.825 515.092 cv
839.521 515.157 838.327 514.946 837.269 514.522 cv
cp
798.212 485.257 mo
806.774 530.876 li
807.415 534.294 810.344 536.838 813.368 536.838 cv
827.605 536.839 li
830.629 536.839 833.558 534.294 834.2 530.876 cv
836.295 519.713 li
837.44 519.992 838.663 520.127 839.967 520.062 cv
848.064 519.66 855.826 512.386 857.303 503.816 cv
858.781 495.245 853.415 488.624 845.318 489.026 cv
844.181 489.083 843.054 489.288 841.947 489.6 cv
842.762 485.258 li
798.212 485.257 li
cp
.0156863 .105882 .14902 rgb
f
813.321 486.346 mo
799.524 486.346 li
807.844 530.675 li
808.378 533.52 810.805 535.749 813.368 535.749 cv
818.015 535.749 li
813.321 486.346 li
cp
.0235294 .133333 .2 rgb
f
841.45 486.347 mo
836.09 486.346 li
828.337 535.671 li
830.616 535.298 832.647 533.247 833.13 530.675 cv
841.45 486.347 li
cp
f
842.325 491.09 mo
847.361 487.824 857.706 490.954 856.481 501.707 cv
856.073 497.624 851.989 490.138 842.325 491.09 cv
cp
f
786.03 532.049 mo
787.122 534.336 793.211 536.318 802.018 537.516 cv
841.252 537.516 li
850.06 536.318 856.149 534.336 857.24 532.05 cv
786.03 532.049 li
cp
.0156863 .105882 .14902 rgb
f
797.951 532.049 mo
794.957 532.049 787.742 532.049 787.742 532.049 cv
788.782 534.336 794.578 536.318 802.962 537.516 cv
807.134 537.516 li
807.134 537.516 799.585 535.599 797.951 532.049 cv
cp
.0235294 .133333 .2 rgb
f
852.125 532.05 mo
852.125 532.05 848.314 534.783 838.241 537.516 cv
839.055 537.516 840.309 537.516 840.309 537.516 cv
848.693 536.318 854.489 534.336 855.528 532.05 cv
852.125 532.05 li
cp
f
786.827 533.024 mo
856.451 533.025 li
856.815 532.707 857.082 532.382 857.24 532.05 cv
786.03 532.049 li
786.189 532.381 786.465 532.706 786.827 533.024 cv
cp
1 1 1 rgb
f
421.545 482.544 mo
413.71 537.113 li
413.549 537.996 412.182 538.694 410.654 538.694 cv
392.039 538.694 li
390.511 538.694 389.144 537.996 388.982 537.113 cv
381.148 482.544 li
421.545 482.544 li
cp
.909804 .317647 .0196078 rgb
f
421.545 480.325 mo
413.71 469.715 li
413.549 469.543 412.182 469.407 410.654 469.407 cv
392.039 469.407 li
390.511 469.407 389.144 469.543 388.982 469.715 cv
381.148 480.325 li
421.545 480.325 li
cp
1 .392157 .121569 rgb
f
404.417 479.278 mo
383.223 479.278 li
389.631 470.599 li
390.012 470.535 390.867 470.454 392.039 470.454 cv
404.417 470.454 li
404.417 479.278 li
cp
.909804 .317647 .0196078 rgb
f
378.881 481.579 mo
378.881 482.663 379.759 483.542 380.844 483.542 cv
422.461 483.542 li
423.545 483.542 424.424 482.663 424.424 481.579 cv
424.424 480.494 423.545 479.615 422.461 479.615 cv
380.844 479.615 li
379.759 479.615 378.881 480.494 378.881 481.579 cv
cp
.878431 .878431 .878431 rgb
f
382.86 480.522 mo
404.591 480.522 li
404.591 482.635 li
382.86 482.635 li
382.276 482.635 381.803 482.162 381.803 481.579 cv
381.803 480.995 382.276 480.522 382.86 480.522 cv
cp
1 1 1 rgb
f
412.646 485.125 mo
420.064 485.125 li
412.804 535.695 li
412.655 536.513 411.388 537.16 409.972 537.16 cv
408.458 537.16 li
412.646 485.125 li
cp
1 .392157 .121569 rgb
f
397.988 485.125 mo
399.558 537.16 li
392.721 537.16 li
391.305 537.16 390.038 536.513 389.889 535.695 cv
382.629 485.125 li
397.988 485.125 li
cp
.768627 .235294 0 rgb
f
386.695 521.183 mo
383.591 499.558 li
419.102 499.558 li
415.997 521.183 li
386.695 521.183 li
cp
.203922 .00784314 .0117647 rgb
f
411.336 499.558 mo
417.88 499.558 li
414.739 521.183 li
409.7 521.183 li
411.336 499.558 li
cp
.266667 .0313726 .0431373 rgb
f
398.2 499.558 mo
399.296 521.183 li
387.78 521.183 li
384.901 499.558 li
398.2 499.558 li
cp
.156863 .00392157 .0117647 rgb
f
420.258 428.05 mo
421.131 427.658 422.483 429.315 421.131 430.057 cv
416.917 432.367 402.285 439.741 402.285 439.741 cv
402.285 469.438 li
399.493 469.438 li
399.493 437.822 li
399.493 437.822 414.5 430.58 420.258 428.05 cv
cp
.8 .8 .8 rgb
f
658.703 482.544 mo
650.869 537.113 li
650.707 537.996 649.34 538.694 647.812 538.694 cv
629.197 538.694 li
627.669 538.694 626.302 537.996 626.141 537.113 cv
618.306 482.544 li
658.703 482.544 li
cp
.909804 .317647 .0196078 rgb
f
658.703 480.325 mo
650.869 469.715 li
650.707 469.543 649.34 469.407 647.812 469.407 cv
629.197 469.407 li
627.669 469.407 626.302 469.543 626.141 469.715 cv
618.306 480.325 li
658.703 480.325 li
cp
1 .392157 .121569 rgb
f
641.575 479.278 mo
620.381 479.278 li
626.79 470.599 li
627.17 470.535 628.026 470.454 629.197 470.454 cv
641.575 470.454 li
641.575 479.278 li
cp
.909804 .317647 .0196078 rgb
f
616.039 481.579 mo
616.039 482.663 616.918 483.542 618.002 483.542 cv
659.619 483.542 li
660.703 483.542 661.582 482.663 661.582 481.579 cv
661.582 480.494 660.703 479.615 659.619 479.615 cv
618.002 479.615 li
616.918 479.615 616.039 480.494 616.039 481.579 cv
cp
.878431 .878431 .878431 rgb
f
620.018 480.522 mo
641.749 480.522 li
641.749 482.635 li
620.018 482.635 li
619.435 482.635 618.961 482.162 618.961 481.579 cv
618.961 480.995 619.435 480.522 620.018 480.522 cv
cp
1 1 1 rgb
f
649.804 485.125 mo
657.222 485.125 li
649.962 535.695 li
649.813 536.513 648.546 537.16 647.13 537.16 cv
645.616 537.16 li
649.804 485.125 li
cp
1 .392157 .121569 rgb
f
635.146 485.125 mo
636.716 537.16 li
629.88 537.16 li
628.463 537.16 627.196 536.513 627.047 535.695 cv
619.787 485.125 li
635.146 485.125 li
cp
.768627 .235294 0 rgb
f
623.853 521.183 mo
620.749 499.558 li
656.26 499.558 li
653.156 521.183 li
623.853 521.183 li
cp
.203922 .00784314 .0117647 rgb
f
648.495 499.558 mo
655.038 499.558 li
651.897 521.183 li
646.858 521.183 li
648.495 499.558 li
cp
.266667 .0313726 .0431373 rgb
f
635.358 499.558 mo
636.454 521.183 li
624.938 521.183 li
622.059 499.558 li
635.358 499.558 li
cp
.156863 .00392157 .0117647 rgb
f
619.007 428.05 mo
618.134 427.658 616.782 429.315 618.134 430.057 cv
622.347 432.367 636.98 439.741 636.98 439.741 cv
636.98 469.438 li
639.772 469.438 li
639.772 437.822 li
639.772 437.822 624.765 430.58 619.007 428.05 cv
cp
.988235 .988235 .988235 rgb
f
692.696 22.7064 mo
698.247 22.7064 702.603 25.3763 705.273 28.3978 cv
701.97 32.1219 li
699.582 29.5223 696.63 27.8358 692.766 27.8358 cv
683.982 27.8358 678.22 35.0028 678.22 46.4564 cv
678.22 58.0501 683.772 65.3582 692.485 65.3582 cv
696.912 65.3582 700.144 63.5311 703.095 60.2289 cv
706.397 63.8123 li
702.744 68.0282 698.247 70.4876 692.344 70.4876 cv
680.75 70.4876 672.177 61.6341 672.177 46.597 cv
672.177 31.7708 680.891 22.7064 692.696 22.7064 cv
cp
.8 .858824 .552941 rgb
f
714.973 23.5497 mo
741.534 23.5497 li
741.534 28.4681 li
720.805 28.4681 li
720.805 42.9432 li
738.301 42.9432 li
738.301 47.932 li
720.805 47.932 li
720.805 64.6556 li
742.237 64.6556 li
742.237 69.6444 li
714.973 69.6444 li
714.973 23.5497 li
cp
f
752.006 23.5497 mo
758.049 23.5497 li
774.703 52.4994 li
779.692 62.0555 li
779.973 62.0555 li
779.692 57.4178 779.27 52.2181 779.27 47.37 cv
779.27 23.5497 li
784.821 23.5497 li
784.821 69.6444 li
778.778 69.6444 li
762.055 40.6244 li
757.066 31.138 li
756.785 31.138 li
757.136 35.7757 757.558 40.6947 757.558 45.5428 cv
757.558 69.6444 li
752.006 69.6444 li
752.006 23.5497 li
cp
f
807.028 28.4681 mo
793.116 28.4681 li
793.116 23.5497 li
826.843 23.5497 li
826.843 28.4681 li
812.93 28.4681 li
812.93 69.6444 li
807.028 69.6444 li
807.028 28.4681 li
cp
f
835.138 23.5497 mo
861.699 23.5497 li
861.699 28.4681 li
840.97 28.4681 li
840.97 42.9432 li
858.466 42.9432 li
858.466 47.932 li
840.97 47.932 li
840.97 64.6556 li
862.402 64.6556 li
862.402 69.6444 li
835.138 69.6444 li
835.138 23.5497 li
cp
f
878.003 45.4022 mo
885.733 45.4022 li
892.9 45.4022 896.905 42.451 896.905 36.4784 cv
896.905 30.4354 892.9 28.2572 885.733 28.2572 cv
878.003 28.2572 li
878.003 45.4022 li
cp
897.467 69.6444 mo
886.365 50.1805 li
878.003 50.1805 li
878.003 69.6444 li
872.171 69.6444 li
872.171 23.5497 li
886.576 23.5497 li
895.992 23.5497 902.737 26.9222 902.737 36.4784 cv
902.737 43.6458 898.662 48.0023 892.408 49.5482 cv
904.073 69.6444 li
897.467 69.6444 li
cp
f
267.497 22.7064 mo
273.047 22.7064 277.404 25.3763 280.074 28.3978 cv
276.772 32.1219 li
274.383 29.5223 271.431 27.8358 267.567 27.8358 cv
258.783 27.8358 253.022 35.0028 253.022 46.4564 cv
253.022 58.0501 258.573 65.3582 267.286 65.3582 cv
271.712 65.3582 274.945 63.5311 277.896 60.2289 cv
281.198 63.8123 li
277.544 68.0282 273.047 70.4876 267.145 70.4876 cv
255.551 70.4876 246.979 61.6341 246.979 46.597 cv
246.979 31.7708 255.692 22.7064 267.497 22.7064 cv
cp
f
318.374 46.3861 mo
318.374 34.9325 312.963 27.8358 304.742 27.8358 cv
296.521 27.8358 291.11 34.9325 291.11 46.3861 cv
291.11 57.91 296.521 65.3582 304.742 65.3582 cv
312.963 65.3582 318.374 57.91 318.374 46.3861 cv
cp
285.067 46.3861 mo
285.067 31.6302 293.147 22.7064 304.742 22.7064 cv
316.335 22.7064 324.487 31.7005 324.487 46.3861 cv
324.487 61.2122 316.335 70.4876 304.742 70.4876 cv
293.147 70.4876 285.067 61.2122 285.067 46.3861 cv
cp
f
329.268 23.5497 mo
335.311 23.5497 li
340.159 48.6346 li
341.002 53.6234 341.986 58.5423 342.83 63.5311 cv
343.11 63.5311 li
344.165 58.5423 345.289 53.5531 346.343 48.6346 cv
352.737 23.5497 li
358.077 23.5497 li
364.472 48.6346 li
365.596 53.4832 366.72 58.5423 367.844 63.5311 cv
368.126 63.5311 li
368.969 58.5423 369.812 53.5531 370.726 48.6346 cv
375.574 23.5497 li
381.195 23.5497 li
371.639 69.6444 li
364.612 69.6444 li
357.656 41.889 li
356.813 38.3055 356.11 35.0028 355.407 31.4193 cv
355.126 31.4193 li
354.423 35.0028 353.58 38.3055 352.807 41.889 cv
345.992 69.6444 li
339.035 69.6444 li
329.268 23.5497 li
cp
f
419.425 46.3861 mo
419.425 34.9325 414.014 27.8358 405.793 27.8358 cv
397.572 27.8358 392.161 34.9325 392.161 46.3861 cv
392.161 57.91 397.572 65.3582 405.793 65.3582 cv
414.014 65.3582 419.425 57.91 419.425 46.3861 cv
cp
386.118 46.3861 mo
386.118 31.6302 394.199 22.7064 405.793 22.7064 cv
417.387 22.7064 425.538 31.7005 425.538 46.3861 cv
425.538 61.2122 417.387 70.4876 405.793 70.4876 cv
394.199 70.4876 386.118 61.2122 386.118 46.3861 cv
cp
f
441.281 45.4022 mo
449.01 45.4022 li
456.177 45.4022 460.183 42.451 460.183 36.4784 cv
460.183 30.4354 456.177 28.2572 449.01 28.2572 cv
441.281 28.2572 li
441.281 45.4022 li
cp
460.745 69.6444 mo
449.643 50.1805 li
441.281 50.1805 li
441.281 69.6444 li
435.449 69.6444 li
435.449 23.5497 li
449.853 23.5497 li
459.269 23.5497 466.015 26.9222 466.015 36.4784 cv
466.015 43.6458 461.939 48.0023 455.686 49.5482 cv
467.35 69.6444 li
460.745 69.6444 li
cp
f
476.276 23.5497 mo
482.108 23.5497 li
482.108 46.6673 li
482.319 46.6673 li
501.502 23.5497 li
508.107 23.5497 li
493.702 41.1161 li
510.355 69.6444 li
503.821 69.6444 li
490.048 45.6834 li
482.108 55.0291 li
482.108 69.6444 li
476.276 69.6444 li
476.276 23.5497 li
cp
f
516.964 23.5497 mo
522.796 23.5497 li
522.796 69.6444 li
516.964 69.6444 li
516.964 23.5497 li
cp
f
535.445 23.5497 mo
541.488 23.5497 li
558.141 52.4994 li
563.13 62.0555 li
563.411 62.0555 li
563.13 57.4178 562.708 52.2181 562.708 47.37 cv
562.708 23.5497 li
568.259 23.5497 li
568.259 69.6444 li
562.216 69.6444 li
545.493 40.6244 li
540.504 31.138 li
540.223 31.138 li
540.575 35.7757 540.996 40.6947 540.996 45.5428 cv
540.996 69.6444 li
535.445 69.6444 li
535.445 23.5497 li
cp
f
599.46 22.7064 mo
605.785 22.7064 610 25.5872 612.67 28.3978 cv
609.369 32.1219 li
607.049 29.6624 604.168 27.8358 599.531 27.8358 cv
590.255 27.8358 584.283 35.0028 584.283 46.4564 cv
584.283 58.0501 589.764 65.3582 599.601 65.3582 cv
602.904 65.3582 606.066 64.304 607.893 62.6175 cv
607.893 50.6019 li
598.125 50.6019 li
598.125 45.7538 li
613.233 45.7538 li
613.233 65.1473 li
610.211 68.2391 605.152 70.4876 598.968 70.4876 cv
586.883 70.4876 578.24 61.6341 578.24 46.597 cv
578.24 31.7708 587.164 22.7064 599.46 22.7064 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 17.0.0
%%For: (\700\755\762\756\755) ()
%%Title: (coworking center 5.eps)
%%CreationDate: 2/9/2015 8:26 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KBjVOqpAb0_Hp59"\=arU];iKD])e1uLk6bB\78&JLh&<bb]k6-?MjbM:N\%U&4eUP2p9J-l<pHsF6`,T<+TJ]?1698jk>!k
%rqBT*<QN+YlcOklQ9kP^o>e_bMt2GV)X&K1[d=BC'hM%JMu&oL;L!ph+**:XctpDJWVX$rI^<AQ>HLT4;K'"p&t,AG>%4s[:7i45
%+8ea-r`::L.24FL9PW<Gad4N,^>>q,g'O$$\C!Ft_/EO7MC-.-h!U\K=/kH2DmsG)1cN!!*,MIH92[;?/:RH^8FbB<eRupcoO!OU
%CO^LIU&SogO+H3'/7G!s[aN>?qMdhJcn<pc[*VuCd*EnaR)o,:KheJHpQOh6U0lYJ#u%UofP@.V`M4,a6L^$Jr9/V:\(_JnX:"m?
%fBqjApg#5jKVd;Rhp5a@WB2LQ@G1:X$jMM<$_V'n2[Sglq:.s2d.[9_D.P%WbO?.FQ=V=)l)Gn$iBTFS*[E;)Zs<6B9K-[q1rsa?
%Uh-2*+$-D`W(.['T4S&+[DWHf;"C*lnY_iC_t&<@R"_c(K^0OBqa%.>2rE3/D*k+kaj\;:>;,delJ<JPY8!?@,-^[r6'%d-oA"6t
%=k>/ESBb<T28[[GGH*`YT0DI<"H2V(r7Y$H*Ue+#FM4KLCcWX!,o,s.O]4q5$"5l,_Y$lQR"UBNOKuL,kcTs10NkoEK*0mV.c+s,
%cc`^RiE=*%SdGaNX'%(JkhD4+=9$5>-/HWa0DlLMS$:7Wqm?tH+\sl*&Pb'D]8'KL="@kI<LcPes%N<s$"BN!rB0k^pCI7^VW]i<
%=Ld>NFe&`$CRFnB+0Y?Mm`BpS6Q^2'l^c%=mAtd"O2Y(tId/<;q8INj8LIb8m%&U'Ik2l]5FYQ"2O3gc[-3P`qN#LW2I]dP(tQ&?
%5#:AQ/1:3XoEJLo[nZ7umc-8`GB^`2U"i`gYrT[(dnf1'Be9:Jrd0D"`YhPrJL"<8K$U;;omX+ua6;oM8;R8N![-^Ab,!qZO(0L.
%>e/R\I\ko:qVeW76EQJ3/i4Mep9J$Se-aG'J+,,#EfUD<SfKUHSB,,!:-p$,rdd@_38N&p7k=%ms.nHbLdGQfS%,1YB?#S6:D\\H
%*?lTE>,or`+P#N(9!*T(+Q;O8N#;KE%f:HiTU1PBZbrEcds@kGWq*klYa6d+GmdZ6hN\M:a6;qo:IW#RX!Am:,4sH2N/\?9U;q::
%X4094U_U8i#&U6LZ'b<'qp!i$9d@7&BjE!ElLi<78%(7$&qI5!&7C:tVFj[XD=l3;n4A^jcl;i=J=tZmQgS/_P1Pfs"\QHoSoDF@
%@/$'UV,BKq()e"Nii`MN7c\D7F3TLF[=Z)I1.d/ipdX2Efl&Em<FeiBKMmI;*g'_*Db!/'NM7R+"ca>?WrOGsmWV"V,W->[MQSKj
%;]?06:EijiPPoN]._N%4iEq:^nKP5:5&D((AUfBm!E#JSCLi5K%Qid\YK\iMNts6FmK#qep95_T(f2AY_]efB3$4Qu[gi4fbfcs\
%\@R"L&!9E7U?:Q<ZVW-8Fh3l@Hs<WdWan&[#>GM=dmQQmaZ>`EFQq'mTC2W^6'EeW$BKX6+tYSBP8-+Sa\+u.qN93j(B)n6OY6TW
%1.=EARA$7SbfRNARt`BU7hV&PC#A`=+B8Q@90XKrUs-360sgM9ZOH[B(0TJ>G\uK<rs;'`+-V2!W+#:YU*%Epq2\$1.3m)edPPIR
%aRYt9OV<J3(Gpgg+.PU4->E!hD9K96<n>DrH(%Xb7('I?/).Hp4(W'kXIZ]h[#e+I^p2k?-r6[=RXR"AX)]]Y(li]/4ug!G*;@`#
%NoRWEb"4Z4-V$CHf-#a7Y3"B?Ea@::4^Qn$j`@DkQZME3af-8^Q*YKXrCFf=OYa<=CbCYGA[:Q:MLN4>90Z1;<mKE%$eW\G/=dMA
%S#;n6SNemZ3KqR\kpJna?H/f`g.OnH#bI!?c\J1VXh74i1,&46;a-!:ATJac8b9YYhUg;K$/Sg,DnN\DIgkZS41'6f_&dr=B2#$>
%OYP;[FH2)gdckj'mA8XG6^Y:1<n^6j[%R$7VfFV:-C%?&;I7MB+"*m_G03FF7"HOnG^8"Vp<Fadf#r;P0BIJNlT+U44PR2-H(G.E
%#A[P#Kp-VBWSU1oH$^%sM+N=0%A'7filkBg35Q]&%Qm6ie$&OC=cT23CFhcd.l0JUL"YB0T)=bndOjh.E#i0JERLZag6)&]6UU>N
%Ah\MYE!f#SKpA=!>[a"^4oO]GYbQ<K-]:;o1X`rOLAp]3h,_6pBd7lmV#,LJNW/U"GNX+^jR_inEY3;G6M'ArO4Fu&Ioe-XqJ_]F
%HaA+RC&?t[XAHr:ZWS.3;nOM[8km(?4_3Qo2T`]$L\RqK'CI)n\4HC%=@t\9Ue,@brLNp=<'!=K^WNDH`AQHoA%<Cm+R$9idD0#^
%jn"CR$u!M<irUS<0Rq,nj6t(oiF`Q1IZ=qleFj2Oj[Np"CU;#9:;gheb,#rJU!pMZX)jpc'#bq%di"'!Njm".Y-7Rl4A[A!7(,2%
%dn[lc(&cP4dA'1*V*"KT!0X,9W-,+e`HL395L(EB4-'cH>5b[2-Eh#<BJ&Y-"@X<_qKe2sMC&dZ1gm58QCi*l5<;34EFe?"s)A&E
%p)4BFdr0@YEKkY!0rD1cDU7=>4c^AArm<-f&_Zd#QljMF+A"9paEkaB(>AFnN'liP*>at]eiV-N^SPFB0f8WInFpYbg8&da\TXOF
%mtX8jSR4/FC89YFn59[<q+\J/@qG9:Sn.f+`;88qRlFg<T&!q.0VtA32>?J:2a"^YAqBlGb3OAa2(QCH%,.9LG*D%B`<[a6?+[X_
%2g=ZOY2.m@S%EhHNGTq;F;GJOK35]=dW`@dpcuBa'p^i%PG#(u#jS]`:nnbk3JDTr.d/\7d/;5BnP-c%s"fB5:U!mZTqjHX'6!`,
%8g-s4WDG(0;:-?cU0cIAg$lC/+;Kg*C'Q[miW'_X4>*j7^33P[?*E&[m+d>&BP0DHXK"hKEIl\U<6B4+XB;D8ERcB?<5#Hp!_O`V
%\hk&:VSA)nrE6&Ul+cPoD`&G6r\]^8%6KRXc;CT+b&cOaYBg/Cfri*i\0*>%r[Ri)!?O7\m6WV+H`;@PNAun7n<@D(O4$!67iX3X
%rUX-O=O:uf/khs>Y/X@2'BngFEIqf!XT)q$YGfHuRROiLfBH(2)Ae)FE;<9[f5gQ!%$XI?34JFk`YlPD.WejrEhSf5*id>J!AbP^
%Mb.9>cLnXV>i$ge2\q4,@An+JF.JhiikYT]!h#6!"_%TC0<`P?7LoTl`b&AnJDn)<?QT\cN)kB9(ud7GjV[eU%Lcqh(sF]qONhhC
%U?]5JLu,,ZNjf\=;kbRJ>P_9p,@g5js/_BR`^I`sch9902pO58opb,.O?(SpY27,[LHNm+s#5#?1%%ZYF3*qmnh?<PF3*qmo)EqE
%)&_L%N)8>0jcEVd,)\"3opAp)Si<8(NTYTIH/A<<3PtC#nN:`;%5d[hnHaV[Si?Y^;1;4oLLcXg0`h,sO,M).o#pU!6*&q$0QgJL
%i\Bs?cj^I%RlM%t(au#IF]s6k?6dpq(.U2d))4&84,.501sa8?ND#Q8h'ZJ$9tEe$k[]F4;J_/<[9f:YFYJl<bp-cj#h_=,(>$K.
%5B$CID4MB1^J6.Y5-M0i=ftj(p3P1@Xk0%rg9p1XBagQOZ5;]oZUp+Jg%5!l+<^:NftTTV'dG6e=6O!GUM#_'@q-02##'aNPcL?W
%08an!N]Bds/[IsZ'CY1iQ/B+aFu4@D4Yi:504L"K^57[Tb2t:M%p+OF:KPI>0_]dDm."9\fGcS0a65QCFs^[.oC1-qLQ=bc)!h-_
%8JA,q^rnk01(V%A"#$q)$XjekGR:)u*.O@]?KQg*H/N6TGaSeCk(/k4i+79;HZn\%-747b(cY;i*C6.)a!tugdS@H-5&7WI-R.L<
%]*-"K_$V_Vc3GlZ4HqPa%p$V/LIm!"+q>%Q#:mfo;eG1np\5JUPHQ&Yjn=.sHu0@/XrJfkTM<"<SA42C)9QsuRaVBia7o^\iq;:_
%4lNBfNUp5AB'U20>Fb$W"fM/(:?*Ns@F*@<]Z("bC;/VK<Qr6[]Z(%_._atDIPu$X4S5KBj'R$CbZ=A0Aa-,0n.M*7omcKeQlS:.
%k$2QrcJJVkYrBI-I!Ouk5C,%G!Ohg1(F)>l3).YsJ+b(@'I^rJgnca*mPlo=;;A!&C@2rgBs4/"[JVqmU$7nQ-I/MYFD9ZF7sOFW
%"OCV:Xg:X5?IC^8CT!FanT$ddS*Gu"Z/#>hAgCm>2a??YHI;]27<^IZIA_g\@_soQCm51`9dLV#>kqN-b*kaV3X%NsRC3T/(PPcc
%YKUh)[csq6R*@Sgrjmo.7;[@S/]Vhnk"kiumpuG60]l1-rA'p#C"bhsi+4>nL,bU0b>Q+M>A2#j5#'7<WL8!K-\gcRlIU2snXRs*
%^:#i`L?mX%RqU8g,&Y.iRS]Oo7FPZZc#'1^^6/4#njs8KcYnn@EWgk9FQbj>4mZioiKE!o#5Me7P+1>OT3r*gCB^m4)ru)%3!fY'
%dZrkj#5MdXa8$28$!*)X)ru(r35)nC)C*?'XB%&>mu?pHDg.CmdSAs!aMR1%O5IO,WMG?VAtdj0<*n2"EVqCODBrM0Vk8\Ll\+U%
%3&L]D:3DUmn]t>+eOM]^$`I8-Y[),_Y=l=s?-#=HUN.XrCjj";"^KK3O_m34[/>=#s3^@P`Afdg#PsJh[\HUhZr<Y]`"3^5B![JM
%D6bI5[6W3[Gh6=QA@P/I_9]@C\h0\NSXQbP\.*(F][GN.dB+?;R\j1Zn9(>YRs8eU`PcRWnhDXqhs\;l2bkE_qDU01BAnu3eJMo`
%`4qK*qk?bo!GCl9F<>[rgcrc=9[$aYh(9&CRH0nf8<P*\!2/6mbapMUmNM^pN,umH)U7O$;;K16L+##9DA,ba(JVS/4\L),[.aLC
%Ds#6f0ucF)m=a5Jdl=6e("#U@Llmp1JD\<T5PFakZS]dJC;kh)'I0qPA4\.W,\EUk[cV*YDDDm30?hjS/Il2*#P[SGRY=r2/C$1.
%9H_U+>j13kB%k1-S[Z<81)5?N%Fo\Tl$;K&f]d@s>H1ShHT;%i?KWW#^Sf$@2sk"M^-%7e(.L:"f>1S*\%^cN@:C(+o5AuDKl;=+
%_91Zp0E0,*H,8s^i&:jZ7[u$VPSX04IoEdd@Y's?2c#ol[JjeIJPRc`3no*K'3<,pGtndu<KEobl4Yd7cC4E@SFbZVj+=)k2_'M@
%(!MA0WSB+598@r!X`_79:O1LMJ5e(CWgua*N^)FQH!FaBCF0"^>`87V-QT9qBP6@9Q_SuL"^7a-o*[9ZW%8]6`SGh[cSj3o>X695
%+JSKFY5Xl`(ep1lrPo(QU%2:DkB3Y/^X:F]1h0]0]'$RgZ=AD`MT&bqJ>pO)%P#uNeQ=$`pB>$'rM%leAQ!!*eW]EEs2K7#V^KS?
%&"S_-'Fp[+Hsnr43')HPR%I)!op98p2SO4de/adQ^J,Ys/E8"q]ocHA5lV3.d)O1H[k>XioA"9H\JQKA=m*=4.%'V]SEI'<3O"ZV
%BO4Vl:)DW-QhRY0h!TZJ`F>L5=X]OsEO$Kka)TeLV=G((XD.?*IcDZ`A$+%T2]ES+9)UkA;J@cZI_"N<F3,4#"`qdEQ[Ekr2u/V4
%=N83k!r8m%MY0,(6,.E%I6:mir-2R1eEo4JE)pNiE8iu@1<qgK@K@(=5%]a21"nf6]>0`DJC9;."h(iY*9T_F-c-B6lQf5Ng5HsY
%oB3$K+W1p]q]2U%_St$^P+RG0VrGKGl&STaaOd'XhJ&TF?D$4IVWQcN4ltR9h>clkCGETb]%-ctmi.pB^Ms95s%;U6QKd=Zq:AdD
%H^s`CdJ3K4$rm.;N/k4b$]7N"s$aT<L`ZU6Vi@rg0@.D@H<q<]0*UmaX-?cb`p3B/<DT+fR"$8l"GZ^gErL5!Xt//hK>ANL$o@d7
%S?qp+e[Not'<`A<hoIfU3DQ=_I%*[qe<GI,^PR#hcf;M&@U9T;9.M$3CD"J^JZ).?)DQ,Pc:^%7DLKf'2'u59cV$.XV&I+fJ=h<E
%fIXXI^ZVZaVT19U[$-p.WtTP]D<?5Rft+e(cIUe\@E/@\ieobT!&5442u4a;^\CgUGsl.?mAq-`<TasRZ26TRLrMiO_X7h#1uc;)
%O(_4gcT>u+5EBL%,8ubh1@p=A4JFP^&Ii69+r[_:R@8rO%(o"`1G;VHi5nX)66Z!i[b6RX.&C:OEh$M8:>\1^0rakJHdi_ndI0Ta
%;'XK:SU=<u\+uA""gC_BQXUi=qlNt.YM!tukMN<o=ViCD;;&lXHKO+d0_b>(rncGfS,7R4Fal'!"ZH,LB#3Ao_(Tki;11S$pa42E
%MfE9KLMuVMboOO/_`)f7jpp:C&@:Hec.I+/ZV[nHlU[nikHjhSoC2A@?creVQgsP?NU6ZW02Ej'PcE'ECM3R+)pLu(p2?tQS5`U>
%op9Up/kbi&hg@6s@rjBu)jk3bL"C5MfM!bGF5ce!ngS20%`p9+G7:rnHMDgq?Oc_@(jq4UH=[<0BX&t$dWmuF*daId$t,Qd>[RsR
%InFd5VfBA9WDPdmq!iu^3qFF87?#D-Xgh`;2!47)RK]5qM_c^[7IS\BA2QNuC)/EUV.-6r1)GXJc*&,`'u(S=Aor1:\DTH)OZ0p9
%Hrl)^=kdK1X[]-`oW*GC]j#/DV95bQBY#%[[]/b<N(!H)\FQ]aqfOa2r+d9f47"rS&olo2D2ak9o]W4j^eBYTS\Z,0mbT37-<n4'
%q't37I./X%ND2Oea,'"S&(gj@Wts/dSoWESrVsflS">lqQ$=$*Q15l.N:Ul;j4Hcmn\Gc(r1,_2eMq3Xh8TUgdq;=#1c0naWSB-+
%)95eFFWD8t[<aD78B#&9g:<oqTF[tlkAc&Q.G+JaN#1c:Kh??o*p:A:8Cqh^'uNY"SlrSuCBe8?Z1[i5(Qa?n?\P-(3Bd=5\Qrmg
%eB5AcfVEa#E(Y*kjOCl_k1[fTj4$;SAb$$'`p-\@C?91]M72ueFta"/ZEDKkCSioGa:r9d&g\#Adh9B^=/&AdHo;aO9ffJ9(r>6X
%.7sTpKTr4Tn3^a*=fOoI"3e-NSggj3M.'R_8M/(YBUr7q1&84*`EB30M$(u7(1gg1o&%ePo3.@bo6!M:TZh""8h>fYnZ$buC/Nsj
%1G'C8]GBUdAN^X5.'[H%ijjN(C/Nsj1G)l3/$h(]=Aon!/8r@1j#kNLro1"]'jgKqR(gTiVWT(NlRp2fK:.&9O<89pD>c^Y5M"up
%XtO1O7ZA02"un2Qs7jk)=a+&ArgD:iLqMQM1NPkVmfZpTY?IQ@5o0V,F$V`$FE9`<Jo2a>/W>luXje)1gh*>GjE8/E:U@EBU=Iee
%4cLrBkU1TRGhq<(>lE?)V*fb$n[#N_<MfPkT1Cn&Xc(,8TiO-#Oh0-qd2kf+R*_I;$C+6Z>SBcWor)3#4JBMO`JYl]5?UT(K+/D(
%rS.,WTO"lg5]GNhnJRK%dRje_i'7"!3]Z`r\*rS-;U+oDqe*ld&N@A&ec2Z>^VCJ?W>Z"*;$P@jE`fJ&.Xq,5,I'ag-)L+,TT(<.
%Bt4^j2eaes1]WDqFRdCp>loo;D<Y1In\0OY,"T;Xs+u6=Uu/mbgKt)-@Q3iAMifFDTaqZUfCpRpI_S,ZJ38/cH,t^R_DI5!]/Ep7
%QAYDb?!#[)]:Nu+jkpqZ\]U^Tn8C\m`]\hJlj2d\A#mO\8"'"-Kn%GkqH_JRQ9i:?oS<G3W%TA=lfPMBUUQ3l-'`Eh'??mgcVbfL
%Z_ZUPEWrQL?pt@8&KFs5IHjjPMsK>6MBaU1d+`6Nh(Mb*G2(VVm@OFi6A,c_:p.pT(fCDDcOe5+FpbTKTeU7QNE(n@kQq.E&>POc
%)!06CO$8K3KC8ZB?Q=gf`QsPVG,H!qE2"QCrD*qicRU#!Y6l\PDsmRG&"d./h+e%<P[!O)5`f'.<_r>u`=aU@rp]DiosA&A<<"VO
%O9Sml>9Ntu>;(/]L!LOgKYrM--Xd,P"ompFDQ"^fq$d)oH:*9FG>3qoehk-TQ0V,(Kp*Gb[Y9paLUG^TT7plmIAFDCSajNegUb"d
%<rYC^*`]+LIS#$2erfeA8e:lDSBGZ[UM0CeM#]Hb<D)OXW>@5dO_uQ8,jb@XM;mD;i^Ttri?[8_QOB]GlF4$X32\k3_nWl]=Sjng
%=?tcc+EG8#m'PL>l3)pXhb'VYXTIi_kYMmKnL=.G_)I.E0,4AopG6$TgcG=J!pFt<,^HFg0$]Io(W(oFid$A.#C`@e"5L/q%ub_\
%qaRg[_rnVN8BBe=3>cZYo(?DNLM^%IUhtHf,_.*ip[fdZ"YA7?8b/1LO`69g[IPr!:'b*H:?d*'-?r;OD)*njr3Q*'ZQ/".!T)&N
%5nda*Yc-(AIf>50?R@XC`ER`#TA.N?S(5Aud\dVHBB>##A++l`Lj#Br"u(dZg]q6!coh'WA6L.le(W*e!qY]M=UHPo8Ro,T5HT$r
%W@Dmi4MlntT*W;9]V"Be`F/flkI*!8Ns0=+qaA4\=prh!m;fW4T9oYC8FMCccPQsqXhK.o1[H2;&PsZc2aWo1kS,N.G!$G7gNOil
%)h!Bgp!bX3B/9A/3j_R3(pAmd#ZsU'A#!0kDu-S:N;)^a++=)8`Y9A+C&E1m./cbb,.80k;SL^<;&a;ArA>2aW;>mJWR/A^%/`#Q
%nc&2nm[&M.?S%e-oF<1;2Q>+>h_2fiH5E")1qK<W[_9UcVqpRD'*j4lgM[9!OuVr8oh)-/"cVqdpC5jL>8O&h/:Q=G9BAo+o#[4(
%32pa<'&>YsO^tAPaB,#@COS(E:GTq.-R.dti<EC)2K5Qj47<m/rPX/ud:i_.Ch_#J+>6T*[SQ4CAgpT1W_LP;$*rueNU5Heg*"PH
%:&Fdi,&u=(p;gqmIDrVm6>8KZ5FbRJQQ"srd)cW`BOEgF<8lLf$DgX]8@3-1(0[&WlCuh-[g2em%ZeOi;qm..Vd8a(_%l@[`tT.u
%ij)T<?IjtYcC=Lp!F=0`9]T)bqh,l[Z]/%5H\k4c5uc8^o=Le]RZe<t[[VtSX&3Qi/KJ$'>b^ZBD2p`r>9%jON.`rlZeIL9dS-A.
%B;'J#>@-qfcG\T;dn^tZJ%$*%;Rp'm/Oq@hIXXJ\2koZos5<t[GgVT>nDgWCrNoB]n/Ioj/&Ko#NAud4:87jOSiFG4dfJh6kr0P0
%8/NI$?m/oXYjr`MhBd@C5Q/aO?)9Q;'AZ]MeqH4H,\kdEEU+qN3a*UZ,nBmrMaEmE]MgI!.Zb;qmP*Gckk:lBrT8:3YAa(),@j$C
%FGRY;J9Baf[MjT,chhSl24ZG$F+:ZGEqb=6&AijDUU4qbcFSUgGQ_s@-JCip6b99gf0ZTF:(Z[u+^6Q+.nLe)7*&]3[e$%^-)AG&
%Zn(A?G&tap&)0ORh5jt,Xh!bD(G"SOE<EL^IhUk4dh:UNVoLfG6^fPa<r_6I/eUR>"b+tb`ap&3S('g:*3uier,Ep5r>a?$WIRpN
%iXrkEIlHZ;2Yptp&$Mh@_1nli_^mI$G'=S`6Lb\?X]A&1='5tI\g`5^<Or.aQ613B[3C7,nA_[9Qr+KOmI3,Ja;i6?Up*?"Mi-t3
%SU-%LE,8WXQO&?l%NC*GOk5LP.>)rK?)S/rS,P_.[:5t2,2]j:nndtqG5X1$FOq?(Mm4cVr-#VQW5Mh(O2t<?m@P92;JFs+Nnm!*
%oc<%6!i&'8kd5A1b$?$.PW_J[ks[Gj,&c\koWh\75i+pdhG'Yr6]QK$k@ap`rTH?pr!@,aP>BBQ=9:b=CXCOt2PGkCIFKY_lIK1!
%ZGO#.>7D8)YhSQm%>WaL+nj9h+#V1H7sVQ^Ae'&*UIGi@pPb2<!p0n`NuOCqNnO]R6O)ZK'gEX,p[$[>%_RP5XrDR0@R_t^rmQGL
%594DJAcEA&XrQB-fGI5ufhR/(^bY?f8c';l"kS)L"4Frr9VJ":0%W_g^TJ0Pd>khmic&09mI[hfrd,3jaQMYNK/u%hTS4$IGP?kG
%eC3$)S^Xok"d_1MPH0Z)f$^3o0[RGXOW?,VlA_E;D1F5IN9YrB#1W7()MtoX1MbQsp)3c^l;RG$+JZAIDjL=LOAen:H!P@_Iiact
%%N0Pc%G&d/ogKLH9TUL0Ko9VH\3Ms.%P8(n'Dd:rHINE5<19CKZ0-4Me:J[Bh#?:"(Xp:]XENn8`@+-/h#4#b=FKbRI[WAN\#T\"
%_u1P<mQ0(:EF-=PT#(l9T:I9N3kZm[YN]CG1bW'7qMQNOl(>]=nd04-q-#^oW^qSNZEMuXa$A%$X`c#DBU#OX(KM_7YNtA1(?Z+\
%/g`.FB8'*W:%OBM>?=;fHJ4s]2!%Q@dGc\bP0F836SV%nK.Yl'DVYWRogZ%EUTh@r8:&n]m)/aWeLT^k/mV85kbta#9#T&Q:nLJ:
%d5Q;%S,QOd^U>$X2u)F[^MT+[*Omo.r!N;(e/cFW^io?-W57"/FE'+d)P0-M^4DC2_)(PTLj6/]:kgRtXn$aSR,*4&64R3/(tF8f
%Z1E;\e=>=(0_^N<Ui,O$BPGS/diL$aA@35N)1F-(Yb,3Vc;UgraHLNefQ\&Lkh:1T:Fi4jDsH+/--6<:_)i:aeFTb>DHt\\s60^1
%L3@@^>NJ_&<\Jil]SP#c/H6L*[GCV3j6g_.48q5AdT3VM.K6tG/EopK>3fdh#68i]PsQ]&l-S,;A9(,6[l;WV'*,+Er#0$cV,?&P
%#S>c^S_T2qZs@Ril)CL`P_G:K^/f<<A4P]3.Z:LdC9^pVM:HpPF]>7C$+=mAX?NX+@WO+60R[(BP1Oqe6'3-f&BIlpF6Ro1">\X?
%SmYB%XqAUkH3LM'd_)c%k'IOsJl/G"k)D8c^LbfrL.:k(WQ\4/!+\^RRZB1E<4g2TT-E$MdCZmT(nF1M)/$@#Z;c\%l=%`,4#NI>
%orI&\_1&N3C$S7+VF?4gCt[0o*o<gCT-bE+"gMSj1:U23;ob>V?>0(*&[%[bFC8rRVhun.Vg-_s)!KV`.$-s^hh3TRo%St*f*I6T
%b(e2#d*4D%c1lK-ft:e_42^\*oc+78gXf,D50SQpehPP#Od*egj$uU;V^$Kj.\H;>2m6D''Q4Ute,p!gc@>JcRGi4p7]oeWggG8%
%O&h>^q[9s>/u(a^9$qSC6<s*MG+rX$=qQD>0d;?+s*gMDV0,9F;U&+G'gjp#\$Ji3GS;t":-lan99I,9`dJ6&>5]e:-rrhWM`akO
%$dh#f8gh&g)'qDA<b506Vff"M[mmLS@7NhY+QLYQRuDH\8Z.p?m0g[S1JD6/@eJpGNNf\fW`;`Ba[VBdV,%`'Y^7RWGDmJM)/dGq
%.UeM:jtjr3YU?t%kG,/*=;oSYU\6F:>O/TM+H*sWP=:O]:!sp(Q="QrU:PYa='-Z[gfQe@?e/#^a\7R9>"#CuC@tnN0i>)n:(sLS
%[k;<(8IJ%cDCT/\:ZeC/!a4;X^D)T<5^>iEBP)i)lTnm4eJRYb(Z]IpqS`'r5)4R^h.X*[]BS=8-gu/C2EdG(mH_ACR$<S/s+ABr
%Hu,MN.!4]6DnsuTcD-MqqqZo7j4[XsY%l3fT0\u9Vm1Rl`;T8aIV%DTT)$>k+Z<G9OQ'XABlCo3M?\Zq%I-s(](BFi:Oe^ij"d;]
%2'>Hh8]\2B]<&Bn`0n<-r/`S@CR5>iK+V\:`B^1jXW6;U3*,NVdXF(bf+$8hoic-mpP?QtHhsKc'fiG_7&`&tD-0Z\+ANG_h2o^A
%F?'IeFdUk=G3pi3?fHiW(9H\G%mMXa*'\kY??j6UdX8R6Rbhju<A2qKCNj.Jn#e3*b*3:UecYU=78DZGgO-X+CtF!I[e'=BmUie(
%FRhH&lRiId\o/Ffm.]lBMXb(qrG1uok/L#g[FojPT?o?_lT9<[@BZ$bo_FD(4.@1TJ!_ZLI9+Q=PE4"mXL2"'5RTX+r5+ooEN>Z/
%rZuE0>[9p$lT6[ZnFjil1NgHrcWUj>e))[:NbOpJRITiik\LbLn'$(Ok0rMC;'u,,qGj<hf"Ps<>ire;Y-jGCjm:,V-bm/k3hp7'
%?hnUfH_'NVQX_CKfrVhn4%iqf1De>,d>*j&&$n^0o4)k%q4hF_&T,+Eq0N%J:;8siOkhX,hbC;ch]JX(=7=c5-JfP2*EpJ[^:7Fl
%(%!r<R1&=kI3Z.-5$Ujt?MV%BR<eE_TCG"(T=oSss'iZD/6q2DnoF/7k<^gRN$ee,=aojWXo.j'.:$)$rb/^Mr4/$F3ILT(!%_ui
%^Uu77)7BJ3b@[bTHrOC#]"@s[WIB;"G+9q^1GdQ4DN!W"2:7u#R!mY68!n?=q9H6ZPh+!F-NuPAZ28W_Fi@-XSGfIBiPWsXAnHDM
%rc)hpZgm$OG5IK7s3/U7^FjH;.t(TbVt[sq][(=#"O]+!pca`"P<)`_C-^=Uo];6>%1)T3Bu^clmdFb['K.#pmk0*+@Msk1^@Ei1
%KpFGgmql;,O6($MNSq:*j4l0@5I6OMVIu)7j>Km)HXlm)ZeUG^5!ON89Q^2SA%hO5oiF?%mZ)"q]sJe46bUo$]3G'YgO`OTH@T>9
%`GP>)FS:C8Sb645/bMth0;ac8hj:Z^:L="@'ag!CUt+_a2r=PNqmWQ<9R8pMG$+aKq;]ZP3A$H'4rg,,KRQmsO1>q/r%;j":[R8M
%hiCPgjmVKVqH7t"4J+W\/-q$W^,aJ)WSUk+4oA0*Q.ju<r$n=E._X9_$$!(M!$op/,i:.;IolE=6$fE`_WL\lqd/ROA\3!u\,kY[
%0G,AGqrZ^RW^Gd=]aUJYb'bfmSBGgica-+?o;9WOYjlQTT-YD$]X"'1HX@$(Wunn"_[R,DPL&iY<ep2JBVMGO\[.P^Gq#+u2O5<J
%hsu\<YEC>Ej637CHLQ&En"_$MWcR+oq8J,KV9FWS\BHPn,kF0F,sM*#B45kK.tLMUM7]bu$+Tk*RIc>Ab?6L44\.RTjmh7hm(]L3
%l^Rh/<c3'Ae/NQ^hPL6%6d)9cG"^"(Cn>q*oZi68@Jf/hOa^LVS24WGS2B;m[<n0dgAC]BrQ9FMCO_SlcaLRHiMIZ0"BY+ET?Gq`
%>-75+A(d%[0A`i#WnAcW)NWA)gSJYr;L;J@*F6=-5]aSAmS;-MXjg_$r52Ot;sN<-iXlXsnh@23G:isE\Wf7(oKprSlPE_Mk2*e$
%&P@.KiRO8>1V\57oKD:6\*U):EL_?e:i,h!H^HiRqG_IL=&q7^](P[sQK`Oj^GIjsQ]$iDIUc#%7R[3qK?&Zo>"H+j7(4jF41W>.
%5E:)ZBAc]"oO?Q8V[`KX=$!kKQIiTMB-b6Mp[,?O<'I,g^V.hoT6dJTRi="98a>m6*Q`r)LM?:`F-8TN**KsN\MIb7[8])S`O1Kt
%aJ+XiY.FV/-7Y&IWc2=8?G&6/`RX6p;-\@92dUrXlHqg8S+P#cLSC/`PRTg)E;kgM?;p$@],CU-QJk-WOi[irYj:QirUjWls2glO
%0/#t$j40=%+8dG!BBZNsMZ,Y4dpIf'j43/dB>Hg!dYHT^B_:?rWghCIG_:>*YMKD_Y-q6@_/R5]%@XSa$>*N?oUPn1V1VRuHQ1Jr
%m;r-i;l[;8K;;@`F;-:DJ0a"PqF<RBm;ABl3^*ldjNbl.Do2m3-+t=HTY'\Wh]-C,0lD#Y;9X`0Kb.\sL+BS/C;0-VYYWu+nab_8
%f6Z*6Gq7(=l=Fkg5&[/+?Sm$Yh7!Ib9"o`fmEu4Z0@L0`(#V:4h$HT'DDY\)SK@!:Y.Vsnl?i#+PGMT_7tj'&Yk&G'D[uVuoCdG>
%9HK@)\5*Nk^l$CbHp*)L5na_=(@3VoQ-uj4.H<WJ<C>f'QdI&RHs]>3q[[tJ&'`=\0D7bH_Yo(M29R]9(sN!.O3gP(V^M`C7eDd-
%>r4A<X[g#K;/c\fU<"`;kbZZ[>[KiSN2jJ](g2bod"A%g]Jh%QnFHb,q^`77L)1f%2#?\8YX<>s#R(544h=d@OR9sEF[Y(6:c(K4
%ds6uT@L/V-g5O+*XqW&]NDS=DC"t)[)./aiK)OQB#>tPBk&\:oqD`WimT#74a_sB6O2s+;P>R>%V.ugPcZes;G!E(imljKQ)#icg
%)]C!&&'2E+?>^hAIs[b9Im)K/'eb&!e>bE9o%<>X2I'WT%<K=Zf$X'Y0F*QGRQY"`HEKulrU$H-4WW>@*ZECsS*qCMHC9]:_8koC
%=$P,1OO>M*lCaI!gH>Df4=)qh.f,K7Al!(,[8As;=T+Ph%t=B9hU3eBS)<3'bZo/LkXes[aOQ*Q/(1?Y=oWL07DoHoHJ.h7\-\,5
%cgG*Beu590mPOi]YEH*,pUk*upD/`nXZtK%pmf4X<lqbR5Q4#WMX@bOF8Iok;W0C?p8&TcmH=4(lsDDm%[C6i2IH(bW4*/$JKade
%AX[K(IT-KWr<kjRMGnc5/+dcXTODJSN@Vs8J*6mHpmcbt<f^pJV:5(+btjDLD\g'oflB#XD@%\`f+:aEHhKNsbQ,u=X(6DN]2KQ^
%>]9hFg'd(LA`kJLp\#?L4L+//:AS6=>,LHdBrjKsl>`.*[aGn5rb9/P);$G+e)/>d>qYojA8a@;N@E:o/+'IY]i36]?FO6VO!$4H
%c8AqY`ZneIF]d=%VW$]&7.K42T%n^?f*f7WUW5RWld?[eX6@OOQmk4*hToGS^:Qk(4uip@i(K45:;0>-mOj^\[!u\1).a7pbh)K`
%I!W9r6'p_n[8ODAi2BsKF@L\*Q-O=/4t!rU3Vfjc*oG<,C7T9`_5k/9^/c:;q;aTUSX8S"qj[J'ksP,dYg:UML")UDL[Pct#X:<J
%DYBU;qEr02m%!J_4,mc^X0q+LJ)SgpEJLVZFQnm>o:+"e`ER+pp\6bPY\lR1rs!s0A"7h4m0HsDNV&.9eO^_,Sh"_`GPf\Ee(9hn
%rbAk<_3+C8=\dAB\WtG%]pCDCO-`lu&m`Q=O0+X]UoP!rq3.Ye(P(&kgc579gH9qkr,D%4q63QHd/-S]0ZCB.^*`XG@Q"%gq=r]@
%\Ld43T':]02X[%a?t8DiRlOWOeAFO%NacM)(H*:AA"67X-V$&s:+$"KI[2FlasqbHqMB$iglK[pPVIb'LirFRI<1bIH-"+)fZLk,
%E3D.XhL1r%qQSjP^%rjDqB2EEH<n[ZWnp?=JrBB/B9/W'g!#BO>#;BQmljBbquTb]l`B-Ep6u$KTc]rm`Vu'C-$^VHhSWOC(0Q"_
%f):anq7?'P[XWaMo1/ZC@TS7hFK(<(Y^3N=R..PXK+Li%SNcjOm^I"7KR`!S6_M;?cAAcK)i+C7>k`:tbab=&\p&Hek/o_qce24!
%\86Of=c;,U&r"@YcA#&H?jl,qc&Ln)+(i!_j\KUfh>:aJc/\coeA9OQIVWBXMj(jhV.S5-d0f%#PO/"@S]@s"%_)nglA`^<h?/A\
%gN&>r4ugcYgjf)BHU]DV=54$2fp@UiM`m7O0JC]f/r;-lHg>;T%PNR<C6;[_B]YO%X#&=N4^.nVei66Nh0esih<lo/6RR;2=1*8C
%#AO&`\_?eoUV"P>VlbqdK!)iL0_=`,Za7(1UGoeqkcMYjaCd`MGWb>/qRYD(lX/qL52XlOh.,VjEIDbubI[^rkn7_?OheBVkNh6b
%9)YM-0klQqTq24h<GasLKWa4?Ydm(npKOFtFt^3gnm&lcb.Q$4HTj\;S;O"O[[oAFINkih`rVb'k)Y>[(sHS;$-C3s:?N$GLEnV>
%/#Aj"J%XFT<d*i$FW;C^fDBc7XRfXZ;ni"A-5*f];RL/lojP5'$#d"RCj<R):IJr9/ba"$4l(p_jh\qp(,q_`?3_*h1Za!5^#in=
%DbkBqrV",0XErcnO,h9sq"c.6^Y!lQ23G,dd#-h4IdV'Fp@N_o67U<Q.^MWZI>$TcVK,0Ua#d[mng&SUVY*PO4bN^I\=_*C^7=@B
%S*(#0*]t1l.IYAiC3Z)pj6u>Z*,QM_)qfCF7jOGihqMBtp<P\R7e7l<>j]duP=pu4]SMmI05cM%<72BUYCE:+XibO(q3eS^@e7X\
%oaflR1.c6C>0&\9+ThK=E:_o=;("-p1\J&;9cfO"2qMAc#=1k=GP^Vrh94D*5r,F_[m*c2-XA$HfQRIZ.Sh\pYMVZOqc4CO0D7H[
%(LLCKm)j#`MI9rY_89D#aq$_be\,Vh<P!HsO#5SPa7SK)=<r`9/W^!WoH\d,e0KOj33,MNEP(o*gX\^jm]4UprNGVT=hU56U4j<F
%UK`fOkkPk><U]OIZfgIN2YuDURf&?9Y5EqHhogb]0/'V8cPCo64$9>Aai/HG>MVm&H("'J0c\Qd&/alBrl/%7&tS,MJS@;S>]T5o
%qCrj\>MiA+,&NK%rqpeXj&tDkPUSuKLjgj;l1YIBf#gMUm&cOGfrM=55\c+kA[i+dokRkT%Fn;LniO6adB:mFX3%2h]Oq5uUQfi0
%S#:?&Yb.qncE;tQ/48'>jUTM^SR@S=.cYnnGM+7tHM$]E?OC]gf>_4l53hU6&WAX<nkguMaQN@X6s&9)>k(/p^1VW\7H6njJ#*WZ
%:MGF7qQO,]KIE<0b>2JoHl53]l(B]oMR3,/4cLRKX,n`L*d8_c%b=\,2OY4kqSEuZ0:%Q=V:,,skiuO*j/9FdA)gG9_@FqjoEV?f
%_+0CE^<Wk:2c9nRST]0fmmef`TIr=^SbMac0Cpl!]ViK*VfT>8caa96"tboY0+N0XSR+O]5(#oXrHAF/UX)=HYR5PFIclmGSU&i6
%=?k(_mlai$*.D06ek[ZO\a-S-il>+2B_?cD`he_T2_+X"W.@.BlJWl[oncGJo8h,]SG,`.QtNO^?;FTW85C&Z/:E$RoD2&Srn9hL
%l\8^9-^?':"K&283q(C9.<hiC7UCS0V81:)G8]qZg047&*``U:K;Ie[c[Jgq$hJYkmh_OcP^D+DO(\fb]cZ,G?B>b$2qH;9IZpUI
%^B%>aS:)"fe;_s3nYdPH4!\>60V@5b-V?Vi*0kCg@iiX]1"7,'!CpRbaQQ`hS[,Mi3aC@6ZT3M?)kbS`Z#f@ZjfTs!_+mr36q5=u
%k,5?);G"QKqrOC74O:[]>^S$Wdgg`mhWDfso5"'MX,VJ^9_dPeomG_,DKGd">;A^>2p6q\q,&E2s7)9%n6$uY:pH(.,+7M3iVdA(
%l2A<^X-Y0-*3$jQl,GCX)jVf:Irp]G3]62hH($n*e\-s-cKDKZp>^.Qgn_tTnf.C65`o><eWj"(HP/B$Bs#26fRLF/FORdejmi]2
%ba490=K6:U2'.-NNOU+-;XnEp(*;qB/$%ZCli"lu2*.4M\ek:n?!`$BKOk):Qd,bL8fk8/Zs$ZoZEB_.d4XVr3IA&X9W.o60i^:u
%Dft/HABOhZYHl;#YuaC]bOj-XNpPK'*Q$cj"VPfn3rPZlViKUp7m6KiQ^clV#kI8#?^ML?rcUsBX'rA5`Wgo=;'_7Gpe!d)36FE;
%5:LKOI!CoO\LZF%nmQgZ-60gM7%NND$LGJHfi[J_]=>%N+;9/%!Q^@NgNmq%e:mp:]l76VSpce!^6$ZdolBKdqhqp/HWE?>l248h
%h>?h-&2lWGcTF!^g===:9C;CuY,IZQo^:.*fr8i'=hYfoIRCQZDZ15Fon/=9eIV(ng,_,n,:$+b\oOB'b-i@dqVfJq_Xj\d5qeB'
%[NYJ`lq[3Jl2'YujjWR_nq[)SEpHK=mQ]s/lHfjqGV%q#2joTKdV<s;OuXR;!t>"foDSUHX0eAMs0tsf+La"UhNJO_po&B(oI+AH
%A0gps])"qL'/)rtkmi=p+$GY"E&COCHtFs3q"B+^<I91=5Q>TjMZcOtcG$r<AjggoWu!bk]"YlPi]sWZIsXf7q"_^Q,_?Cla%PG4
%p>6Lbn2VEJ=)7QF`$h?hI:IUObIQG?Nu2h]L"PXgPq,%F6*n7QfQc>fc$aorSKBe)D_D[K:OZ"Y>nl&Gjo7L0eKFRP"(q?4^fZk^
%>ksFR;F.EopS*o#(KbOW?VG9;.NQ6E<Gs5V[FjAVeS7t=io1?P7RD##;_'qMZe"QZFeCg"]kb*)5Bh(eQ4/*0FGAX07PN&0=I6S:
%]?'+JH>['Hl%/#"_$p\JY4Q,oEL]G$0r'NGm^6EL`T"!RQ_[qs`$T;,CFR%>hpem3a@*l;AH$!/r`0ZJL#i;m]OMM(@n$sG&cm$i
%.j9(l`;gcVfJu8fQ4[FI$#`]\iNBG/==)`#[Ue&Q*Bdce!J^mu?I.aWAqWXTi.12C)6>*0V7;t/Jdlm)B.3Dd&eUpD4lE&?H".8D
%)'!Cm9dqmGIlG#%Dtag[UZtTc7!:jZ[VK#QD\Eqmq:HOUOFQe-("1"XJO\lQHDZ)22c5"q@(Kn6%-P>1T6:_`F'*G_QV=*pCP2fn
%gO;&168H"%/2p&RnNnZ_HKP[<p9B,DY3c12_o7V>[shVi>e>sBGOR&tRs)VDQ)4@qLCWXnn/X@oNJ9[mEnWcSM_PgV96&E\c[Nr]
%=#[=NQZmE$0%<LAO3Cl;fMSt[h8T'3(k),dkPfY^Q/3,-4c8)B*mlo0n-6b;]/]<+UDpr3KJUH8buF;SHb+Y&3#HXh28lbKUD@c,
%f%RqBgX(BGoh,&"47-<a#5>ML+q:_l'%^Y$%K4jift[=aAiS=Y]iHdm2!\.+>Q:b$^JaF@9/&^dB&;MN`1)$U@j=pUQ(j<Pgk7nT
%!X(&]qsMAT8D+T8MHCcUO#bQGb^YY_"l;<X^)I:q41b8_)?V4%I/?gtYf^"Qn2&P*;Z*PBjf-4mUTdRgm2oVUWi*6k\Is[7K?HqY
%Oget58?oWUT.t="I5+%AUL9haIe<W^NJ)Z23GnTZI(e)p^lcW&!%lSCnd*g$?0mT/JK`?VNT,[9c^ru%5:_Qk"N4`<.mbLd9jY`D
%^"%G=i7GY?VtKJso:ae/]=O&1Lrkk)+PHNkSOi_!f*MY8<iXfRT,--BKqEfq-!IQ!e8Ukk):JLO^B3WD)M!n`=n>AFf07t"70b'0
%L:ThmDO9R3b@foUYOKP]^NTD6q;KE+U'=*8n*gGUbu`$m6kt-Qmp/DTW3`\Th=4g#[r+SPkjt.G;G8;e^c($jBFQH-Rn.jm[Z@GL
%)Z^rj)E0f82i-R_O7L?CH2iU8e"bcMMu.bk[Drr:@t'4'<p)8hilKMPpINW'/Ue[f$>hr28=sU>aE5<Nh%-^/JCa12^GUJu45(M?
%/ap2[HRJAYnLVTHr#l^La.ON:=;;.c9Lt:B0)aNoj3Hn[58Gd5]Th'JEA39q@b@#k^"ps\ee2Cu*RQW;W:Sd#K8W*h^#lFBhN_;i
%Y.4KDm$e4OFTh=aGQ'9/.K&l<Y<.5U!*lOTJ*t]k8].bpb=^\/iC*Z<^Nlt49mar7mgBu8YsYks`4oX,Dr7P]Y67_VDW9+],>l$>
%+!/dT_K;!-AU''g2_.qtr6bK:aBn1-ZrOS,1e)'ohAVsDm(1XOO?j_.ggQ^0J;Ysg_0'Rn(huW`fg6oK36H:2Mlg5qdP(C)Tbmes
%#Z.bg,Z[Ld-VZnV>XbumOp6*>C77Ui.7,AhdIphoV)E$5"dr*%n>rEqGdMZ5R5?0TOeL0WkL'Yr"MST[8^A"jF`ks).pQ7KH8=_G
%Nf,f`Pf!"<VNO7W_K`TN-DdC=Ra%X>8DV`pjR90Bf:nkL36gYH5dGL%UaMFu-t9Q!-VZs;;WT0@f<EZQ9"KaDS#qiqr0EpP#R;<S
%'L>$$;%+5LV(en%1m<O#W<`c;CfLg(l1/5Op1)dMf>M/nRRdFH]oLN4$KZT]l(j`S*N95ZQ6L#K3dok[.4'0qP*R]IVGtu%BL2'a
%49lgIW1P94oPh[D/$V!p&M\s@=->1[-)B1bio+ui3);jnOc1`Ad1.br>5BN.E4Dg:<#Q[FR';f]gl[oLrEMBeI:C\W%0hY;JgPR2
%hT7n<%=(Oo"Ut_bBmGGk-AV(XeB"C&=eHu'&fJ3l374R4gVMG]3c!P`>(!VtoQ8*5hRh_YKmMC`j!Er'J2i/kgiAc?!3^:8:"i8D
%NeuYFeI;T*1E>6;=f.VVBH'R3.VLS2O.(ktQ/Ds[P,M,b0KMf/'mU[*'7kHN(edQ88])m[jE\,:lR>Q@T$?Hc&SX<n\sg\\m+MOT
%R#9Qdd^bj7c%R8p_-fM_dA7&8Qr6Q=4#a-T"%P^0CV-`9Rn$_%!Fl<Y*&H"DRtUHB\4^J9^r[pCNY(,&C6K_1XC^AGD1,`N8)%-'
%D5&K"%Yec9^i3,MVjPa9AVS&kM$\uB>YY*]A/R]^K0X$rRs'tLLa"F%NRIlo=AFbs@6-`aH'juQLj0=pSn9Z#;hrb/>@8ZI,j$@I
%5a+^MA\'6i1RNsFB"D$(a=SSh1t*S%O9jGQ9'Rb"Bh-ODdPc3:'IlM>L!dOEi=[-o&RQrcnO(AFk4W&4`!c?r/7]r4NGsr7_c4(>
%>6u2q6("O'EVs?Re+&WXoSCILdpnb>681,+8;r4hAU.Cq,(W2(6&T\UTk-#o))U%)\cC8+q-?.J=d4aJFJ'=lPZj<&Z4*3nb]695
%\cEredkJ'uSJ&Uac2.V]mFW[`.bE0E6<FAm8\AUjq,7sj$mS@-BUXQ)E(MT+ct'HS#%8/adnlcC:N24^'[?eP%$1eu9'?Bddicqe
%A8iB*&g%`@H1[NH;BMQ(:bb3MZum-LVF_C-;/]o@,')GeUdiR;EKa,F59NkUp%5hY`/4QO#t,$qje9QA3%(lE:g1Yc8-""`]V]!N
%.a__mM8Ou4+F%QO=&U_C68T:f(n.,]e.%2$fJB1G+e6Zb,,%UGUVh\F_,qllWG!e7aUZKLYrO4*63G6UcBA=b]P<V>;&1;U*Bb@s
%AjI!\Ul&FjZ:*(sefoW,jkA@n$iS-p-#o[_.2S<RQ*RsB`L_l+@#B1ePE$gnW7N;(1CU)\o->?FX#sKfbRu7U,0`P-A(Z/?i)#o"
%M'P6dV!4LHefotto*!doe_F])"MFmta<h-H/MRA=--@HpmKK[cBQ\,L%YD6)AjoGH^U3ZGM%l?f*Q#2uI+Z@BoIo%H?pR-gkrCB*
%GUtqLol8tRO@[WIShP_-gU=%&8S57cJ2AG^dK`1)FL]u<"g'&X0#HaE(FO'^p*1Wqjp9euc[r5Do80=k+ohdjRkU(KQRehj%^#.3
%77CBnEO%Y%#80036D=jt,cSkH""D#ZJUp+]"u=G]1h!=.pahM(Y9Qb.b1;S2&Q6#Rctrh%;(E*pN#$S*[,QZC'I_[EF[8)8\ZSZ2
%?5(nDL*;*bm7<DrL9fl/82d6"BMe=eL35*!Q;MUdcjGPs+HM?b*UHmbJWYUoM;?Vn"=2*1@N$2/Ml/Y"?j%!,@s"E0!ONVV/*V;@
%<[)a)(e:###]40C`tEX8bBD7[Je2E)PC+>qrQ-7h2(@5\B0dGqG+n/WCdq2Z&g@L6=th+mHn>X6C8/fSo*&*+R+`*p+H\3V1VX6q
%kE)JU#32(!`$%4)RQSY/Q3L0fVI#Q+S<XaE*;J6]I9I-(0S5cN/@Cj!`5<@lO.dgc/X(lJX<%Q=1nb5hTSXpG!DCcVXpCII=M5PE
%!-s=$F=ZSjg7NIqeQSCX%4GM;$sb%fAksg\D1\LIbWKjVb?CK>'Y9iWL5&$X4iL-Ua*JAr-Z+8sUn1,:filB68/mak6ZS&Q$;ldQ
%r(g%kcPZgqG:QTrc3gU44JP7`mh(D<#"^;273HAM2qh`Y9JkFI,W/9&)9=lCN092EdZ`ArEZL_Z]&)oXh*e9!&S1s;/9cY_`CnRr
%0J,jpP'/0FL,Z2V"LLCpAR8>&BKFjf,Ujm]W8T_iDNog+"Qh)\dF4\YK7h8/<DC<0#\r#mQ:Td<[S:/#8nq77<[bds815/`Xu')i
%;^lS%_"<<$ECg$?YlmcHHSpOL4"8uRUa,M6ZB#^S?*M*a(Q1O-C."E!`^NRR"LQG=KQcTH"D@AcfG7C,#i6ct.#;uR`R,r%]OEY6
%@?V.V+PEECg&MRp@DLb%BFZR]#\7$lV#!5h,)tUH]oe>K^Ncg^29q#Pc.Fu`14Ep&,$76A=X#%[o,(jXZ+r^MCDH/@hB#f"KEd#M
%_@l"&TstCKbst7d:POOWQ@t.D$5@)-\5n`'iTcHqRt.0.R>;]mJ/1j@fQ+/1daTL/#?rOY$qQ*p9g4/<S!AgBh@='<3'`%@H!,1*
%>nDgDAiA;uF4o`Nfgq9gVY;p.OWrgVJ[44IYUSmg*2oJ5ghDDr_+"]/(**suJgR:t&M+;s>71he@Q)^[M1.c/RpH`MP\<i)9,Un;
%J<C#06:#0LL+t!<4E(rl38[_`P+Xc1c%ai.YS&fZR;5^/@;m)"S'*M@8H@K6D[lEq@6p+Q6VV(q8Sp]@Tm>AD6q?!`o&@FhC^_7p
%S#;_q#Uuh_#qn7fidin]?5Idj@;=,XQn+kD=2`74cV@RV1_f_,GrC4-L-Al-BOVA!asK"UQ*A]lTEPf+;)S_Ka4!Dt$deN:*DP+Q
%J:iecl:35%=+s$X1bIi;)6U>N:R%s,(>K%NR"l:VTd*DPN$9>/=U'$N+46?>Lr,6k3*$:p_RNt`hOi;H+>lI3RMl3;@<t3>aH9N5
%A]ZPF3Z?AIR*O^l!R55?,c2=n_&kaP&uHF%n:@G(80%'WGSKLP":#WW6,p0]7>dcGcCD_J'YZ=iYZWQoF%!?^N[1*b+J;*5JXT9r
%:5lT#!X<FT&;pY@]1UM<BRlnb%9^TkL@t]YD'j'3%IC;r01[?iY7"@TQ7:fd/rU/W?F0s:-S;hU"Jq(pUWJ>$+hCCVODQu6->u_k
%d"!qe5rt!9(W)c0ji&4=$'^74O\@6`N^X+.MEmk015FqK%,=%!'Jri*<p0i^=$*d&KqHUh9:-mZ1Z;L&T`d9`&^rhqf7Z43oK\RS
%CiDZuP1$-@fKEa5!('Y9oAHLOm:VSj:/dW#<-WL9)2K!jo)p'[1jfjW+OrhHTdKr%%)lY[0k<q#D:pA%i"a*8lrWbsZk$oF0[$n4
%Mm,5ePJsgb&"o3[*\2!,$Xb.99^VV=22"dDR`M"BJlk9G8Wc;*:,>O!%N7T7&CJjmfXf1YF_BIuUI)dk7ZsVs)!;m<,qU?u)Q=h5
%(.)5"(<\XQ%ap&i+Tsd4D3!X")6.('6JY7.'u\sFEmjd!6==bX-PkKGU3sXcOHK5l?n2fIfc56jaU.#O%VON9%7;KZT`l=\Yl^>'
%%3dSPI>o]0/>:&FE&uGqbRF!LNOUH#<?>oY_.jsr$ic8-8n%uq9C.12NlD]]fO.$\U2@br@;qXo\^f.I&dQ_%nLA7<,Um"[>su.]
%P_CICB[;S>.*38YBLMJ2]-<ktO9Yt:7`T<j\!7[b8U/0Ib7L)7!g;+[@0gL.(,<R(a>K"m+bORBcic7g_D*am!CTJ?8.[eI"hI/#
%^k;!)E43#5-3+kUL(2=^&C7CDKXe6*=_0$\E^p3eC_c4F>*b7B$4a?X$TJDrnPBj,*<!07`j8=2f)SqR1)FCWBL7W.W0*A\1nh_o
%AD;oO&Nk`.,[3:e<^J/\6hCuq2`^GbcthK:&CY#b>CZr$<=s:;1jRUu.6nOYMTJ&E0%("@U<b#[[L,'H]cn8$*GW!=)[u*IOm'5^
%Dd_lHNk![T89;fPP.Rj#,Qo'>]d=^Co5/TNJo:a40%(?%mRc7BG`Ki\9a^#F2[NPUlsS<Kec_9D6]_dK&VcO'4L63ja>MF)P(uSe
%9d3>7g-D<j,WS,,_fl.-/!`0rs#?fMUFd&G3XX5L,g6YU@GW!O2!0s'PD"ep_m:OT'B4Q\4d$cm:`6Q,_S_h>f#4U?%,gg\9eOXK
%>JXgX1mWsOFlXNt68G1;,SB^&JqHogj@H<qP3j]qCojh^R!R5tK.7ReD3A..DIUKgp)-F<66'f,_[KYk$M60I%_OW%(X?06'[pP9
%UB;0c"QCEBV82NWWKX0O_6kGtd0aVWMumLCj%@Pu!hj>0i,OVW9]i:h['5W_:o<A2",R[b7lDjjCa/Gh-elPEK?0t!BR6d+UKj0#
%OX@p[OOn=L)I5BLL,RHe.O/8S+YHnHEtbP;BF@K>MiE?[/#btcdj!LC+TLBn28S'(N.J5fX3">G,99&RVAJ%obAX\l#)4<f!"g8h
%'$qdWg*BZ05*!&p6=9r1%U1Bd*GgDGd:A^t!_kT1[6jr__hRl>d]jsUiVn)+SQ;Gg/B!hhS/HlC%Q"I%c?dM`8C(nhkfhta@B9rj
%64T/lJi<iY6Fqg+?,m<',p)$lRdG.2fAa%ndTt@Uj=Pa[301LK(<!5-Vh^F#oPCMKN#X!6YJHY3r1cD5L`7+q0Xd4S/9hI;1*6_2
%M**)S9UBg`0ZZsV.(G*9b"=(l/c'/.C*EEThR$Z8""bQ5@7n?$+]4t=?kN*uDY!F%:qg^i5qCB]MB*>&<!bJYBKD4!'&JM(R%1.N
%!2*]FeN/_`Ph],K![+W`a^cr+bhMKHH);'UQpL3ZHBhF)%bpg''o9L9r?-K`3&IKDdYHT!_(7Pf;A2"[8Vg2'*8lIIjh^OYnAp9<
%bDVMcV'@f.>Z+*EAdl_e3M^2jY7"Qnll?uP$]D\s[TZZB7$_45mO4dS8IdcsRXel21(/m(Yd')T2YiKV!pO8jKIL>q+U168/-hGn
%aarPM*FX!j9\H>Q3;OsF\U,>gP`Z5+qjM2naH?+U7A`@?q[l]Q.=t<@9dC*+"kbgKW=5t[//c7ECSO<@NhKYs+G.j/!QQ)2(PI*N
%<iZ_oNJ,$h>g#ESUcB.+_k]k\(3)T-3M)pCEX;8?Q8TrnOlSuOjHo'Ud%GKD1>s+@9"+kUBkltfe!\!:7N&F6OQ(7SD;u1[J>A8G
%,(CXRYFr((9.-2?Pk<UA+utHqY6R9\YmF$18D4AR*3Lou*DYR,E!;EAT%(VD+F`9h7bm^ENY@@#\8/0q@Ac->rBVKaaFr(IHjpJJ
%0pl?b+aOCs\fQniUi6BD*X!MaR__QEf"jlh]82CgAcY)=i44-OA1iY1]1kS'bseWpdLecJcF3J9?lsVsX[L0t#RjARf9*]V<sooO
%8Nr1kOLF)<fZ:P+^=8-C+B2GDGc%V1h,TJV^nfm88.BGl?(nTke>fn.#DYr_oFR(-S\UO<Z&Z(!bZd7<Uc(r-Z]J'4o>,EhX+S8u
%O1cckQI1@6-IT$%4&ch%lCjT"226kp)-0bu"=R=nL>q8GS3DrDj!5&,,65gUP0%Y.<X5$gZE@?]1KDdVHJE$bQeA="0HEm/A?NPA
%V[8E[R?^$qK9Rr$/]h3eVi2'c.giYYh%6Y;?(</33GfieD:VdsDA$Khd9$nk>q[o1Pu_0]@(Y-QZ4We(@mN.\E<lk']u/@`d,m<^
%c^'*V,DM=]EpSUEA@*Qf#F`Vl2Bb#1Qs_X0Q:#<S*[=D;6ANKIUko5Ze;9Q+,7t1i;5F&&s/\YF6S-.BCP!e*Q$fABE=3adY6c+Q
%.@a5<M9nqP*uM&,CQLY@9149^kdHGaXUs/1D6KAaj\c)X4U4C:\8HtY;"cOR/1.L?`@6t8!L1#Nr_V3UE43g(C*:s])A^2)83'2/
%+NpiPE(S"l'*65uV."F=Te#/;1$K)r!tR"9!^OG"Y%pmN`'rA_Mqe6IK'WnVBOkIGPXl(^?4bQ6"XgNAfL&"GS((#+>XBW65p?@j
%aFR6Q#RrdH40T`2>[hc!N?_S<=@#AB7u,B/;O4K#!Y=V$!?$jWTqY?fU-n0dL6`-9UCP<N]olc;bB*h52RnDM/&PQ>5(p/rmT:Vh
%=]5Qh9;QG>jA$l<*1)Eo>rc.g@rp]lgc2&)XAr*mKpiP;kp3gN#a%[pFTXancsl;-+A'I\$)c3`:D@g\M)oB-a[0FN$\es#J)"XV
%4I8fs=?m)`EZBJbKeU3`'fdO`8DSNAlU=35D'W8kd>9Q>A#ius9ONM'Uks%OUWl)n&-dY::_(Fb5^8%,c>6%m^c19478)AQ+B_Xp
%)+):r%9OGmET"Vsa.Y$b;@KV!:sc/)WK*#<E(M2j#=18ue5^-0WA&H!'BrRSW0hWL7[tT.kuf&CLX4;'.)ah64u4mGhuZPb$]nYK
%b;3#jj)TGYeh,!DEpnj*9^js?9H4F?F@3&iM`fdK&SLCW(lpcrFJXgfcBT"?&odEQiFaQ#c0>;*_8/)FIl\_6WXe)mJucTsA+pO_
%[UJFA+A-Dol@RNL_*Lo6)LqoJ2FOsUF[OD&%E)#OM@]MO)`:DY((F`L>WBa*-=RB#b>&G+-.\@!`b$&-gZCi%d#5Ah&HRa5#-lTC
%g.$q%Np!^fFLb)njs[&LffJVaW08,8Hpb:,"tlBr$:78k"ij5*4:o+nko,o'6J94XkC=h@YjA%:S;fdMR7)d?,D(gq9ZF$uEJk,`
%Wq/@B.u:@4!f\mRM1aoMNjKt<JL&;J@#G$m[-`I$)!<#4AIDR0o17Q0Sp0s3?kCF!d4I@EjT@2m:c#_7W:N9B+cK=Bi,BY#qN+d/
%N%loMq6Xr!"pdW1V5*?B:sFUaSfps.VnscZ2n9DK08rms+r"Tp>[5:lJn^n#aiP'.0Q]bsg=$^QJ$B4E8.2:fYEdR17UMk0&9'KQ
%+UH,7M&Za*hJ<qc.X3oaSLc34mguY-f^6)VkRF2X.[XuX8RXmPl(Ec!lp2F%=i`li*##Y)qa/^;&n+Ul/nj&bXW^qTBrT`&jGGWn
%fGp8D:>TMeME4%Uo6E0r@KhSiALe$H+^]+CJ0lHB%`XY9eD:sMG91DEm%C#/'*GD_dr99IepA_b"C#m[q]Db5iH,j4dfm.0Qc$/B
%0$HqjZU#-m+F"6%`VW$<!?o?e$RW34>^s+"=f+5i8C@Tr![aR3'Ghd/-6m?de>eGt6p;aW%#MV=@FX=t#WE%9.?"<R+h2JdP"*f.
%-!J!T$3m?<*08LD(bQU=3)&@q<K5+7In0)MaqKF?AA;sa`L-"7jTQUn#1eLlAQb)Z1?:uN?!9r`62d=1dK`N@E[mJ-j.I5H(f$1Z
%-hXSd<a:6l2(RT'Oq+!@k0T74JI"'I!6=Y-;(7W:jM3`cK%,'&P3JW&e@]k:bsZ7N.=O6mQHb*r#[Y-s:>pH!Xurt>8QSDqRE/2g
%-sQlY&TMg$YSh>6'Q0<(-]'*j$I0!rioG[r"Zd"[.o_!Y>,<]Z5P/%fkii19YT2/+,%/Ff,B,c3K=1l0bH$6c3ElJE8#?A5aiFd%
%^_B-?#',6-5RD:r:^9%$Q38hq<Y"16ibKchN:[Y8XK^i@Tjq_eCL.V-["?3re.$2NTFD9rbhV"i"G/d[^EV^jrNUt\]g6N]oeWs9
%e=/^bC<18p0Mijh4iB&':t6.Ra5KV-<j%EJOUO+`'E^sS9a9mo['prjL#bY+*D(5S]oS,4"mZtu4j.8,2f&h2J-N2mJCK]cd)gMB
%iuecR6,5!tf"`En(F/uh30M;m@(=Y.Z\%D!6J3UkSVZijf#o+T"K7Fi_DZ@>+d%[D[&?]3Gf.THU0c#nZrfapc:5MR9uLOm6:Ztl
%U\CKG,3WV/'SS/"A"SZ(6O%<(+HB_#!?B%]N?Fl#c,h+MKT_0)3M=JdM_eVB4,*`>eB=j7%"MAfI3-OS/B/%,8jgT&(e!:Y\3YYq
%L#EON$DbMFXTL;4eSuPL1'>`;?qU'3\9cB]>%*VUPQR5Q8:_!^(8_109/o6,b=*1laL^>bOF]9Z7%`.`.R/?HJQkuWkX^Ll4)BM?
%FeClL25'tl8'tDg8^lp]JmQpVFnLJ#(c(nBQd,72#f5%6W5O"Fm4hjgnW7rq)BCe]`/:4NFo3;i(>pfb0T52:dDhf8HP2o\]+G=h
%XUb1T25.sYq#Kr#;e)0G2*$gN&Ged$4CTb0!X3dM+I-UR[#aPX_LbfV\@oV*ZiLhp8#47[rtbf2HEE!->HSI'Km5<`giX8t:_hp8
%`WZF(9VOQb,uMIObr)#_%fCkOa_AUl2G8CS%U:*:4UkV*cpj*BUTZFDRu&14AN3pOGregI=arhY,>F9s3fY:rL$)%+oQ5X&)rmmS
%5a8e1ab45uDo!UDVc]5%7Q:/2!o+$A:KVZ4_s;(>f=O'RdVBR`*B@:",bnKXJ@V=(4^:&,\h4u+["CFH2JN`Tf9V5Fie10d0=`<j
%?G)Q(8.Ml]NHB/:*VM_%&$K5qTT2D")A`K@\(o@sDMA7Sg1Vi_ajDSS#T8!@%akdn-597R]P*hUK4\bsW@oBIE/8'bI3!YRPWEkL
%ABt91/pkX_Vm&6/MgRq%kY*P`WcW>U_AkBi6Q7Xb!kU4RUKa[3j89,fR2d@AZY]#G5lB<Q7Y]Y`-%p./M^rmn/F=`,<a`N8iYFNl
%U!,e+*Z9h@Z43&fF"#9+q?lqqNNg3b-G&m=Hl^P;_c$6unc7S/EjUJHlUiAAjNB@qr+^ZKO+l(K<BMi9Y4$0":oWII2dHSkj+ERV
%ne-+fodVm^-tAUTR4g2O=s#B;H?rLXreSdkE*?`]<h?4@l_e"R.[9W69cZPeNJn_p\H*&2VLX.$@)=cVNh0Ir.!&Y67Yu^7["*1A
%k6>#;%1G]dQ<o9/n?>tbRP6H=nuqh9Y(@Z<"SlNF$!/^GC%,%=+c)n7_7'ja7PO=:mfe1Lkpe<Pi4Y>7'fu2f*'4GriVJEaH9d#q
%P*"I2\u]Lp@st?,Jt`Xk-gAYo:571O:+C8rONlB5D3Q"DOUJ;p+D9-O"st9eoO/<pZB1:\_OVaD'f@-O)V+uB/t\1>3_bDb#U+d2
%+7>Ha<FDa<%R'=8[b`??nONj^)]+6_C<cI((`bK?AmoK(F>t\,,!&IXTj#N*qN]eTNpBepUJn0FjML#J3ojg2:fcAK\8]F(/Q,6j
%#L[12C4+R1M`Ar,&I&qU$')g=/G+%;)u#qge0jMNbrY:Ub(,eBdb,%pI@e?S#"Of6:G%oc_+nGVbnNN[K(NS$&I#JEnsGl-)s2Yt
%hdeuLX,a%AMl)N_jrCe&Sq0P9*@.+s!Al[oDPjC;q&UqC$'bJU)K;&T_\Nc8[Xp;TBQb'pBK<fF<u'(/pdhOtn+$b$%p[VEN3[4%
%49EuuZ^82@jp5R=GT2N'9U@.:5!B3^%IGII$Q\"p79[p`p$&u5_DeSoYbt.d;<"8Dr2qYY%/**7^XCBTi9RQPOm/oc&:g'T%36KV
%Kq"k([NK>C"M00YjWXIrbr1a%9#nH<^*eJ64Bs6SpGOn)[]XQV_3-#/9!fO*Ukrk\]b7Vl_\Om0HZG?f#<bAqgu_0OK!#;Vjj;s)
%.[8epkO*pTh#Jq=\\i;K2?Qa+U\';[QOE0L[^h<PWYJdk'4s2kO")PFl>QadJbA8sI,u0aJA\>hL[Xo7TZmm@R`e]MW[,34J'B+P
%TVE!qCZbN@%a,G?#d?iMb]nC%Z?;D%4S"%&9YR<`-ohm-eD&A46s@Y=Y:nq[9d@0STKr#UN8s1Rg0BakK*17,PMhA:_8]c0idlGC
%KOGn6a^FTIJ!2)a(?Z*fS//q(@bF`_OEMW@11B0U1BV=u[NL-/Aa$T9XrLS!3([P8Yh<M%7qm[a"2;0cId?9<:#V/jl6e+WYmTDg
%l+e!?!Ke?N74Tb>EPp9k3?LRo"tM\jEGg[fAa=^.Sp&D;)!M7TR:oT`G/s>Iq#1;_"C1k4<P,lCXiJ:E=2A3Z'^]q)+bPdjr+%Dd
%=8J.A?nK7#r2tY>LeJ8=jf?im*D2C'M(^H$PG_%cq9H)$P=LuK($O:!q.-?L&/X;$S>";,/\LR\C,q+9`a"_JQaU"8K)c=T<ut/_
%"X80!_>,$LFh-5Ia&;tu;Sa@u(Zl=e)Ac`LX96ZSP:Q-^i:_n^bHfbUQV*^_h$T1<@Tea$@S(s?5Skc6DXa,39'D1W(lN-C:4,YV
%+0Ig$0)1a'6leG4DSC_ao'Mm=KgtW%'0buk&Z^Q4,'2]t%#<<Wd7#A=]LO^i]9D/^ag-FM1k>7<;Nf3F_J9[RV2Z"B1-(7GP'Gn0
%'#Ibhia<'F6eJ=SPcQ-5:E]jSk[5brB^8d%!F\D$P!i8>5G'-=eWNI0Z5^`c*8o8XUC.qc?h?&IFU#MC6%DVT]ZJla7#V<4PV8,;
%\<#n%eYO!GLSmQ^m[>?0-S=E7pst`?kE!P1h[<jb;;/E*Wf['4Li+I!lf&WtM8Xt]aZNOVPAEl_Ub2e6-lbr,"=2,Z2%#Fj1j'L3
%,!sMI;E.8o#1-bf.\Lu)iCo)-LWf;LP*`.$*V"MT?gWID:(3&@VVq^R7$:jp\8]c_eA2#d?$mbT7jN[*Ig-H1\@dY9(Ss?,92Q@[
%rlq*;=,D!QQ),A8Mn#.)-K0h)YNV]/6U9&a2]oQLcXAgV:njq-)PW0#Q1)TKMH`a>!6^$e^ugqH1R&5\6j[/l'kCG^X*@-]*\>-)
%l&>l[p/2.AD1+3o[YX2eR0Z^!aM'a5VAR=a%EfX<Rt:b#*"<9RaLI8H<S>G%\F;#&K=VO;d!/g9.8YN_MVsMpl0A-]!d3:G6NB%I
%*CP()X`OPMCBD.4+Q,.k4b-0W_(-G.dg^^Af[a1LoQ0g`-Z7Aea@Q\e3Irbh!WUKn0=AU9e$o#nC%+S$hG8`NAA=G,/1QDX9*rU#
%6ifM8_\uGV9qJ3),mg9Tnf\'(5U;V1AlqX!=osE>a@Z!P!c6l]HS26S;n@r]>nE)*SoV&W5p0LeiELod/"N3mCp50@!3./lC.'#O
%2A$_%JZKpL\^8YAi:73B5d<k1ZcR=n>hT?q6BZuW#[EW^eck&uM]?\Sa,h4s\DY[^C^Ysp\=P#:[Lah[ptZN[RCHAcl&pgp"gN6(
%?J-V2)g?6S*$JQ7dYQV>+KT<mL$j3%4elm&N_\Ta-.e*_iolIo<;O0g0"&L]_PQ<9`*pHt'TeT_E$A$1R)&kfd8hG">c:SI$.n-f
%1g!dr5@CF<E4k]*4gtdR33h-]7*u6<&1X"N:a2"M\#eNd!6)5IM)I;O1tWkU$p8%5$O>8p+jc=?(,F=J'5^\gg%3Pr/i1c2D+IAo
%>Z'<C$3iGpj>DqEd=O$<%C?]`H=jOZ!7s7OB&iBciYIU@RShl%i-GiOJ1"p<KE@8o!tlL?Qg"lL-m1<B'.n2#bMn$_DQR)'G6lF&
%(AmJgi$G&<k5-dPkjU_TJW_4<A,Sg9>UmnU$F_"b^)#=oBg%3gJIf_f#6e^j,CkPJ=PFurA&)tJPGs26$=OD&KEBNLp%&[cXee+B
%#O1Ks".Kkc-$>2-dYt'RQ1hAB5oGIg0VQ_FP[Wsi#;(Rs7[?_qUY!pQ^BC\cl0ABl577SPM,ISml\]oboFbm=4^1=C0U>BeC$8Ig
%TQNc6Oq/Ds.r\LPm7<K5F2^1^T!h2"GVi7)g_uF-95PCNO/(76hDUc]MOQ.AC^RAYU/eIM6],&dh&1fo%Td!tHq+EG5n+)9?TH2Z
%"?I(>W9>0iNid5_8cpQg$F3DJOr;X:Q5-9tXMCg#7X-Y=X%ACZ&BN,^Ga*u=3f%3UR,HS=D+\.`K5%#aY&=K$fVV$kSZe=43d.4,
%M4[8q<1F<\ng0lLiB%Yp/I+TN9d*Z6SjKr'WT^hqdMhIk"m\c5Sj9GF_+^1NGb%SW1^("?L_!E'm[VA6%V8q_TmGc@CgIqOTH+1-
%Oc=mfVDB;@?9%SYs3KQ6oidM(=*j<;b^[](;G^9MGP=UMl7mhj,d>76UlkghJ4^.c9K1>u?Lb./*]qY-40u5m:6QZR+MgfVmh=[=
%(N[2>>@s?WK]"Knn@bH$#TH,pmui8]5)(RN'TTha.%.L^In9CDMSJo]KbT$#`(pT&,_T`-OjU-ADSJfr5"6Vln9g\A$IFVKjLkKu
%*f;WV4s5aXTuh(m7aOd3R5/oi2,t8CD#ZY);$CtmrIlZQ4o01@Yp$,Lf[P)D9_6\hRBe)X8mES)Eg>=lda<%%9rX](T4:V7UKUo?
%OVKQIK`rr=)7rA_HlE.7@$ZiEg>Ph_ZhEl)^f`$s4;%@MC!/<p?rBuM'iSOcWgG!ga0_li?(2HTZ)Ts5*^rkU^^r)Jh?O%;/G7gc
%rM?BH;(t!`pq!fQfc%"t*E7h,n1W,f[TF?9#0^d^E&1LbB:LGYgr)1LE*-R?=QcR%)euD)-[gAg"fEl?^a-Hm$7F\BVbD'7Le3dq
%PZ\W!ho2$I6Xb[Z$?E#64N42o;`=.Q*;Ta0&,f(c*C'pZ!h'Wg`*CI7iuhpFEag)*H7_]"/jEUoSMBM<!8QM\,a.1r0H]pq/*@0\
%/"m&(LOM`3UD&a,4\17""C536c'LBX%7O8$OZcXTQ,"Xs^cr/NWU-n275_t!%ie`2*'c#>^Z06SK4#DV*JuAkH3>jC/9B5f/n36c
%7D-r<l!d.ei<#+$IhKEinplE@8:JK<7\W,PSqR$+\5sU'*!bYd"Rs_PX(7SHhFQgYRpCC65f(AZ77t:KE)PAXF>N=LSH]hE9uQJ!
%Oa_OGZ-dj;k8.%+M(k%%VQu@N.+nWIi$K(Te)Q9j]H]IFZ6,EpjiaB`-$h?RNe1i*G]Mk1UXl/mA/7uFs+.k.E%,<4'Y-8FR@c-j
%=\d"tj=OW2TBu)k`@dFb"s1cY>0=!)3rffH6q!%FT>nKB23&c'Rd:56g#iUqs,^VdpP3;<W:^nDWR.9XF_'G^"m:"A,q^Wbm$mY*
%.(6."=RQ6@Okr*b0[&9jWW@5"MCUhk(WIIbHfcR`^gXWq_!pr=L1BB?]dLu<&EHpMX`LudJ-\O6h1$DQiFYthZ4Ma`^PC.)U(l6"
%.8nV8CckKlajBDja=>KJMf\tsmdf?M\IB'jHh@nf#94i&?/r$9Fsm'J,#*?Ll>D?)5c-`:\*diX34!V.iJWQ6,l$"YoYiap$A,VM
%LX:%#IWLGRVcAj4>U'+udIA$eQfq95/*]=]RX=WLq[8\T+82oh@"tkFWKk%$rKQ:a7$j-P#;.u4'(E8%o0`(K`.pQ;VKVSM\4U=n
%R2p2F#`[e>%L)*W[A-qMK?[kH;Da9,kOut3i,8tMLg+p*,ooL1T;u-p"='05`b#)/><@E=5^J1RkiCqH@2nd%]#U^/'<)!@qpi=g
%&]PsU#$]CSPGMl&<mBs"l*GgcY179uY8'oYcJdKk^?CK4<)#@K6JVX`Y=9#RaL#nlJ5.gq!3jY_[@0?J`.epH<n,L:GdYb)B;oGE
%]Le5>&B/Z93g_ipi`u8)s'&=:XTbkT68q.@E",/=W3\W=Pp]r)mDV4qU@88FJj\HiL%DnLk9B%A@fhf7=+lI5CM@B#lJ_#(`NF%i
%Tp./5_P7sWMRY<B[`&"tQS>qd-3t+s^a3ITcreqd=4[?"HKC#W23hAZU_24@5a#D8&(X&08C'H921q$Z2.J*B[A+niWB\qq!dg2A
%3u!rWO!nHPo,sd(!#o%95q7bSGUr$QNPr@%cP4I;^L&7fM63@.(mDXDAIaRJ'%YrOlYCuf4]E7,CP\hkRTM":dWn6:("+[#A<Tj9
%224ed[=q1(I$AA-dL*pT?oT]@([hI@ZJu"[m"1t[WUt>ieSG:#p-:uD3E/fJ7@]hu5?#!'KhQK(Z=j6MV%oU1>L=_Z7@^AoC'F7h
%:X=B63X&G:5*^_R+HorYI,cnH&)k]Q$(nkRDd]TWB#I^d_:u.O<)<6firRoNDU!j`RX^[F08M1(.3ThQGW_UgRi/AfiJ4)NMr9^X
%rjLg]'liY4eNi#_j"MZ?FsYV5Je6=<N`ec[%8V_k^I<9+,(2St48(N9,`YhqiAMAHSTDeDJ;5\<",Og;B2d@MM<FI4Oq4mmSi0"+
%.&onPNjl3OnUN6lcMNdE>-cLcaP25_:l]W+BX*,9&9k4I/i#mP@_s1r_P05G:fTMt9eC)=;Bj-8YT1I(\&1'**RZKOq-<\5UeQOS
%!Id=X2M9`tj;-u<@=Cr.>E&U//-K)t!P60QC_YniKZ-4[-*H;%.(1$eR[dM<;(`/gq*nuC,)E*@cO"WdZ_PD(*$RPibL_?2Y/hf/
%&so?PUM)`"P<+kuC8$i%(7Ebca's;.AjO8_LnIIh?XcZ*&OOa^@V]HmX<@d]4q>WYF_Bn.2%hB7<qje&Sc8Lnkddo]r6=,JpkSnH
%ep[[]4A#ui9Kl2Am\UOc0`58*cZ^hpp?*6ArDmt=b?nugnS8>h/hX^M-i(BQ9W3R0Z6_.QnbtmQNH;E8e__qfEl^Wl`dO1;H1!-[
%_uIVRrQX7"bJ3u8fDk\C+9))Ns5Q?B\,Z:Xs5QIaInQ,g73VNt@F:u^T#ZUOC:#MMs8LuLeY48rpFt[60?Dq0%ol'.)K-o&E2q?9
%pr\YqD`\s+B>7cP*[[YYMtGtU""*4jSh8C7n_k!Cnn`:)M]DU9[Q",>5O8k#>WYqONk'.g?X<&0Pii#i1u.ppggss)H6Gui8K\`m
%]+_QU>auI/?V7<@EZlS'\R:ME!"+:%a%[nH^QS$&qYYH>^T`qEcP8LK;m(I%:J[daVe`9=,<CB2]Q6&fJkRnT/eqaf>&kOY[,08=
%"#XBF6=VUtQ)(R$r#14o-I!W]jOl4I0;'^Hf$]<pGBJe(FAa)CP$=e[Q-jNUF36a'2:5KrXpHA[3YRc@.ji=Fl'&$ZqtX)]P>.N#
%:)RkL(PNhB5+'aHY:\(L3oQYSB_)#\4F&E1=QdHun;C(rc+:dJqI6$<SSaAts,<EO@pnnICGmM?GE,MuPMdL)>0JSK\AE7CV.+\f
%p:)15q:S]KBn]=q0EF53Qg[n7'eEAKlOPhiBD[u^6m=:[$FJc\%S5hLqkE#*or6W]?2>.JLS"@C!PTSl0CO_GZl]$(L#cL^P:Zg%
%.?Tam6G^ecqP]-!3qQ^Z6hT.I6Be%.p@DW%ETsYBqa/]kD`q4TQ$htWmlhSB<\^=TDN-oD;(Qe\Q!Z/*3#n@m0(*Kupj*`Lk'br\
%$#[\&Q_#Q8!8FQnGk/TC?Ap)f2EE[OZtYT[`F@&g15Y2/>nlt7*`KM6iZ!r,YnZ)Dm'dejL[C*Dro"H[XNCMMHN#-J8n&kA?m=nt
%nsfZTS(11V_`c&1I)/QC!=CD&TV4\Hf_gREG?SA/7-#q?n:'2h@ToZi"UK*G10J/7&ojZP89RtaFai=g>@^\Jj<JH_<[3VJ,]._n
%*FW"roM*G5UkDL4lAKY\`\ECE[^Qd.YI[,/gf%^?%I3IN%'s.1P2p0H6Zi@BRrhHEj)N;mbDH/fb8)KrOqc<,&!PcaWL<p^"Ih9s
%75DuT8OG]fSiTQ[D5TNG3*(Vp2[?T:UDMkWZ_`Gm+.#scCIMCJ1C-u6;=]'JE)VBg=4t3'Be>fb2;t)K3r!GX6d^6M1QOg"nD6O=
%7`l3J"4?AKKW#H=d?l(P[\s>d.mCY<#M1;m\e:fY'E-UJPsO*ZIgEP:l$4rb<mT[(M>m(U]#<PY!f7$oI>h]?Ne`jXXEGnBaGT!X
%FIW&G0;\@KA(KO"f(Z"cMUh9R_bpu.*^ETb^,8.aC7Wh7:8HcO82^?2lW#8ZOn`/^@:_&__%VEj>>dbXOfB8c2H$X6%(""_d1HDs
%qhM0OZb6,[_?/O?f3K:jGU6p\TWH,`83/"gK>Mk=7B+$a(N%+M6Pj%9WmJ:e;3B?6=)-1!cT[c;:Vj/QD&#>(25iBA6\Xa4m5WN2
%*^=qn`r8@UT'C))%rjV]qedcZOSV-hE@T&+02\oXB8:#0?0cs\fIGQWl2,25B29RTS6:Y#F,bh3_nALD;P=@%%gKu6VD/d$.6\QA
%=/`GromSFrLX?eDfBEmlm#aKecIe`#2\YQ<e:`iff!&#_5ZV%$J[UN]ZUeptP+QMteKOljH;nUaUBERb[)VngjL_'eOo+kI@sjsI
%iWZMT&VGFH8.72P4's%M:_@*\?_-EG?5%7R4Q5n\kPC_KC"*'[I3XJ`;Ft]rGt0>poHjHP!Z3XtIK\cC<]!uVh(q="-'fVfgaoQQ
%QGsMl#5Gu-2sFrs,m!TYIpER`Z//df,TZ7L@k=7roY%R&a*iVo3Rt,r%O"?+fW7"IN]?pr+TVXTAsS46L-]Dk&d<s$"/+00Z#j4>
%`Cr:I;L_mVnu;ur]:\_Wgg54=mVsgIe*^^q]/H:!2ZqDFJZcf]MWOQ4$/\\4Yn7)WiHZl(J>?7EnIFeCm3d:1qV8S!J?=#E&Wf:7
%NY(GKAUoUAZlF:P+L/la&ptqK)*5/p8GGFVaO:K-%.?KK&pkduH@pSI^3G@f)JQ,0N]o+sl!Ht)23^:F"c\Qfd"J+_AeHV6+b983
%])U.iL7BfCo54$F;e1+J2KN7(+_CB@C-Kc4Wr'bnq:*6-24[MalhCAVc$\)>3daFuZ^uX%d["fL>rJEu'0_I]m&/+leQPMC%+*ff
%]-[E3X/cReJnWHSh[bO>l5_@.o4<.pMN"L]7o:Jl4V5jUPkP$WH:B3'&"6'S*7^A41-.nXI"A^YdAO2sFQdsYan%8r7%n.j\DL;)
%2e.4Ha\*52ppA^k)C(g<0T!/fGiuq'"PX8OL^fEAU+IN!S*R[3/M6DdPf;fQ`E0Xsr7`OoEflFuF^$.8#cLkW%C_8l2/[,EO=XM]
%,uo!eD.k%3M(YdCWRS+=e(Tg9KkLjk/k.fUR0n-%<I1FnQcWi["j>>TF<Ala+b%"Sk<ICs33/oO,6G',@IVf,K9`OSWSO"3FZ([a
%X[s_@W[]u+AHSYH[1be2A9OSC;,&m@$>]mMRirQBc=a,f(HpI#$rFBW@VTT&,>lY%4,V<#(\:6c4A</7V5g1_.rg(Ab8(2r<3kKY
%.[<9"l#hAUK7Wc,JrA!G*;iR=)]p6i;fPC+)hOHu'!<2oEAWe</L%o0Gumd!I:PhFn1[Tf;rOg`GlG.f7[_BO/")aB@m#alW7ei%
%HK(([_o':QNtanpcpiO8&+M6QkjfkK-S?up],K0sb=!sXPUIaB*(%@r3kQ[#fc4n0it:cAWRiG@*E#1V[M+VRBKeI'GFNc;O_5a^
%r*e.%J#!a#7@Mbi3lg+naHh[N<a2B,+:?DhjRdlpB;m(*WS+EoH<R5/*5YRSbO:-Br.r+a3)mI**[<jG+q\f-o'D;V-UN9EDm1,@
%SPV<UI4h>f>cHAjX8D_pA2.<kUk"/Je]hnug!144JBMl*3J;5cdC/c.$m<0h$e_Uai\+^AQ8Ml8nN0^D<7Jo7M*Fl16s,ea_pDZA
%FZ`##-CFp3OeeLmgf!-;3.._4(eF,dBtF.5Q<gk>W(&<1AXYUq4@sZn-plN%q$o`nnuk*KjYH)k@]=\2C-m?XWF.efcak\ubg]pD
%KP-OX1JHt9l!N>Kpi+TlZIZ'Z#tGUD`I3Q+<4Y8n_Ep$o_MsH<#^W&kctI6C>\1Z3kTcm`R$WkK7=!6k3=Bue6?US(W_&C"^HnMn
%2L=nU<fQ4O[BfSn;V\`+)X(e@iE3gn.QpS5Y_ruT7>ZUkTL]s+HH^Y7ZA=7D</h*)U33.Y_gp1\.NVSQV%S1<_9?Xm\aRa)V%(q%
%on,Bc6956lPO5]Ubh&iu3f??pJp?2W1-;.+ZD;F@:i]kBY`>U%&Y)Ng<_8^GAY%Lk7pmDHM[f_[(_:fBUjh`qmuehT'H\AQK\Om$
%n&_?jEGo`bmmXS^VC5A_._EIonA"p/s5Ulo[t"5:%tF2+5Q'tW^AR6]s7u]oO+662J,A2S^"mLFM*N4B<@$f+<4h@qI.jIWMdq,g
%O2gL+%[3hJ5gY>+Li^9SecbnLXUe/Y;+/g0.Y+Cu0Cl+6EWk0ALusBuVNRGTcZ#+FKWZ7e%GWBS'bH-nP"+#+7o?h;]XUK5U*S-o
%lPL6[U*="Q9M%L,)!m#*+8`cNqJC$-2`tjlS?oi*Qp@s5Pa6ob=iF8'QcHk@b%5"4;o^udHCA.0(J0#F*2]"VEE#`XC(a;U`bEV[
%ZXjS7BnHHhS0E+T!2?GJmjp)0fl(WZ':1dl4R+&EYW23)<"*^cD(7"\kcU>6Y#G2?P+moHbUD&8e=>0ZV9<"H)$d0`VFV=L\?(_*
%dV's&!nJ&G#_AFqIc?P=9<DqnAn@'fT;UCDI[ZrY/2;cla!=AKV7[itBTfBI7nb%[\/OUC^h^@E#s>VHr]20cfnLIk'LM,-93@[W
%re6SuQVb7n]\^Q@CHIMVKgVAZTM.4.Z0H.^,a/7<Z&3dlor$%&Vl18+i%Bq0FnpSF%^>4m&Y`_`lLK0hQn*^VeM&LP,>cT^Raj)Y
%F-sn2'i.d2!]CKj(OB(3H(aj>LalZEffZP`aXM$W^.!d'iZ9f?+tM9;Z<odjK1pKF,B-f11lA>n"PMfsNb$_]XHM(t/1jgLIZF7N
%q]SO%:Y/;M0p(\H7lF1)q16m8L@pAO/BA8F<3p!SR&4:VOtIqFqBNh!)"aW#M2Xe\A5&Z9_K&GH@d@?daVaY<C;js>i>eiuM`U!]
%jAKc[\LE]ZmS2<5+_*(C&?]/?QA!=lj3=LEOE6HM1Kj@uH#IodCK[cXV-0b!X[aMp!MQLU-6u%!LIE2J9g[Q@borU,,^6cZ"i3]%
%W$<Y=Il#I6Y'?N7PkGrf+@U9neb7is6;7Q0^+,C,9W)'*[-3]fWFh91=8Vb9<=u3&ZbWE[Q;MWB#D]<M%E@-qJL;+q0^tcH(4HEj
%1-Sk=H65/<)0DB(?qVl[MRT_aJZA\/XOk,TrgX#R(0&F_k%sg\KF6f*-j`^Y/\\T1OpZ;USle6eh_]I:Q:_AG)Z.Or5&!^g'qGoF
%_;rH9OfGN/OL.]S&r.b67+V^LX5eIg3f%_gX#GjCAs+YRMKpIcp8%iYXHq4'\35G^L9q>NNpA+/0kM3N0JXT<c'IHK6_.iVJE`DB
%b/XQO:o[k35R:.([nI6l`?>8e)1+47plTNMH6?gm[QgI9iHQ9q[#YcUr]kd$D0L91qW+r'P><TZY&irM`%&dOgkLAD;LT0(.5FZI
%!eA?pS0HZZXbR3-b?!e_k3[4pp2810RNTWESV3/+/gQ>fn(d`M4iOn!<E[G$dS=o\=6]i%:Y^Wf\Z0G<eXo*sjr7IKc`6n>N18h^
%J0CC&DWVc6mCq[IHlUUR4t,XiCu_5AU;.#o$A!oU)Zh?(D?G&rbne\8-:[d]P5-.en8G61Xlh]M^WrW,@V][Ac*NG2aJ=b>:@h?D
%M"Kmfa_=fJd']*J+7L7R>J3&)W$mYZ+'0PD;F7oj^f)X=CgfZ4[:2LV))V@GlH)n87m01='s:#_VKEfs2cg8cP3*<I'EQiEP9pk6
%:=sGQHr0h',:h'U;qeNJq913"o6p6)f1nO8^+8cW;j<h[O`W#FL.MU8V)1Qf8.a;kb!I*&3g=DcHn+Q,V):4@fX0$PbCT(!D7XoD
%lon+3gp*Bg&15LgI&!OD&t_4!D9dR)kNNqCWYXD1pqFYT;o]o-no=+\HW^b?q\p#8(j4T!pjUT=BX-fDS5&-TS^hp3j[:QJ(KYA%
%YhjAlRk1nF[KqbK'bqc;:RA64RA.9QqQ2&:MA45WGDZ\uYoAB]B5G!O_L49@Q,,1s.A<UEk@UKuX5@-[;gnPJml[$1U6nh9\0Pb4
%Y<I0JIAel:I<)iAlSU%p.>SJG*tZX92Mo%_5).g,6l5+AZW@2\kZtYuI;GsJn2dQ9M!pt[ifin\HKPT2<';4pHC1R'4/(1a:V#gr
%7kJq+luq0r>^#6p42eT<aik[d\5.=VP$M\#MpPl>)]9ESR_i<G"Lk1WjkOVVpJ=^?L\T_I!4"k6<<gp6@L`BhlRpKt$CAL*Ni?Im
%q'@0Oq+'^#ITQUqLdGi,WH8*"D/Id=Vi2U<>5NlmC/6Ad`O<akf8)YK-h;G6mlUc!#IsE0jH=,G54t8(ZL&U=fcWMM?B<=(OAE,l
%E3\Pq@<l#,T^#=][\opg$klSg'ab%<Pg\8(E!DuF8+H%Ibk0l9ptg8teGX>S$mQKSSon<ihar^*5400994kTC=saNUFod!t0,pUn
%<bWMXU7RA:5dD]>&en+j'R(uYiPpj--e,oK?6fLEA;K]f$1PiZ3$+W`J'<II!$Eg]DKU,d2d&B1232H8Mf+-H#2*c.&3InPGNDi.
%rDSX05>7(oCn5cIk@[j+q(C%4M_T&*(cfiXQco`lFTHh'"K#!FX&uDsMfNoGP1%HqJLG7kZ^+'991XE3:@hEsE[k7oP34d1o%k0D
%WI\S!30bnZQVn^k)7AU^p1Yti[iWYX\cZeL9OQ\#FkcWEMV,C!@H:P1[I56J^Nql9A!=!MW)nTho#4oGmsTE9pO]*Rp0$:%PS1!o
%C\a`$\ec&d+kB(A3$7D&MsN(`$HiusAS63U[dLC"cL*:sR4,CebO.!J)(HT7Zb+E-bAg2D6K_YiQb95?f2NEj>BY4Ie4COmS_]!+
%^)2?>bO.\E?fc'0g"cfpC,LkoZFfD>W$Kq=\]`=KA`o32V6a`JJh6<MXu^a+#iM<0KhjolA[6K"GJSa>KZ2Zeh5+"sj^`8N?!8C^
%-P^iGGKFDqemp.P(Jt_5YhtVU$V*rucVEm\H$%1041Vsk.?r;>j=\;Y_!k+e/hX*">ku\5/pR+_DD/?.C@J:jq+gA+.FsK:YN5+L
%V7!Vl\)]0TGLp8b:F(/1s-MHjHqWn!IO<I-qD,TCan^eKmn3"?,W*H)gmr>n\)BoPd:df0SQ+Feh+:nR=JDtZ/hN*-@e`R`:@[6l
%7DG%uPk`I#pJrQMX/[8hW85q74A`;57s]AWo&Yk?e%69^*p88ql!:*13S>,2h+?a/gLOr@-Q1XZj$'c\)RB+dcL*HNY!gu=mS;.<
%kkV^K0)_='Rf/B(AO6p*Ed)\.diNei7s9*ULJiUIG8E>BA-+j']8k^0n<VnlB6DLZ8>7o[&RCD=$/Qs4gbN1]GdYTAL[[q*Wlq]c
%Qoi-r<(`m0gEXVZ*Y*%m1VE!iHl.bU).&>V=:8GGGj0)#EuDG$00N6KA7Ut`eL=`-N'7le3iumbQ/L2lQLVTY]<k0J@edIrGF,gB
%9=j5/;'rI6^Cn0eNnBk.AU'Qq_f&A`1;$9PHEH(&]M!*&lNZKAOr'ZKP\n-t]M$K4Jq<86mh1>aZK&D>0.K'*fY<T^W9i67M0G-W
%ai3jQ8Fip:T;lCK9Ca\mb+%^_jAd:A0n3J#hISkE1<7#Jof.RE3F;DJG3XS?GaD6F3pjBrmt*!_(o&!0?J76&DTGd&H$+OkSaMg)
%>m*6KLYPI-H4a`GPrm+bjCA3;8FicNO:r"_*3X\jQ*BY?j$e'g60+<k7H@ADH]D/<'Hbada/eeh,06\smh58;mG.*&GF\LYaY82)
%GWB'/+$3jB3SpSBIOV!=;kjB:3$NUA,VPm%ogcqM*_7<&".>2qmkV6E4j2$9e^`T?j^!cCq`>j%?;9$"iIs`hSPA/$E`\QnhsKcI
%A9mj`j`nb0jd![A!:MM_b>5`7H"VE1!f,UcaR\n*p#(7\k,#=\;u=:URMRj6eKf:8H*Ml0PnI>9?F=:8rm;t89Cm:;.po)tl/k/4
%"hW3q$]dSe_^j!4T'srKgsWi+>LOkSd_*bCmgkI1mo!PtV[nh>07(BTD5CI*(TCI!7@KQ9A#O+aQ0)@?P#OlUe%A?$9Z8l-BjOb5
%&m*%8c+AenA;/laRWjTT,Y,:IBjR6f\ZGUuk?T:8/2>)6k?ZH,3)po3hBe5&I!B1I0bTPDg[CHij`a;WIePBHdWt%/hH=/J:tP`4
%jlM=nV"sa90DDdlJ_dZFMqo`>Jh,$V=Rb[QCh.h%m^k8?[k'1uJ`spg8R>O-q84Gr9:9Qq(\"!T7:Ia1H]!$0RT;lJ4iJp5A(3KJ
%9(=[L_aeXCGV,qh0Qr=T;UIqh;nSD;&NipJf>^Jn/5)8(8*/ep`QQ'AF*,au,'?,t/'#9/"gm\Za/^R+Lj$u31731YM-#_(gF#(g
%[WB*_dL[GhcLJ3/]d^"1bOMn/CFJ7ibOK?!%.3AOj$!@eF0TMVs-2R*=0950nS0S2Zi-$Ge^eP3=[n8bd=A7UOlBYU-]tjIV0J?1
%nW56>bK7lc*PPFa*3iIYA:8ZZQa<'u_g>2L,+Xi7N>/Rd1GRus.GgoWj-8mTa1KhY,fL:<NYfBl%.rCJ?E'd/iqnu$7FZ]0h3,EA
%=45oN9Ca^kPe*<-Or%\5*%9W7?<am/r+[U);5S5cG>Ic^oe75FH<68r5;1=Rlm+6a?2W/)P.\u7G*1)+8RChCk#BZ%noE8+&I2T5
%hPE\A@jd*,--'l^:%CjGEhc?aATsGaGs:8>o'Ek/Vssht/FQeAk-'m-jZ73%K>/dZQR]dS*+pRCRG"FjUFXI0r3&Y75E`ZaEM=7t
%OlSs2k.$Ht0<9$0>,6BT</"(b.GeWhHDi<iGU9@/TV<.(6oG]r3SpU(n4p\[EkL\ffX:u_P#k,(XehTLI53PG)qF#jV_fV-[$/.c
%ef'AH-$^e7E8sR]8mNDpZQ;\EY3sd4$4u,jnfhq*`p=s(,.%#M=^Hpdb4nO!U;,3<rC*.kl)6Bj+/O6[C"`!AS`bFlIIB:L:`Vr!
%qo\N)c2-/FYS+XJZ;Q&1lBLL$6hQW:obiTmg6&Np,9>'pN6Wo]1O#R;ah"[,RG*MSV:t_\\I9d1H#5`kCiC\HQg,*0m62/rHq,hA
%49?gTQN/a1qX@&J^AZc0SkT:A228R2]UWpu281A_Od0E^F2Go5cN6`OM-_(=Bu:-uU=ZPahnD]nH>TL>^p>N>M^Xu/@:soD%e+na
%ll>e<+Rgu1X",Z:[-UQ[U<Qa3f0uDMOW0NlM-bAOS80MN,14$Pk!j$W>G;r,C'D!9][jn+iC':3aU$dL$Aq``@Ee.%n'\@4OlY;C
%?<IA1LLoXoh.tY7fZ<[DM_)hmmtk@n5$iEU*f45%\IG.$kiL@&mG+m#]hcZChNP/G?2%$rNaKs!\NA9@F/g_>/(:Q7T'bo9oZGL[
%a/_lek+*>Y?_i!&jEf]i2Q8.l\9rN?37[n:JF>T&0HqHrG>%UL6e(Onl&k7"g<0t=.+RX!W*WQqZ7Tgdop4k(JsaILr$0\69emEY
%]i)Oa+T93Kl?tG+pRVIf3JIL<;n]agS+D2nla>t__Ce`h=#RX<nlr9KeorA[GH)Hf7%\\'=#<8h,htQ>AEcO_=*MY8!E<!t=&-K4
%lCI0.dK6HCaRj3p)d@O0oP,LkDFboo>ig@O_6Gf0:F>2:YB9=<3Y]&&YOtMJn(=UG.A508>c1Q)*09>KO'Jlkla.hWOmA:oklQK-
%Y#kVEOi!M3f;hPM%:-,AmumeOs!l\0/SGLR%(!;jIP?Z`CAoP1P,NiH+M<P3G)Z##N=R,ZE@R.^,qA$H12t/`%"0fna)mRbNb1%(
%.HHZS38tVT]b2=r<nD4h&$].d4g<=c,&*GO[Kj4!E9%6lc.?$&U+`AmNZ*ridP2u&SIR%iW>E9:pWpHCYBebrdlb=2`p]Il8+e_"
%)lf\rY8#&WAU!2-e0<"S*5F=cLriIX-j(a+E@>UJ%Lde;o8^XXp()ZKci7]->t(!YMuVVXd0E]:SJOK`WM&_Xn2!b2,TK>eoI4^X
%=@rl6X^q8RY3MXnII,;;4!cS`d,Xag\"fj1(4^DM13NVL(oE*#pQrYoa(#I:CC2OPK@WV/H/eh`UPNt0;U(uHAJO)Ko<aDK'Z]-:
%<]JN*TAojG;srm1rp`5QV[bkP\k*B`;>Juq6b-s5)^b.RPBDaRD%Ra)b3tbN"\.$nPP9'qa+o*lgJUsG';T]_T9&nUBDGLcVr(dQ
%?E9@5jr[mJ.u/EqZL*_oKd7tZ)R+NDa5<?9lL',thuOBW]7o$qVEo4co7e2nd_qih7"8fLc^@?mWbt%#qb4L$O)QM7)4H4(ga>"a
%qJuN3Y;'D!GtSY?rZjt`!QNJUql<NJX(CHMkS0c28fdo:)H(_/<*ul//tUnI2pZp(:ZhIY[=fPemVM<$`nb#3P'!s_@bb+R:JSs1
%+b`:]<'?qHA"@CrqpfcFIGCi;mYe_tnYje2?StC\CQ@qA7qUsh(0RoIa#@HPLIqO;PGc.\R(mj7s10TV1+2+#J)jtuQ@d2VqV[N9
%F17@,+rE2I"+<Es8h(a5j>2EQ&uVMk5Vl2,Bj1B,\NaF`=+j\[R%Ya2=Ls8iMh_Te.@r$RaZlA%0Q`m_[0S/OW$^OD8sENDAa&p@
%*mp+pg.Y"ko9AhWR'/]Z]*c^TO6k"10l>`-F<2Oh6\eH#KP27;+s:m,<Y[Xj".p"CT<4/>^G8psoGRS%%&l(0oHo'8mE/RnGZCO2
%B.N]JRq^'>nn)da$2@$.+XL3q^SOa[qtObq6qON[d3gZJMr5^n#VR$<7Ma7;%PL\gQQQ2$]^L7?q^jWFn(.&GpL[@hf`GEqQ/"Do
%!u12RRo-kpAdnRe1HjrqBG$B"/soKF]1jjsW\nTS2jW@pOM]mc$a#:XOUWRH?12"olEU579(d=6Z^WjhW;B$7P<mJGT>4*WDX;F_
%3cS0cKq/\qCJ/"tpZFJo<qh*]$Tj3<*lP"Tpr1AE2u[lh#O4RrP]QLI)tZ[Z%q_rT)#:Dl?o9FeY%:ZB:j$\UYi<#sV$hrVX/e:!
%h*l)\*0T0W3X9$e>M<Sch[.:"fXmLiVhX5e6;F')WC'7UmNedcVYO[ok3-R7$n!RhnNg^(h1X;=kd:2"ROt,D!mU)j"pne`BNeT)
%'K_T6k[IK6DB+oA+T1<Lk2%VM&[lC4Bs\f7T_^r2;==N86H"T7NsiJhT<4bcA(s9p/Mn($M/m$lO$s9P-`bfD1b)D^piqcZA%?71
%YTsO3V#Dm?Kq'TIBmG#)`4g9')Vh[tkVJZ:T$G&D5FArM[!>Ye2`C)CX.#a1mAf,A?gZ]Z#-XSdOUafX0_?h7n\bHu"N06slKk&@
%9r%o)72)AbZTK*bR[p_'E$*4NYZX"J:`<I:W\2koF6;NgXR-:EZf=sM0O60)6;u;9O%]d?=fOkH,44"Ub*qaQ^I@E^4r1cem70a3
%52"Lo[U(1me>0>VE=EqR4M^H*H?A`ZV4;W:BA[%Xk]b@qH@&]H&"T!7.'6QhVP1179#FXPo]*$C<aU!un!/jbjWYLoXf@q>At]?'
%k-aifV#64[CP)G`$d`>M:[UnB[a[REihm6oZg*76iO%\K>PN<q]A#"3_qC]Vc8',<fh!E'2ZU,1/qf<!Ai+UT;WaN6Q#4&DU?i>_
%7po^TKX(i:@-UYprF6!B,:/l1qh(1rdGA`=4bXe860/@U)W#/Yhnf@R!Vm.5@S)@F&GFW2lYsHT]/EiualO.BIF%1-e0QT%icR;_
%YSR(6[QIu\:<FA^5S"`/7rR,;k?/uO0>_Muib\&*K^Pj,ZYMpi0H*pZM'T&2Fp8kF&(=)-@9r;>o5CEgr`s6!oN$<tVqRpD.r(,M
%)B%O%gINUUkNu5ko:C\`PJK(ls1opuATD*?!!D<1!Y/6_D4uU'EdDnN"j(Gu_c]0/oE!67ou64NHEbN@;OomJ^#+k7S^N?O.1<p(
%\+@HT6Zh<UpZM]G\e.#?cn@q,WruioQQ8q'+*`)7M7WZ3ro$\e+l+<[-@->^Omh(Q:Hmi<&?<<)`Bc^VZ2C5X3p=+#]9"LL=cqm[
%-F!O$XAjQ=8>6M0XM;K2%V>Z8m0IB2gbJ)W8'XKE9RUD(d2-0]9aBnP_fJf[^UYG1'CGP:QIo*.oF!^@a5a*/Qr5*ZHS:LTQp&5X
%qY6$8EDO;-2OGl\pOnnp0R;cT#.XMDK:>UU7e!@ApUQcJ;FSKd"Z1'%I'2nIKJ0AfTFI>9#f4\XG(M01?l%+<oCNpQ?96n75Rqr(
%`;k6@PWs(Vo(q7kB^j[K[\V-%V,ut;%7RpcmT+=kMDE$Gl^Di[\o`6`ZP#d/?!ZLq#O9f+?&cmn/l<N&(kUZ0@\=E?"nkQb#j^c)
%obB^V4QCq"=.R=l:dl_JhP%-G37Y#gEmBU>-Ta%WKd6i``5-ilKg38WA(fDo]ssQ/IELMuEuV&*1t.*INQ]5k*:?TlJI!;QCGfCK
%Nf$Nu`lAOsKX$;oDA>MZ'P]Fu&'E1m`A4*oPm+rI_J#+g09Si:St:86>CXP+WCCa)4K1[Tf<l?.cGm9`nrl7cfDYOBGE9-#M5L@k
%e2NSkaKLUi=-pPS5+IPS&Jo-SJj!=^>Z\s-23VBR$?DY(R@F)$Wn"DPWHV:MIs.p,Qrdo2iTI*@qts2jdjqp+Y;?=fd(?UU.X;r(
%!B&WTefF-3H5!'R>Zan3E<#U[o%2"q2$P]Z;GnO(4b$(Wb(t^R3HY&Xejm<QEBXSSpWAJG@o('?%A^Du-4[nuibQ,uo:4><p1u_M
%+#Pnn<r=U/LpG\^AP\j,pVLOp<6CW*7[1Ms;o!`Idg<%ElQ7hXQ7G06d;=^ChpgO=94huB7')a',VuQq@;EZ<("P9kJUh99FA!$l
%4b,0G-9g,NS4AKHl,4<fR5g1kii3n(nR83i=O>pYI*b6WbSgl6Zp4[H:E'>:XoV\"A5)i?F1>#NBJg$@lJ/C2C2[*2'dt[oGd=^6
%c/qq/fM2hKLP*HP+MIMpL%fKl-?K6eXZiqAc`D)!;[h4u*L)LboaerUC@7iAB/j-<>(8M'9XXsX.$'@k8BH!jLj\/1_9A&<ioF)T
%q)C%,p=<3KU&bbJ)0oImk,1d6;`JQ.^Qsa_dPQ>?=.;l<b2Ur7q:tGA&p:>>rHERG5G#?YAZXBIdF_85#Bc$CTB+5EYr%iQlGSo-
%4OF%(PmN:=/p69h)G=0q[<On%%o02),NuL;N+,Zi219ZqI&OB&$ok8V.4WnX`8g&`N9`%;S63enP"I<[%i_^&@o_1^__hq3\t'r0
%,1hf'+@mDd;0.bP*JJM`^7i-M&d3CERO93SmVD@)r@Y+FgE,A\+=GStbdGO<:NODso3Cu"S!2OGnid5pjmP9ZG3\'rj!U5$#eV8X
%C/K\kV-(C67Ll(+2T"`OVIR/bYsS<3VikhVj+2@?.Prp?h(](rLjnY%AaC8G;6Y_GDTDRtfD`BC*H^8Aqs`b52WG3l\<'$/e^7C[
%#FR]=B[5k$CG!i&*ppgF%<%<m.&5`mLK(!L=e#OV<#(K?k='"TPZ]m:]bml?p7I[b.8#gg6PFK8]G!(BYfQ%J?AkPtUI[1%M_E7p
%T8peiff(#Mc>+R*Vk&j2S:gon>)mc(:_()(3OM1Qod#qf\DT1YHt(bSTbms7UnMgMmQ0af",PDtffMKsjpFqX6c?[+VR6hJ72/>s
%>=bH5U^,ueR$#L(4ts)M3CoD2Y(hT>02NagI1Xqj%2Y2Je_Gc"[bsC7UuYdha8e=,fTQk@80^C2%_mWWF&qJkkB_8iIEH.hSKo;l
%L+mI&e4M#I<pGf*($[cEYL=DS\VQ7rOuTej3(O3)79K0=H&GSs"HH+ff/[AIE;l"E@VH9,K8iG06I&V`drctm-&qV!D2VH5COmqT
%Cb:7BqM;p3@pge_qtag;4?=E%d?g!qH0-K))iFk\T>1)C3RU>L9DD<;-1qfYC.SuI!\slN:U/pO9/%%Gq:/G:+NfI(/AhKrd:lql
%(G\8Ips\N^'Fm>j[h(.?f48/)9lE2`[*=>p>Yfuo\^5tSU@$T0frD)#.@M.j^&6OO"$Pm+fMB]fLB/7A57!1B.Hrj9h0IDKq2Q>g
%cESTdUP27`?Z:rt5>"DXLE0E[Y`*VKXQ[(GZG^:FB!WauaP]n4hcBGX*j,PiimAG`-X<0NIanQk]5+:W%P?kWkM"__UcNH_;qYGn
%@H-WL55'D;o/i>e?i-cD^kVbET)#F8MneO5O*>VL\8d/;];WHk5U4X<4il"tV6g:6V2GY>\:QE%V*s"kJ8OM.F6fg./VW=RQEVmk
%GoZ2&ZBq=MMgO7l^aFd1DEZs^T"]Pj9'StC4sS%a$<;rRg`0NP`8M2-LZ?n'%;j3]BsMIB#hc06U"Y\O./8GoJ,!kdkQ+Q-@hpLX
%2-Ni(MPK?u*BZ2]1huneXFeV82W\Y,dBcj?X"f)Gg\n1<*];2Z7I4Ug7'NFC1h+`!&-:Ec%OFqk8oB:m=R%,>WrCt98<u.&5t/$l
%VK#6u<;:'m@Ge`iID>"M3!848[)=<Bg$(XuiZG-29Ol&0HnL:S;M9%E;'B9e+0WSA.[+W[#rBi;ES6$tqaUnLP=p,A]eotc<1=WQ
%qWCFlTUs?.DW2[2/[pS,'_QBukk<=4i!m0PTge)p+5RLs0AB1Q6&jcZ6P1;.=ZFh%;>'hZWV!OkHu^[\4%l3\mDl',EZ<X1I^eBg
%C:<i=+N8h3O8N%Cr_N9+p*mRWT?=/p-;2O`lTa&co/*&nPCI9?^lX_>br()5Ui6^_$kmaT^FLEO=LN$t#^AXGQkCKTDBhcS2ci!V
%du_Hg'G=)1_m3!)28C0j\-s.=P4i`\D7J"=8TE$!+)ofDHTH[GLdY[`%9]B0E5+n^J5l#I8s][sag+R=W+pImM\%>;8cl[ql]9"Z
%7qB-[h1;7cD'<HX\3csGLCAXKe-f5U9m^QmW>c2Jd]gX@k9e=hW08mchQ,8,q5b7)S*@J>EZ221h6P/`+"Gmc)i&HiZ;)0C<q]6?
%g@bj,oTH%FiVN=J[H/q/%_2m6L3n2#&rLL@)6\c'/u-`/hcB:,g3j%&,)regWKG`6ofeuj<bGRE=WccqatK(dLfnouS1Q&Lhd+1A
%*e9dCa\L]\iW$f]_OA:X>dggnY#8LQ_p18>qU=7`aq8k-l>.G)gf0hJpI&CRC0573[fouJRFkcY+Dk5SEB>.4R3W*OgI/<EmiJV3
%QI->7QUZ&P>9Q'>cg4JZ*]@*c8%_2X%fEQ"F'\=Y5!Q^UfPo%bEJIioY:n:+a4+ht0.m;;kPMn?LjJ\0NuV>0hZ`o%CcN0#5K3qW
%B"e0T!N>2[K;me7lZ5c.Hr+uZ+4CIf@%,)^:GY(MMQH2KN$mNZjm"AlpNFj^iLeE7Gc"RBM_o0M4lRVj\qh+pR3o"TrisOeKk(-)
%]B_\)f;ma#GO6.aI(%dY__uiVDZkWQH;M.JiXC\JdiNp]?m=Mp$HeM-X;33QJ\^5<0GlSg%\F`*mIfa1'pl,Y>Dp'#/h#V$m4S7p
%Q``IBM]XG?)4PM_qs.""$9Y<-g&"cDLdL2N4?#['[MW>G870HG]J#"Bf@mEFk-\5c$*L$*jp8Hm@doa'Ds-?d7JuI&'K>5QK#Z`U
%]IjTJV9`7/$A#7V>+&VMS.YZrqn*t3H1U>3ECfFb+I4I3[-d!e>r,=d'`/H8>uU+4Id]AL-(qMV@92%@'/C#gef63],gq"r=j?)P
%;8T7]KId&JpgI$qq!H+Nq;L$+&X^^"Oo/C[+8$IXVgs!U&*:3saYL?n8lMiKTot.`6(u.QK?4j7-q.dL2g%M^_]#XX).8FYcX;3%
%1n!dC<+@?,A-0"GKs&<+Z>S3$3Ht*/k6?mB3fT"n9?9*cJ8RXuGT<Ss7XBNpnl_bE=H;tp7GV_lL0Blr9#t0UT`@&n"PG:k,e:!H
%"I\.Bb$T%Hg@e`*SBK?&Mpi>/JYoF`18\'V/N?3'brYSd[c@H+,1`FaJ;WZfRpctE;/pOUire3VRnr+pVat)+N"K2bIIO;W7V.Xu
%7G@sn&nWI5_!Z"l<"3*@VtQ_G8l7/GTLZ>mait2@f>hof=O.,g8K]QQOBBgYDN1W2_aOH_hpr=%e>@.uE,Xi#BbS8#FCA/iW"h$!
%[*2B*:kIh#)\CGX&jhuVc8C9Ti=q73\J_buGI28g1,4LUP=b[i/FK$ZIO_Gl.r%p;'G*pJYf,Wg2_OX%+&8'R[=k_Y3OB&eS839r
%>emj)6+C$%nP?B(l;>doR[g7L#U:IX2PS*CG!J"8_@S8qDKIN@`jE0n\E)bZ<PNY,G)DQ:[@IHi=^)Pr'lokeF>qZC*g5,U5E*"@
%VOS<@:sm]da"8DSi[^qt*(RsF$M_PAg:9fu]eXET>$G)6'nkn)Bf%DZ;nW^Bb@)D&lcfkA>[`f.S\oYXgDtiS^3!'#BgFXYGL5_U
%F_cMt3Sdm'U8q)+W7s(o=3LO<F,X4JqpeJSk1(/hYEUH1p1/N<:s<MsBqV:_D_R@BIM-UkCP>]HSnEaHcML;u*O$:*L8X_+5UfGX
%bjAO&H1Q(cFLmbT?4]t7S`B&-kSl-X*-rs_9l?R:h2CW9T_WEi5pAotPOi-meQ?==>__F&T7+0781Bd-OgC$<#T#mmZo+R/p+/s6
%_I/?dPLZB9BjRb0o?[s>PUu*H7mc\3ZFtsMrolQY(DD1M\Hc8I[rId,NLs>i$I4GJTId-(=;oCG_^[Ni1c>-RRPoI)#maGLXAp(8
%:6OmD9diDHpbEf=<fC?'I0mMGoGQG'=5*r)^_bh]+ohIA`C8([4+e+!JDL"$V2%c3=@#7NNg4>='tfVA?4oYDc\[uU?CVCOQ+m^7
%-3X<^E)<\t;\2A=E7L[XV\L'-]jej77F=_fjM7M")$Sbh8ZYSOe:"5XUWocZ!>dh]H`.W:n:ZF?cq3QNOeP-RA`mjCQapBVr_5O7
%6'f#:+l@t[4&b#.46LKP)"TNaB[dW299aa+dmC:?fk0Ms##B$XE*EMt&TPu8l=f5oYD!BhP;;W+B]).KcS<Ic375@JNgZcDNTuu=
%G&JBU)"GFjZ<HEeFc8TsOp\,<9\`f?]q#75!<cAu@"fk#%D@k2X;$OKSH!$eW^J+>!n,Fc'OVXa7'H`fMjfoTTMeNrTF/t@'.Xi2
%coXP.!mO3lM*X"`qkR(r!G.W^6-=J9Pn*PK3hR,9,XWX6'YYsjG7054p7"('47sV&MU@_YWY_$b!"_P9Dq]b"G1W!4]N,'Pp_N4!
%6tL%?\l^hVE](4D0]7OT]b^AB'K+tDXuP(+6hSh6Th&lu0@-[Dp>+MhXRbsg5Ff?3G@^!.dtuYof3Uu>q(/`fSZ_ShNAPHe>(7MD
%)VhsZ[q!/mJQYWZMSd%a[2DT8;L#ru&5@c#A2a=Tr%=t&$,7F4D)g7iYo/*Y[=+FB!Of;r"f;"%$Meot$(hWS16'Z@,7#[1rRgQk
%%b9l&SLXYpPGRWXii=AfJT?/'gpJ!+*lqk41m!u4\E]!tS<ma)Q_qRBU*l[b1:>Bj4hcF@dZAcI6Rsm\3+KRVfTN-Gjr`&)oA1t!
%Zdb@5CsV1]R&.Auk`-+t,54'<9Q:_Y&H!m[k29K:S\4pTGFm+CpXS9oc,$HnL'H6^.d?*crn1M&hr!_ab7kIcR9J9<S+%USdTNaS
%pLie/mad\T$r"cZq'*Gjn6,hSA7jd=-22"[/C$W)8>)%TeRfB1.8l(u-XZRQFNq"\\o23hiRBm4MW<=[W4fu=]N"kg`@#>oC=hV[
%oM6/dqXT?D?G<34CHJ9)Bn0[f[e;B#[/YBGrT@Jbs)b7?FfGDJeUP?`s1G?2G,]s1hFLpsTW/,'(.^I.N*"UHUHU'7qMD4MAW5^;
%PE%QiOc)BS`qd)X^Rii_$U$!0#\#A:J<Iff9OpJ$M+rbNQ5`;7,]Yi%4$`J;%pN&L#f!g+PY7Ke7+FaG;?2rNBe.VKKqQ[,s)"^o
%%KQgM#1T%9pZZ'17/K:u=*l!24r/4M6sp:6kYE/kE/+//Vk.L1D[M$[&PmWqFAY^m.MR4g@Z<O!li@-oD3cCCX:PX_F=E\j7Y>gl
%,?5g^IG;*pS^T2*,*9jiVYWB]6GV=EWYgu#AIgCA(,@D5bF`C^I&peNK(ftA#!EqWTJ`#,66V%B<4o32.*ScfBd>I?l49:c=XQLY
%(=d$#O4opZmaM&7fY&bB"M?"3=)'_F#ad*gb(WgU4$kJg*BO]4jEN^8G5b)%:dE3J4Gl57&qOQu\N?`D/JK)N#>"]6MGMoJit4/?
%*"A66M^#.AL0p1i;GB?S'5`2PU<?)"<&&R*gX)REZ:kk"+b7`d3ZJ0Xi!_:@Pbud0&>2WmLN]#O"8E-_E1@;`IM_C9PNl<R[FAnl
%G,U^j#[W@.Wh)o7Ir5gr&I>ggTkISQJkD<nX?fC1Z(:%8\`"cQ6)cq@P([t7]:u<\&!BEC<9seaq@RU)j!BAV^2K1+KBi)H;b:t3
%0Zc1RJBGMf7Eoe"bn=<:Qq]3ei^oU</i594&$RL?&4<15Qrhg@D</Ws/i%Ep/pAkoe"F:IJuoH8iD9R@JZM]%#,,cE&=&d[/+=)N
%>@`L9(g;.=T6dmg`EAKVn!2!d1/&jb)'_.AjLduG<;&@3Z6Cqp!IH>HMUH$JejC0ib<bbM3ZS.LG<SX+i0$",n5B0iNO.qb[4_;/
%-ppGJZ[PkZklDKoW+@#cUXEU>8$$J=%GO\XYccnD_?sq?3#\!N3khku,*5,Q:HHHL]8-t'cMeh6&h^%\j<Z:RRot5TeG.MA$P)G7
%XC]rU_B)3%PKFQX+c0lpk@&X:8MR``p,\qCGTmg$CmB8,e7F=_33j)Ni,Q\9Ub\A.8FZEX9K)qsdFOP?XnW:6&hmPLs&DB:UIC'C
%R]oo5j-Ab,cH"o0WVlWir?HU%llVdb>2+]1=c=Fb&/ostU*dR;U*DROW:e["TrR6j`=+7T]_4kF&#OZSZ$""OTQ3cY[B&Mh`@R_.
%6j:Jm,`sc\T\qW7SPC1aYQdd:8S8aLg=X[&:D;cPLWR*s3**[LRsg$3-"=Mo>QR+><siYs*1c1`e=>dp],5F!,M>DhlE4QlGN=Pt
%?Bh@V4_ndr+^.'M/1]is,'?J;AaM7/`K.oZV#6G1nZ&`6hA[9Hf'W]'9T:Vn!B'B-[;6]Ic)GbN%2WB+kYN_>6nVD+s7bcE;@^I3
%c>%DXY@=2p(*\H1OS%NN/hRJ/[usXZUSH:2]X0[X-<@Vo];aIcdo)PRLhUW#XrO8uI/S?4p^B)m`iH[XXa-J-TFiAlQ@3e.BH/PT
%2iQOaX=?`gUk&'?1K:AVp\EQ4i<r"eLU[/"rEgQ39ESEh'A4]E("#cEMg!f7W!.cT/(S1tCR8&(EMD0\CUZPn2aTnC6*:R,3YDll
%SkZ$1ieQ^(q:;"c`sc,HG8Q7lMUa>uXVA;rpI^#bArG+-ZY_9Za]@lA1l@X3%5[]NC/QlgFADj2IDR8O>Jq#9W31R)dugTJOf.a_
%M%:hZJWD&Y@/'`K%C`n,R4P!VF,(c!\@(NmUmN8OkJ=<H@ShLK#!V_7Na+'fW97g.,F0%%SH^54f@M+WF'pIS_RMG>K6fp3/YNg*
%ed:B'FTQ[kH]quX3-K8Cet$2rW^WgT%](:K)=@DqfmWO&.jaCX;MH9;J0O!\UW%[Dncha`+Dp\*LNGj5dP*)1&]W+1,AP$5QIVnV
%!/TZ]aQt0iXrN,%l*8@*`"RjGXT;;1EW$JDKu??P03r&ZI>4?`aUEYXIZs-up%5#+_cQ84X:3;$f-bc[g6_5THg17idd<)gG?f?0
%MG(Fl]lX)*4#a4PWUJVQ-R!is@.`CqYg.OeGhf0iJIU!`?4qjS@m@n;8iP8a5<Z]1]M8"%Lp8:L_918$8c,@k/]$lg7Mkela^aa'
%XcM54XCCFiHYumn@tj#HVa/2KMXe&`?,R=TWOZd1?W_8aRiEY(\86Lb)3rBq)^8[#UXs9-e1XO.m?,&LH9;WbM#d[03/:YCCfb;P
%&$IiP'"\>u@?%KFEjV0C_bT/1fIC/QXKmNF[b/+$Z2TUnC]&$[lWJc''2^/W1Q'mu,Q!qZ^lt>ah0@[mf]r6<b+l'+/sBXj=0'n>
%5$'%@,5^Y-F.:V6Zrss7ZCrt#DtOF9;=`;;4\XM&@V?N]0lU8sSk\q@B\TZ:&o4aP/U7VfB>HSs`ebalD<mkLpgd<,c,m@B1AmX$
%-m,mekeg`9;_pX#EGAres.WF**uc.m:/1VW;q&0)2%?:/86N(Y`0[#Zlj,nFjOK44X'+1tY)7V3'W3Tq,;/X1*q;9#>]ZmG/K1kM
%K]S`%JhfSY;Y'mHbVdsuc"[`T='OU2e`i,;e;.FQoqS\L7EAN?;ah5%r=>qPe3FJ_X`G8X-ghNl/%?CikaFIrJL(`C76Jsk?S*n(
%F#SI*As-c'XC>u\VO2]'V3A3F5:g3jc;_,mGp.ie>F;s8[Hm6bIc04S8oO+UH*`:tAIk+LZA8%r*e%l7kK=jJDp@85e/iM^*o<W\
%4^<Hc*o98MI4974(TcT+Xl4A)_s+9`4J/([l.=V+,8>J,'9+-D*&iC_2nI[gVF:`\)"gp-8Mc<r:)7*)XPHNB\=f3jp!pMLI[Ka$
%ORNkUb%=1sj_DdQJb?2RLoeF+H5:,JFA0!&<)hMR$SuJeB5`Nb;ii6k%FcF#;)S8L&.pN)4u"E6+;ULpj^1+c3JuhT)C-0P=_UL)
%kmD<[MJrtoG:H%,V=rliGPpu#$imVj9D[qQ[;-;7lIF%N:$*d;)ej_$".5JX>")ZDl1XC=/J[mR/5cAA3K5j,>>7'<LMHe>VYl8(
%+gp1/[U%ArDaV9pY*L+ge7bBn2I=]Sn;TeJ!P;u64hW=aM']cLFqW!^AdK;Hg0mFT-c?J.oO1F.&s^c.:]6lJ^+0.;@p4tBS_M>Q
%_.Ji1pBk>H&nqtM/HhS/$FPOWl/iEoF&S8&Rh<#cHPlf-RV3Q\ZtDo'8^LfG<:+D?7#n3A+Sdd/gZd*p3_>D@n:j:M2@20K"Ec&[
%7+&Q@bSSqSJOkrmq@"n:-Qi4Q;l'8rBuKI["=4;<Xe'A2f8#b8LY+j).2H:-Rg*E35.5L6`I(9maQsbaQm9Da#QF@Z=8p!#^ZkXp
%Y`o!\IDcSqN-V'/gJ^<CLO<9Q"D*;XWUc+V.r4TUjU-B<B<cu#1c6nedq&Aj=`r$I;DbV?CSsS)Y^n575"3Hhe-h@E2F;2Ae2pb1
%r!t*7/R@"BkM:dY&kt1hYB,PYGjdW4&FF@?.(KdEDhO":GlD>di"+2k&@[i[j_qKn4ZGm([3<s1joEa145_C9P0Hm,gq]8@(0!L2
%M%PPCfW6:9DIP_n;CFjnau3rVa1D$Qb>:^0piG:R7'j_3WBApD;&."23Vf&'m`5!DQ@B51g/9s(pQ+?VWY-$"e0K!!YqP^*%e+74
%AH]giqEV7A2?H.[M9"JaG\'k&Jb/rWH:jHs>akXehmcUlnA^V0R!!PH5]f]38u*.AN+CU!:J;r`B-UQXR0(\p-<;fOiWiG6V+@<G
%[7!uQ:Fe9,b;/5%gS8II>M@Uer`!6t[Eg5;Be!D3.KO9Xc;CVc[6/Z=>_d[^CZ@rKYe+:`jag^F>LUGY+4:2l+NMK,!54L'T`lr,
%k%POsP=^/ZFoKi!g\`"kle.1b%$;Nq,O?"6Z_GoF37GBm'46Nh'>RQPLP72qs!\+fL7<7;'UTMj.f$#.CbP^\Uur``Uo?/V73oZ+
%e"X+W6ud1jSGDq's6,ngF@k%dDUI?ELTunRRR]J5,l3$G[(Y*#@]HEjN_=?gZXp#KCd=%Xp[2d*Y-6!HQ_E;JEEFBQJ?"K1dqYHW
%D[`ID<Sa#n<HiT\ZBm&&,pJg(Oc$se<=B5J(VHQF@\i@>rTOp/.h"Ze#JUjnoACEBBiN;gL^W=7(:n`@!C2hLD?<C/8AV:idGIgJ
%C(W'U#Sd["k\u^I&Lfr`*^^0P.#lV>ac`SND?6=+QbungS"nZNIl-b>2!<VgftVql;;5Q_QZ,QllRO9s&D*e:T+K$lr`jW!^aWH,
%12_nQ29qgH12[^Z8j@/2fN*YoS^BN0@b2h[W*:J57mt`pi=llXgPT>a(*'c3cLR1ZpW"ED?+F?ETt6^bg<T$<Ja@H/AkMeZSE-\B
%)f/G;fiqfNRciO3715b)`D3H&Sc6!G37@fbBX(db-2PXTIH<?b07UP=*(E#3&Toc`qM<T%QZmNiftHh3q`fC0VqP-+GDB\s68al$
%:cj;P`/\Rh"q4oF(SqV/9%3CPQ"7VqLp<#j!iuu\FQn'Y_6TP&H]'@-+WtmhY=i!F'q;I:r(mjQH\bk2H]27*ZAaY[:Mf!rY5m-V
%6CedX(nta*O,p-N#Nep802-SFi".NKjQ#SJk8piS/J0o#>8lEb.GVKnIA-VUgDTq]?jb9CNrt-_d`]AYX&BPi+OdiT?a=JfK$u]Q
%4Sr(_fci;"i6/`bl<Eo"o:^'?07R*c>tX1u&Uda?9qi9SQ\MP%;*_YCfW/jB<'gqV&='>TKp`#^+I/[!'1A((=X=`[d5d[a'3L%t
%N'jkhM/&uPLuq9U@KsnGmr/\m66821a'e1;U!*jhIgoSgenC<Y.Ra%`=Y?')MtaLrV7cS3alE5%4`4BV>NA+6c+_XRkYR!UbB/QP
%"R4t\[%=VCAT/446o9kdTsmZLA6K=\l.-U<rsZm0^sO8tOY(meBg,f+iR]M3k-MP^T%nZR\^Y)%%rk-qH+fW\G3B8H4AF(9\O&r*
%j@fUXd?1NE=n6G*Sa09eJ5J><b!*E!&+Gmarp)$*PE))*8ID8@2,BA+b^FU!oE0s"](SbqJWoVoBXnNgp0#(TAodtUU,mC9E,Yl7
%bW3pB+&/_9RVADNG0J"(YoTVQ17_CGT=:$ZlL;4p/(9C17quJ%<D!;"[P$+ZpL/^J8npYh2%l`Lq/Xm*5=BL5kL?Hu5<LmAos[-/
%UE<^'_M54.*7Nq9p:WFp&R5.&Y,ZQsqhQJG*l%-l/@'Ipj>rf-d"-AI%hqGmHr/qM89DYb.T,p@=5?L'B6P3[`$p3S/b\$8?NeOp
%PTKui^Erc]Pps$NrH4IFdHs]9h1+&R\jUi_af)L6oV%,J]*&hWmS;@d1Fcl2P=:#t^$-oc9cGW0^*?.S-5d[*4:K'FL47dP-@.@_
%2+0++bi@dP\,gHtj9!b>_V'!nN_>MG"S8cWXQdJ[0#,dKPJ4?E[O?2eE9Ao'>P_=4ii42GV*6a!LrE"8UsH=-HAd4#8!o6RTDM8&
%'SWT1re_JuFN3ITJ>JlM\NM=7,reg5gep3S>fE[#&nq,TN+UJmdb\aP5PQ-pTbCWBo@'\\<Ss94e4I'KiXp!W74%<K\'iT?e314`
%P-Xk=.U`sH^e@:pQ3^4WLIU:&&lPeR/P!`6m!<:rOChBrFo]&K)Di[r?,5\Rk<YhgeEn]tP3Rlh_rMXW[AQj"%+Zp9k?K3K:Pi\t
%GoeUdnbXSi'Ks\_YPnD#C9cZ+B[`Jg$4oliY-q#P;$iH.h^.)$LS0OXJ.%sa^+er(jG1ZI0_/nQQJLC"@8^6%UOj//bAep&6DNL.
%4uW\KDjTU(.[+krXGR"^D(548Jm2CFdGXb/Xq;P4+An%]<DUUKHOBYYWiqXMj$=`$SK_aggbt17OEEB%gdGFE<M4CS.%2_7gTU5r
%"5@sE(7!.DON8a0Mh*-naPl;*;iY5o,P&W6-_\kB\E1N`KN+;<n:?JM.56gB?&9Gth&U?2:)j)V^3u&NgNg=^OI0VIl>9U[S`eF4
%fF>;Wb5j7E8r1`J@ob:-]O],fClV#-^R+)/VhbPAi=.#S6T!r=aIK8]ha(6*-0b,+Ekr'mbT2#b#t@SLdIM9kM_N<O#4D^`ESpPH
%e^@<@]N7Z86u01-ik=3#T,dBDT@1DU5MLNb^U_CfVMA'd-$jBWXcrSa%egF9^se4C)r;dk'1jal8+%lMoL^h<Qo.'^40%:q+(`Jr
%';Ps"e_:DIZ#*I!-Rn['\-A*+-Tg-9[[YIW.EaXJ[T[2$O[>(?eb@t\ooK3!nQ^t5PS\R!L*hqNr,TH?P!a(BY&BMgf(SO;*g;-R
%=J!9pW@&VGB)g[N@ji:rCmd)])?_r\<B9TkWjh;]&Ps4us#SnB5REQ!*,:f7p`ZmiXhoPF:JY>8>qPE0K(/&PR+rdrMA!P")]ofM
%kclD_4jV*fOQ:^7%PM?_TDV!1kZb7J*LiVZnM&YuG'<iW<`G4P>DbTPVfA.>_WGNVD$5f]/2?(aNt!j/c6$ti&>VW`4cMrgYref#
%aNqKE+E:]%V\\U6;$:\."UM0?EF2$tB:V:RS@JlT0o=8N0mk$?e]L/"?198_R=n@7YCWR>b>[FLM;A*=_Xf[DU^P!4*@=BKfSV=h
%_?Hhb-_*#==J["c85l6;X[aR0Wn5\g71C9,-s`<kfWr5W-nG*X7-`n`OdqXh?8],\3u'BgomCW=%[B?O=H#1cji^k(;NYAL<J</\
%%'W,m;WH;+Nt;UANkMPMb)*FJ1Q5;hbk.i2?6!3I_oH4^MBU0#KY-AG5;arG_=jcb"]f%-V@&EXf$]u7G<Ses[P@D?ALseAX,/./
%:NXJpW8pV-2EP>PlM0q^-CS@#E?uFF4'__OED.V)`GB,U*2k59oD?M\BI\ErRF9"l7^Uro)@)fM]`(sVO#XDF]#LO4Q0E3SK:_i*
%eIqSN3ia!e"tc-&UQVf0-2*tR5'\9EqSoF!?]%+5R!KT0FDfT7!//XB.=NstN=MtHMh$Sna^>oGYBdoNWdm"$PGF6<(4.U32lCtR
%Sq]Xn<j+QtNIb-8J]V^HC,"rcX0#K"c5\9:/3K"49[Kq`'HJA7o8^DOntr]?=]GdkOm1AOc4@qjW%TV-P2^oW$]c/nAMTH5o64Br
%=?<hD>2&_7=J5R-MS6DtDup^\KXS:W";$L3^kCuZUhCBT/*n.]q`6YULbh>-os[falS9`>-c!;*ne0;fa9bmo:BJ01qC1#%jK4]L
%Qa4g=&6W-hX^:hpq[#>=mn2V]#d=PX\-P3)dOSK'aE)51Y]L19a6>UWClE50U-u,jHN`<+$W>cEAJ6(WTnq1k%7UGM"p*@u$;QN-
%EO%73lO=>'lec$3J#E>b*ITG0Mk]oR\m`.eO3#?q5;In*c!<k4;2@XZo\@WDRQ:b.HoTXh0uY@O\;5^Y^5#P9q"T.a\=85lB^UuI
%>BR=OdN3"h^cbq.AYfY?pf9Q@M7TWQSaC.!8I12<,p6*&-Y+$a0bBbFi,0mg8_#f"^g8=-a\3kVi1^!h?jr6)#nTrj4<K:K!,nRm
%OWc=+pkf*1LppK2cHEa44F,UJ,LM8+HB-&lMLpZ"+T0>3S+)Z=0H5CR<:s6'S;FOjBsC,,KnT5!Nn4oGb;-+hb_%0C.M#:_[-H't
%VYh>Y+M,T.(Yr9tnE6\Ri6P1.^n75;J3RBF@"%_'!e`i!a#l@(@4ClAZZuE@ckTC41$U!#ME;Bb-b%Kihdb3Is7="%=Z?=Sbe!Gt
%XBRo&f$3qClh[eClhZ[2FnN55FlQ!:])HVXf&?BLLPd#b:"?])\JhFt*_PLce;o4d:I>?J4[TE@q-S#F`R]i?;%CnP`ApkFJe$ac
%K]u=CJDo%UapT])FA'@H['saGf>Sj':f%IcY4s4P@*[mNS3n=Nhu6!?XI?)^eC@qjS%\D?c-qs@g9#<LIT34#W]F+Z8b0qp$h]Fl
%L@8&SCR#kic\[2Y85=J)l(9.ZK_-,[P=FWN3ebptqB_>sO$sX/jqGsEK@,R0I1^"M0rJS*r0&f0*,=tc0.CW9VCqe5+5I4jo:j,k
%p9Hl8nGluG&kgalX.(L2a':7okC0JS\tPAoPuhO9+gqr]I2B/HXL;U9mEm/3")?J@8PsG#6mFQp;L<H`ka79d*,h$n"nZ8=815PX
%p!gYMhTtr!l+_$6/Cf2t"LP+BVQVY+Ur8.UV[IOq?Pfb:Ptm1:oF`U8Tq[NdP:BU/L.,I\V;Q9PUcI-^\Vo0A>4k;[q5'=_VUA;%
%QfPn[`oAro94B[N\1J,K^VA+3gDn0'hbM_"BCiSk/Lr(Cb58AuV=(Bq15*%a>M#_ld5=/u'HlR,V!P,-ArH"&6j'apfn&E(J<ddc
%1+jNFbJFHkU=XEjMu+;)eSX'V;HfL&mF-PUD8@XSi0=L[nbAPsfPU>!?T"K`Lht#*A6KsJ_/0*J0l=5q'GF)n*^lh!Kghht,OD]:
%Nre8]!oiF2QBa,`:Co;+;q&5LTIV$l]p&>GK.LjCjl(:g$Y`U^GGJ?XcQt6q`ci'T8_r/l@+uQr]WYbKX,D[,2"rXa6cHe;]im%Q
%WIdAGGd_Ink9(hq>j4Gg_oYruR=;Y?doU\Ln[,Q$nISTsH7X]1m,nYJf)8g8n.^R#p@&u>fco#:@:_7SVAI3>c5*:!=<G9Rgn11o
%;0)JnXg9[GqiG.Y%'LVYO7te)0tiqdn+TLuG,jHf)$T9,+nn-pS:]sjme7-7hDFM'PmX53[(on6<WTMtCM!A99>5\t,Sf46=!(.o
%$DROS776i?H0FRg+Z.RM'"hR.fG)ME[kF0W"03!Jf0pq%5lcoA7DnIKO(M`U[HYC!>8Z+jkC$W#AuD%Wr]WF%A_66Pq!BHDgJn>_
%Xh&,Z\8-!1IG$mB&,"fHZ:X%5\DKLZG,UsRIX0U+eZK4lr`nYXc-u?KS*6`phb$,JPjZ`Qp6)p>DM*4>2RdZj/t:Vi`S]N!@DCaf
%CjgUjL\L\#f[<XNH?%md/7FOVKi?NWl?:tpKG6TDMsEj(Bj;6ih;H&Jk4<TKi8q,S^%?a/<.HsF%daW/Rsn^NET)uke1Q&eiNW8b
%/[tV3Xad;&jE9GF1pliE^/<$`=V&N#_`1oNFko!"b=d/,hpc^!`f'/[(=eV/gNB8.Z1>*mlNZV=I6K9MB9Lk>j84R<2Oq)ipC6H9
%F57(jqaU"p)XDS*<;(Mt?JRSc9I'GcL`;+C<19Z?DB.eW<LLM/)[D)&Z>ZeaNPg@4^431&LXDp3#H/T>9!`2LhQEAI=K(2->WGTo
%q!F@<2E/C]LJR;)XTj5emA=V@&3AX1@T0LlD#4**DVf4@84kCl-H=X<%1G$%;LPR@B2,]d$H?+H0Im33I!FXm6F9(d-'/3b4bs:7
%+@T4MW(,=H\i@f$qG8VQYNDcE&!M?a!/g&W;[BV)!kQJi/`LY2k6)3>'71:a[W@4NQVoZHipd[cMfYQ=1]b>u5.(o+!(D]W*/kpZ
%B*B^1m4.T78SQJBpef")GAni-noUUT%cD>!UT*@ql+Xtb@Jn#F/h"iXSH81Q2Q<0\qDA)Z3[uI0Xr?ouK<A.dSAms3K")\$&(-+=
%(d`du<E9eMW6ip(:'PSs:dSo#=i=./XdGRaHV)oKa9mp"%4A/_;!Xa$9BKd920C?%&>L8d1kB#%dQDH&*Po;D^(G?XRO^!$U%XJ"
%<$dH[aH,<D$iG.le6$I[gPo2]`+A`a_7,_lqs%^P#c`"s!cB36ikmd@RoJI@;//pScoENr@T6X[KoOZd=pqf#p79drjjpjHe&9T8
%hI6fFc8H_(U;m[`m%#[G$%=k!;[I5_)/Kk#d1d.Hq2EeHh'+Iq/18CR"P"nG<t;X%HnqN_Iig-sW6>(s')1:io)UXHQdW0ni2'tp
%<R#,B`CeJ;b_Z)eA#]]&AS\>A"/(^8-t`,"`YWmC-Nm&B,VZg,1^L3&eWtHuWpuA<_OQ,r;EYF-5<ps@ST;..1Q=boN;C^N_<^7J
%f_l^8fN/u_=!$XuLeXCD@"_MfY4@S[o,]S%d[42!Iqi>;(p1-/5d2\Y"FqA$.d/_Opp?YsFSCuV6j`J9d4WG:@bqVRkTQO@0b]N)
%rB>kZNHe-3+Y(=9QQl\cW<f)(<]n`$+Ft89<8DZtoD=_'H<!3pUn;Ka/`jZ*7'^+F6=%80R@-Wh`ZH4<5IurK]t&ILaV=aH$]qo+
%eY;[0'U-q,<Xc?E?8k!7!,`B\p6'lJoXDF5,GbugA\QOAQYbbW^'h?_gb=l#J4n*7jr3M[>VLV[UVWuFdsJ>'l5Zmb_FkT*cQu&j
%9,^6JFbjOH93#LL2YeU6C4P!j\1EUcJ_nsLA$`-@j\l,MT`lo7NK8=R_?OpkjpDe%:Y)T^MM$NBF==VJ9^e#c/GQ=XeYCLdVC%(3
%2jR8/U^W:456Z=1oNb1e88R4XW'#ScL`Kc$+4Fb/<](=p(97S,=]*04j;hS[AqJp$FJagg92TGD50E:pc,Q93XJ'#as(k'WBuCGY
%([2`;)N0PVl./uG",0Y,*"LY1'^>a'.T'e)_IGm->lk1mHgS,6K0ne#7eP>\43#$g4nF$dJd!6Y93f8N`!Jp;GJie3OUAMQkI;09
%V/p=,83]$Z?A*o!1nf"]A/HG,B.Co2f^b:_/0]i"8um&.[itiQO>M^'"$Xg-TnX.lN*mT&Nu_f4`/4f)*k`<XWER]_N;#ub;k>Zd
%&ejYank[g[;q4J&&BK/%JEGr%]M80KlefId(Ub0FPX`q%;CN8"4HY*$1q<e[]1\d2m74!k\H\gdfuDPRg+/d7Q$-DMDJ-Nlekm9H
%[kuLfoLX2(0Sq0-2IGj>SpR,tV5/3We'RY=q*)$`[C3CD?.>1-k)&t8ES,!6mJ(Bd.7R-n)3:n^s+##\eOJ-rIXX>\ceHc,h(uSP
%kKQ5T8?d/26'Rqaj03CGL;V;KBZ?[ZV(DOe'6*qtmL-QHjkCHA1qDhld:%/e)'VTe'`lbD#p]=+beQ;G;La"3cMY\q,:3Z)nc[m)
%XnU?hpo8?uU_UeY%'\XW<K23>X]4(iPjn/JjpKgTd>.='-L;2\#[WX@@+\UCji(h`("LDA.72RAe!BkAWGE5F&l1Tsq,"k"?-Dop
%C*FO)6E[n3FBkP>31;[28rJKDATqqOgS]L?8F>&*bN/)RAC4u8!*70)%(>AJ`;-A5S?(Ilr+":]9[o?Z12T,U;d3E'?DI0bhmc.u
%ea)YS<#)*+iIQ<?E7+7`GfR\VW!sE_qigbm8?'<*i$W>M0IWokmCH$],mmo.<8ld^/MQB.lA%W]J=PDM#d@f5OfP2MBScabL_N\t
%;b9E+"]e:tb%8cip:5";<cjGs]\o]D+T*s<\.q`W]_>"[NeA5.[Ml_K&,5UR21)WgG8TA1>fH;1pV3f,Ik2_-U?"NY`8=m<hq*<%
%R$!u=)GNt!0feF^\jBVb,;u)Bp;#\0kp7Zhdau@"1SZ[bQqLq0\pGUJ0oM!Q;snO<8"7r^?;8]pJN]4M,B>9F(1=)%N?I;i"hlhu
%k;ms=eE@>>`C"Obc#H]am>U9XmN+UZcLIq\^CJWk0)$f4#%<qL^0-/:]JmGW4;]LbU\Ne*N`If1Q3_5*r))DVo!%7_g8+293@^u^
%6R58hJGaU8l7VV5drSd2j%U,_B2%Fj-,W(q5]M<-+&Y-9nHN+FKp5XDNU6"Ul2;q83:@E6c1Nm@'%n:?r2?+Gp<&khoGGq[ColU8
%hlt%rJAtU.k`ThK0mDdLO@bi?^NNTkOn(9r(@`r93-Mb\9pjcD-(P_nE3L>JO=B1J7&36"6p*^0-*m+nSVk5/JGA8qI:*4D'#Gp;
%CUY@Iq@[*:bsZ-;;+u:kMI6hP;_N%UG3jL,_4_BYUCjo+"*qn`eAd%N#\:8aVYX*DcA?[UhZkXQQ:4^g99KngI)9tM8S)JuV)'\L
%:9g$,,*//$c:$K&#7-f>M71]/#kjG<F?gYaapZTt$_Q;IU/(g!J8A^"#MH)um=?B[m+s:1S44WrC'2Zj]::@@"8>9<^F]&;nPu2_
%$Sh$;E%;Dg2+a^4JOF8<J`qoUF/$m$'=PQYl#%4WA87$)4Dns)3?VBB%4`,hc!XN+/K>i;]@)QeZi%_NM-$>Hh%1S8/I@lZ+.ZEn
%XP>*C6`mJ5eOb]B]j#:Yr1<"&g=at_5jsRL[7O="JLlhK\YU:)KH=f8QlLnZHf@*S=g!4IhVN3V2GK$3HI)9#O397NFXYF&gg8$*
%U&_&H53I/9Q1&=<$kH:1aHLOjhoTCVoqFcM\;uk8+/dg)o@b%,WOt'+?H?X*+[QLk9gl,fGMC[W/P&ZaJ!ZF15m@_6rXg-']oq@,
%&^K3L_O.&=,o*ZVWp:3oiV:+$HWYhq8UGfF3!<f1d!_$rW>T7=g>1R*JJ3S,>5d#c?*BuT]t)s?#iR$hW"3ZY@[Y31hEO-uf(WL3
%HMZ)j774,-j)tZ?"o1[U2MUerZ2f"e[tSh?K:M@S\Ju7U=`;J\e^FH,YD5)G%m($*ojC)rX/`iS3ZrS$eq<Q;dc;51J^dck[3/%A
%b&'<6f&G_0XbTBDlh"?kID_aRUO,/\Id?k`LE^]>j?rI6duq$:43l)8<9com$W\MR.&i8[EBNphM:kKGWHPbS%G]W7Q-Bh6a:o1I
%X4WqY@><W:)JP+=P*4hI[i]cM9RlTBLFD$V`K'YX7b>$Ej'YX`"*/a,M"J0;!FA!<I)bih2rFMo>F;9]o."I4U/X\Ve3'PG,uoaj
%dlnNo"abhN.QHu?U+cYL<VYU0Gl-aEdk45)2=tnpPL]6a8V^NHh-V%oR$BhCl\CNSLki\>d-^E%p2+DW7s@nJQH4?H"1OM*r",q^
%\\0d^h<PJ7?HW3nOr=LL4R,X5p!,\\/B-*+P'F&,oHD2P*<nXpV]?tW]t`*\0?-!>dI!Ph^*'$?jAWh$VZ^&n4!590!L^TRkF[ZB
%Ar3BL%SRogi7Om&Rn2RD^6B^;/sf7#dGo4j;7nfiZn5!kbI\$q57V:T'p:`:)knu,nfH`^_s8hUVnN)^0@++?rtAp\2F$:"7K?tt
%Fn[gX-R`fN,ZZ?p7GUIpr5"?\3hK-[lDHb'4I!_>U+Z^ef.*iknO#1::=nNh9-`9N>Ha$rrL:X9COGZUSkf1=-6iQ#Co9<!SY0@L
%kSfinlBtK9.omCH-Rp4R\GahM`BtVEM5i*G,k*hpP"ABUA&U<3l8G7?FAWmeU%*/!:(Q42X?)l5^7LAfa-Wp$L4#]ue7/Y$U-S8V
%EBp-gk>F<RC4FB&6iaB[TCtp0;kjQ3(3QBe0usmUqP:p4^%=Z_/%BYVQP<p&kP#$3E6i*\<sjnU5\+@+h*p?%P_<)FVL2-e1\[pF
%kj<Y+NdGd<U=j$XPW6/AJD)S%4D20gXVE4f%SEE0]JuREpkrLAQ,"Tb"UEW)pEAk+M5C4<&6.2!'FnTcL`-^7nsbF4I-.&2VB(Ab
%!%7H<(KVCfGe4o^-_QQ1W]W_Mg\/lfbnE&l"_'5VYHX9%''/BlY.Fu#@i7?.[&"J+-1=*-*k;Uo=8-&Aei4ZK_e,A6jsRce,Lh1W
%;.%jg8ujkSbag:^F@AcIWdJZ'<$tL"F"0FUQ/Im0#=X)bk;Hm>AreAVI8:I0Mqk3t&@S:ZgnAVOM%jiKiB"N#lHM9#l%kK\Femu1
%MhV9Cq6O9BnhC6[9;'ZHlJ-0.6%uQNqXs(PV@K)1%`(_P-'/K7s-28!Qd@lGK]l%-RT4gZB,:JG#6C3%YW3*Z:MTk+To.0'r%1;k
%`%tAE._Ir[U^hG_W]!hq3N%9l>/Fj0$?k[tc>L#f>b7p4qTd0B1`CX#42O"V,(>`3&ebVXT<.J8'^^M]b(LEMe2jZZ420VVFq4hn
%-UjP%mM1I/R%R&^'2<Z,&Qt:F?.Xlh@N3tf,ZYV,SVlD@fkONu8Xs1ASnj=[nHkAemBhL\`Z+U5MYM>Wl;Z3hG5Uk-s/lG!3Y_PU
%o3E8)^KBZ2";^ASkfRU/65Ijrr@."!mGebG</2\C=:gIj[`sT0WQ/AC)MD[J!shp&W5:VZ`W;H'Gk)XQ`mo3-LAb[OLC_d'mEZRk
%g<J/de"ghW'IVV`8U/]EQTaM&HFpB*-QhkuCf@m3Jqkhr*"i4'M."ZUie1F3MEW!mLcDKf43?h()r(HEFU$F@R<hkFpBo\9)#ROF
%S'kPD4PC&S1[S@ZGF7Jf>7:?`D&&qc-?)ma7oJ&]oV!330@8h'oAtd*,?Z"EOrhoi$usNshu@4#J%CuDPF:*A/K8&_T#`uNAb;sC
%bW.[.:(0EW63Za)oLftU<lF[a'I,`9_Yg?=`i>4[L2jQbAN_eY*P,9']7PXg8$I5Zmj''.,!X`BF:n*_,P".cQkhck2M^V7fu8\`
%`[3N#=o\!b@m(LLmTL*R`M\*kZlF5E^R:B+WSZckN31Ql[mt1-rH["qe_O:=f0)=*?1o8n^4Z,g4sBI0TVms.Z"F6%g[qE"V@SY"
%Buu`Sb_kCOfo,C];a4Q1gts7'"":!$+^MC3e:LXIKEkDQ9?h^*L!Y<cW;kLHNt%qDpD2>DMtp0Kq*4P!nbe1BnnY_fX&pM[:%BpA
%AuEOT7;^bB#?DB*52eg6/`Rei3O5Mk)(B.`nP>/Z:=\DS@L%rS\&4Rb^2jXkU$Kp2p(6VmkXagS%q56V[!,AGe0M&07.=%Nc*>s&
%;uF!ddT+O[kC%+oH@[KW"\Kci$\?p$cI;7u;&5R@io]?-UPB0k?Vf0_3;r0EP<,D(8CM2WYlilA$sFee-m+B0DR0K\@'6HPc"ano
%8PC'6-rA.EIMinKGrITUAHK02A%&c+#m%F6e:@9/ZCE?_YX5jrV/2u#$q_n1<+:\oFW>,`^g2UCO9./d`uWpq.l<lGo"ACZGf"q6
%i6^f\DNT.!=2\U5eX/>=KHEP3=<RbMBqiRIU:<mOV7UGYO`W%&mWJOM4kGbkib:?6htk=^LFlJ/G(-qaN8/8f04#P@^%=%jl\CO>
%\=WEj>MhmOO5F5$q[-[4X6(&15::gT?_9r?Ic-ZEF.q%JV'SJ]"u/!Q%0V13Vl5&XEYO-5D7I-XRcTjV*f16Ch)2At<d>8j+HSi;
%d+KKkqHOZP1K$WJlpNU$C^VlnkY7N97Z5smr&`VD89\BWBed:oE90ocl2JbW,E`@J?@CL6*Y%FA"?0>TD2qd,nP\+X9Lf`8RD^k_
%mh@I<o<$UrC!V'lK;Q6kn0cPt*:>DMbW]]h+8<1eNcJ0S%G[uqZG9Tb\$Hoa0_MJ/LH!-JbP1"e!!H*(WVpe6mPieRhgqk^Roe]q
%Vl=Xo.VUH4\d[::+6"Ngk0.qjCck!_^AI"gUUp$8jO@I7WTK273s('XWd<2$P5lnul?4^tA\hpu;$SoPMWJMH4'^%;s5_b(P#G<4
%VA9_2<fWhk'[N.9UPg4)3#BDu_,W=B-0ZV0mD)Zc7B9IDb7W6n<\Afa3oV88kiuD9[p*gP>*D0f,#4&NRriUJq]<.D;sS&sEG.6U
%c=,,$"iugl-aN"OAiNaQ^oaN_6V'MCH8*$9SXhk>*EA01a=9fQd9U!>nAY;SR"pl%WWk%\<n(inRYtgEh#OnNP\d'uOup+(rtfGX
%eMSh/:poiaO_=fiC:A9e"5O7:]j3W#1ZB=ph3j,@PSUh(h6&m_q*EIU\;til<h+bbd77iWoPE55dFhYBOEGK-+jLI4Q?:@.ZWUh?
%R(cqgPKSZ-X18rs-Mst$gc\?mQXjrugpObn@*7k@>6QWR'u-ctE-KJEfAd_E32.e:bD#oe$h[/'D,+q&I[lAs#P)7oHt2E2o_3`H
%(%/;dj#<dcI_Bd7mMU0;dY49ec,j&-gUm=b_*+`;'uJu[8+YLb)j\6E^)BG#dl,3A7-)`\4kUWbmV^@aE=Bn;e?r$t15RpUEDO(-
%.SoPPRR+ein,/2@lIpl-\*+%;'oDcdgs$en]?o20M5gB2%\X^?q_%FP(pmV*(Al>@pa]fHoqkbAW9=Sh:2R@EY2jKl`[6\A&!QQj
%+/1l=qP]p-HaZI)Gob73a&WU9ED^.K!V$B!iZ'7>Ur&4f3c(NmKnOW+;0G:#Z"m1&J[ltibq=.U6]k]kMcMK@Hn)EqRMBUV"^7J>
%P&XK4>j^*tb\/qZ5-Rn<a@W%,R;n,5\54R/rT>Y"L'\ca\h&qX8P;;j[%I>^i'7bWKo^?M4pHWD<,%QZ:D78VjQ55r(d4jr%0gO@
%p8j:AV@R8H<i5rU7nXhVn;aOCAQGk95X.t$95)]shAZ+6C9\bd+"OEc*<PGLf7%YGSaPT!jIW^?V@3S]N$5#8ctPKLc*c\Gmmoc0
%$YinHM41JKQsOihq;sU+*2M*%$<>)?d\0,QZ=$nc`Jcr0k!GfP@O9u?FT`"=&P\pIR%1&3+%L0V9B8HS=W36pfXU+@HA.j5+0#&O
%3`f26h1U.r_O(MO_aeXr9nb-9i4'u25aW[+]L?lqLrp:<+om2DK'olLc`7)pB0-00WT=ug!lqB]6><^bO8f0apEmLq,Y?GH'D+A*
%q4iI2\BSW$erncPJ63J`<H)(AjP..n,&2T)hK+9?#+8UsNF!n$L=2+n2Q5j_.bZ+2d:b-PA"NnhTO(FI:^n\,1W:`sQ\g4Ya(=Ws
%gU3:b9S+B(%bd&!>2F-*GS=IRRq9NAVLrAV_5"4[bK01I9Uhb1:eGLVWC[E">YDYIgf;`SD5JBNG.@K4Qs3Hp\uL*R3(/hSR7r`h
%"=;T@Ag]q"MM&FBC!=3aSo&TAGn&;<pOnGkN/n!!`-`p+?n&YZF@:NSWODfPEuaG$0NtF83UF)PAUCmH%?Q=\"b/LIGVj.s0BFp)
%is_3M>#WcP`P2Su]?GUs_5`ig)Uh9'*''m&)9\()P+%96Q-/%f*QSn*BSfe*Al!etM!",X6I!<1YuZR:S5)QITH[Jl'8JX:>92%<
%&9d_<^8^LDb'j9B.Ic?,G^l[AIJW%!ViQk;H6#pRPjSo>PM*mU+;*:+Z.l_">q3$cU5+bAJMi8,)U(Qu"GBMBohn6h9qq_iE3Q@t
%9d9*rS(IRq9t/j:>ZGdE%cCT%YoFp4[sU@EFjbVRrl&O%PLb5'2S;4AdZ,,_\0WfC-(qb),CO(%J`ZD_.f"m#AWeVs`2P&Ifb<2A
%qoCsOMd(>/OQpg_,RlQ6=KS&V9(dTNqK$i)+'!_J5'CgT%Sse2(+ILEANnlc:ZW\SZ%p`.OMP&;ZD,Rs'GoEtLN^m\WREMT'JOI/
%Nm.ND\G;\iNkkIidFY5B%KEs(rOL70lZgL?)=Pg1dQ]jb2Waa:MQf+[?^pUF)m5,,[IH5.nVq+Qapg6tBs[6f;#F#@.B2!<3/"K$
%Itrq,1T@/]WW,fuP4G=GioI\_p-)NcXMXRPi`t%8Xp1714_\Pq^aRkJ,cmD]'\)@LK>oR^6[/Bi&VOh6iu"cep#66<>#;H"QH-E=
%Q:8[Dfp8"f=B@tnLH8O+#"po2R<5F>8a*\OeqZRgeX^)-*Q)E?`=0dp<o#eMbGN3r%m(MJ*D6ucj,T.KE>LTmd$O0N/J3@K3l0Y/
%TEtMDG0-'7nlWRm9fUFJ:2[gK`4t%*`,PK4MoL#^;e,h`S^>-#cQ@0DF]rIaL$RrFA!Vl:I?6dQ,XS3bY1H/H=/\J"FAAR@o%7Ng
%9-?9ddfN5D[1n8#!g<[4GN#bN0VaBDr0F?9pN\#h"*dNS>h1*u]/Kcg>P#*S>4jmI8Di7?ZFE5bGVS@3\&T-U?e#GXVh5b/r3R%k
%e0[/a]\$3Z[Ln+?<#="8nLM`V?&s<FI)PG*UiWqjQ<#1aPG;t^fABQkPd\'k+ZgYFT-6kpBe$h8Jd'BHk%P%t39KkF/\H"(c[Ynb
%DcusdPZu,^poOZ\>'K.Bf?4`4&tf,2=oq<#KWRVQ+Ngnl-2J+-_Kq(hMBlAt/IEM"<1@u$K+t&H2nu45Toe8pB,$X'[G/kqGu<;M
%oBj5@J,(r<pVm*g:h6oFq9l@i-M-&[,#r9hlU/XJ<2,e@5P,T%q9Vc\s3SfiY7J;fEII$C.dt)-hYQu5hm++P+GFW#W6>RD<Sk\7
%YT;b!`<s][.7CQJp<=='btTb8RgO`2*"7Bib,?B0Mp4Sr9u-^r#ptak4&s_AQ;<b)dS*&,DB>Nq'7IMXrK;VUq+a/62Rf\tM:a5g
%.3?49PsR=/!u8D$U+)IIfZgMAjjsjea8[NU2WXahTBqUR;:RjZ:/7Y:I"043'Q:=A05m\ZhF^47(VC.GO9QFus)<IW&B/tLD]Vdg
%K0;D<s84bdq]X91p@76(hPkR'<(`!l6(r2a>^G*&79_"oUn?L9a5;KhjF2_?_X=44#l2u&UJm<ab5*`JGQ$k_Gt<!VXS6_DGafMQ
%rUEm=b,rhE#PKA)D\0et(Yng_%R]c"DJ@H=2\S,.GnPBq<?M,HPl>'Sm6KW&8Wh/Ca@c*^,he)/%-RM1T3f6/FKD13Vg>:ZY6rQE
%plRKo+];7@naB@Q\(n0P-7S!KnmKqbMgKm57o+G.^R[:co)(s]48soE%s=c_OX,b0..^Afdkk)Z7mp!C\?3-;mR$_F\"A.rH.2)5
%gWFEUf8lfCH[U_@"r_*M?>6;WoP_eCk-l/(Q(9CXp00r<:f^!Zc)Zu/cgTacrqZ*Ph4F(]SNdKG&fg\Xgs6jAA<f.96Y8l_^e&J?
%+?NNFkM8JoOGe41>lhZ5@=!8*,(V5dHTRNR(jYPAp2nn^c\R`+U0u:dW/[?2K:soo88KO<FdcgD-ibl5$^foM<V_AU7Lok`/H/[-
%9iOnE:<7FBE:#SGb9=j5+Fj5:!nj^SR8@FNI;W90aVF;(.\_1X21PN1QN,"a$?`@,9iQ,^7h)'p;rG&p!kDjQ8\2=P&8>MXLg\'l
%Zb.n5q$k+\c/FB%K)rE4+&[lf0k+j@bR!lh?.t,pl?$'_he!HQ'eqs"]/FPW^dC_W(UL@&A^)QGs7s/Ldk132`3b`$Xp?`%,uRG=
%H>Su.ic?"F.DX'jZ:p]'*7i=ID#]a#2q?mfA8#<N<e4hi)!fXq4"-Xk==S35"?S)cS?+(]Dr0Du&NT%91pi_#d7pmHH:ZOP9(>&?
%cjsV%W]Sdg='=X=hW@qWOmqKjn1//+*2??Y.!).9b'M#:f48/K!99(K-K-9eam(9;%M?%N<5FB4'dT+4=tj1N_9H$*`Dqgk=qW&0
%`kuk!T0r?_%pCM"N!s^W961$MaJ5JZ&qGjC$lN\7D48MqVdk;XoPtNG_2g.76p8ZaKgekd/fMjI%iiteXc)2J`u'l'e?NH+XS"o<
%aSMgX79+'H95O_NDhk9TX4QD5'_fSrrZfoZJrVe9<PBO_n<KKk&FeI.o4NC:6UacKgOfht$+'\1=@Otrj^oWW=TgYYP=dGJKfV&S
%,3^C#W\g8U7bC%Z=%<lt3Fpm\3N#.=pFrW%>#$<R.0H0b0omhDS(3<!WMmfND\fT@&#jhD>D=EcCRRa7O)/hL4WH--jWK^*k[N[$
%;[:d<dsVLZ9DJ-PS^5F+G)-kI1pBNB(\YHk#NlfKE)PNWge$>MA=Or_<X4\Dg;asoK/oAU$CX(9q0*d4E`D.jMY]5eXbmsp2E4R9
%(>pL;SqQ+c+UY_mkdu")MStX9'@BepKr9PM9&%'\^\1PN:56("0]A#@2$<PQ708:XpLnbVKJ0?k:8fhM#fcMR_#.J5b8g!gl+$s=
%b"0_*e3Z4eNo$^eC4Q^YBIJHUWd`U/;j\q"lraUpgo](Y!LumdRArZc(P]l-NiK/iAN5pm6@,RLJ@H6R/S)!(ot`(C/KeL&o=/b1
%2/D3-^+70-KHh#AfQ&74D7\)MLfC;Og!3)dpE/4rPb9s6q/*r+U4\"01no"V1pPS?HF#Ya+K_WOGciIe<B8LII>Y>?$Emk"+^ckL
%TtI%Sl(l+/8CE+!,fP\#;6Q*3g%=f6f1%+Y&GcN,kO_\*9o,2]VS]:Z8YVVLK*<BWLZ(L(h3EnchI_elg!CD^*]IH$/8M5`"0hAa
%7FcmDZE+#@i,;KWlREQiA*]kRaRg(qVA\h/'hmd=TKp#D67^S34a1217R#P<jD8)*8EI!2)@;65TI*X"LBY>MZVBTga!8`G\h\Uc
%.go7a?5]cb/lI5+6ka<`Q]f1Frb9XIJg21gTRBkn%-L+OUa@6Re7bO-0B+^qGqcKq,.VqJJa!QkSGjqe([Jr@*`SrrP[tY9nCYP=
%(1f#op=."Bat(>O<\-Ma<[\Zo3uel7="pfsRUEBk_soS64-iG=)PLP039(>mkD8i@GS>59O:_O?J[D9A%2uoW^q=OL78^tg4s0'Z
%j*i+a#bYqqo3H:O#"U">&N.ltgEl(+)Qf2[q^<j(Aa3As<iF=GTur9,o7q26pRlr]#'0-GVGoK)oV1VZ`G$jsJUEP\*O*2,5bIML
%Iu9LECgEl^X8"Y]A=(VL(AGgG[QGL%>J#Br#TV,ql+1=(QJ"uPiTehN$ohO3Ml&SL,djkg+PQ:u,JlK!#;ZD(WmM)%OHQS))SjI^
%N9Qd+$aA$"[VG/?]3DgPWS-A5P,S[c^6K_oXb&>I*n$&a^Pi/ffEL_j82eB>U98$m3A=spVAA)``hQ`ELqYc.SiKb;MN`eZg>7Qu
%s6DRfs1Spp>aM<3l*lDFB$Z)jfR.7o"1=EYUp`[##;-5FT0LAsd8="*-'gu`#3l#FLE=]0`i@t6T%%e5[il7[@]_bS,k$b[0Agla
%Pcl&[g%bB;+KV(`F8VcJ;k"Q)cqN)$!DTc?H]HhiD[*Ae=.ABKq5<;tUV#FgrhuAd?X_i`VW=s0okr":,ZQ9jXhd,g&!*Ru7-`Eh
%9QD($E,sr#6ZWuX:)_(S:l'pt^eMJdPi\?5_k-U[Y((JFs-KAUcMID._YWQPqF]X[IJm1+X0-h!F&>C<j0:2VpeKSa@AYNU&KKPl
%dEEbpPH+j'2X,5j6_^FMP#ZEBLD2Hp7;DV)@sI=HGV&9#G3Z1>)o?@fpn.e7c4]_o#[tUbg4VjC846e<%C?b,4+6i\(lmKa2/r53
%5JLn,[u0,Os)%3G*B+(RpMc[D:d#*UHgI=0lA).YaH/Ftqb(]DFV>hC*di#8f9j]5a%eI0.Eq1,PRICjW\%TN7BV3`;Tq_YAZt-A
%`6-/#0gu%0FbkjYC:UmT]=L(h5A:%Q5G/tt.@]PQF8Cb+oqe0]HU=Q5ap#i*dNL'PW,U5R^':Gj#9>O7^n###EA66aWlQ0@9$MGG
%m\55)@<Ai;>.@nUZO5Eb<^tjs;5:/r([e:loakBEZ.Y&;h\;@$!_Xm-&5Ma?O8ioQ[58C:h92[`ieoZ3HE$R%ohqcj<_,,c[W`9N
%6MnkN*=@;T5aLtY9FKaT3tg-d8!#omCmtI,b(2aYK!-QSr\RCAViZb+2.!*Be_8u06"T9*nJQ)eEp`oAMrHUPcjV]$csR$#C5`Z\
%gWTem*Nm+JM:Vdl5PMRr\P<_Pa6B5(%_7h87;gNKJaGS8di2_Z;5"cH<PD5=MtUZVktR'*Q9I-WT5q#fG/H?_>/OCpP&ih4'+U2(
%S+-D_^=A,pr>7Hb`,$U=F"Yb;PYMjjT2I_m;DFn6ZP_(2".'uo;Q&;9?L5iS.4>",Yadp*/3<QNb.6d885hUPcqF#aj#2/7m6Z\C
%dd:B<^\8E;fp8mPTn9uf)1^A>#@:oK7;iEJ95h#KDti6Q5QB35Qd97@2t7H%K=RgC0B"$k6Q,$a2o=ul\2MhL-TW(dVtk:q`"-!d
%>Bi<je#V["1gm/Y?#E\3V]Be1omt/_PdDubG.$e?Ac0C-S[o5X\%$L%jQ4Q(ktnoU]Ym/EL"El%)H:]SIYa5"]SkdYqPm3"TC_=/
%e"?5c5=M-UFXfJ@.j<MI7<?&4bY9Rgo"!el*(Oi70"SO@@=#$.9>pS(;)K-/,s=Bl5g,/Ai@P\KIu*f>;>?KBPqUji7^PS^$r:Gp
%5Lj\u]gSLGf/!]:0BqLQY1pYbhB,WMYh(J>R^^1Y8auukU-7@nFZV";\..=28QkEK]qf27%Ug]egYG9p\X[r3oHt+*rf#V$4ale*
%Wql**4R]F%!e&dl9s`SZdT@fd:OXk:7Mh2.+5]76,]=IZ(>b>pJK.8r*hqtoDq:\^GMqb4$n0*#NIop*;_QOf!PP;<0AEs_nZb;k
%4k:2gco:9q;4i"cG)tnMm9jtH%Ghl6=c\pA[`nI4*hqu2Dq:]I@"ItKf^N/g[r;$#H_8pMpD[s&R[0)>5GjQCC/92$r,ZW4f0'Wb
%S1jE?K/Ip<0fr@*_SL3p*2Zd)J15Kg)i8Y&nrADUmga0@SEo(FLiX0Hg/>a\Yq3iSpIc_G6`@%#osr]c)$3\u5Ph9uk>I[/M?]tG
%3ko-C=K?#B1c+p9/JW"pQT*-'L"QH:)p>pkqRRYg4c4,S'[[1h]&FQ.%3gdT&9V%hXXXu(N+c[Z+i#FX3F%@LFlD=)poC>bD6@I.
%G)Ic,POmtO7.KE/oR*-'KuP:m'Dh<j)\GYlj.!::ir_@>:gY)H-4a2K+jG)r\#-\\bBpf?KYZESqjn&T+!n2lSHu1oq_)iLVJ9u\
%H`01(@4Vn5>h?CqVA0qtWQSmIBVEO_V&T,-%3$mOX`::^;Lo/P,@+CR!nc.0/-&[`Ed;"Q&RZ3>ou_'Am_(6k%lsK`Id%h5,V,V>
%&!<_@fEhVin(1Pr1KVl+M-$$''8m&*qN@LVWOGe7mZM=M\l=.L(7[?A>196BA[Lc&U]+Bf-NefNcMH_/g^QR4;3sP(7)/NsZnh/J
%&GcY))PZ7@17to"Ttj**5]&5M4o/_iKr."-%@Ws@p&nolZ#YARs2;l9LS1U\I)ZD^T/ZKC*(:fSP3Ki#4G^pQ*R^VWVOiH`:dd(p
%.*<bC,?.4/WBF`_P\eLZ<2PEO-R=Rp?.Fd+@nY`2qK['SA.a#DF\b*^Qq"C@=Pu"<PB1V3$;j/'d$[X??[YU&;=4oeP4!J;H\-kH
%1!<QiiACSd9r*Wd[F#StV9Ie`3m&6:jO!"Aa&HP.$,JZGKs9fr8/l!qk0?KM.jXWo9a0Q,*Lt'(?+A_/QnUm2@D6JQlj+"sBqElk
%lf`&gT;*T[Fi1u@O;rm^bEKN7d$@;?:A%c8ET6)/m]TCX^PbmETq<qQl6tQKYHP)65'8b<obMTZQESb[>2\I2DSqin%Q$sM^l;S$
%[H3rEV;*k=:)!rsl6F%a8M'B\3`W:<b'RKCg!AB$:N,aA13'd1;qY0KW)DG7Q(8!#WhRqr<-ClC>m%Y3XfN"rAaGE2'.a<eY4fkp
%ZOE]L62gMsm:6PPdmY@WPAF<_5<1U0ZC#;_g>Fld2mXDApAnQOm#hQ,jBV9s^f/_E;t/6#!hUC7J`"<Xc2&:L\fnT>W)%"#s2c7u
%PbZj2U'a)fUC^J&?@/Sm.`$e7nQ+*cm/dBtqbG&j3$6kXSMjiXNh9"sG'[ZJ]FUW98+8)f(*;]DNVersK+Uf*#WjJF:iVU*%8]%e
%F9Xc/Q?pgU)M[oC9Hl4hZhk+:qSl()I<$#"It[>[:saV]67h]ejo0KYY'gf`X\I=qB_hkc9)_La!03/Xr6etQLGD=+3l-B(W/)</
%"1Zhd[D;a]ak6e5>;8H)HQ@,*+R"\F2mmfa]2N3HfKp]#Z^)f7DJ7MKTa`$s+d&%U5oXp0[IDWi8[XbB!1q,_iZ1!Ikc3_U=;I0;
%;h]o-o"8q6I2aNoIi+DK-1L_#F6f_.2j9V8RX!'I%Me+iMW]FCVJQX**uf8ee_XsUF3#"?YCC)p=q+CZ?E^[T3e.6>I%+"dnk7%]
%l$135V*J/JJ<FEe%Kf/NYu=Z".&lh>hG&dbN#\0bf>OHH\Iasajj2"^Z)>RV`q44$eUj`eIC?-#Ief>n32PnsQ-qh'05Vq+dEtTL
%r;9-i5o/<V.\C3L6Wm6_Qd`3#.f]E]ObYhp1md9ap%32YR=2,opP@)O`';,n0dkt07ARfuhmecs]uKA8!djph*@c2;U&=?i*"?T]
%WgDlek8?Sl^NrJ&<1rn#U80&j7*0$;`2q^Tk(GK,PI(?qQMXF/&iq<97^S<Yf6.QW'@C&p[;b#s[JA?3bX1PP:_P]-m-kAXeU5Zl
%DnbX%,)17,!U#Z@e=K3ohe_jJ6;r\$L/B7aEF&p%9D3KGprJ@Fs)E60U**j$U_Gg4,\`:Lcc;_uXu48k-C3dbd4C(U-e6]5@Y9N7
%5c77&EZc[%luWoAg^4Kn$kL_lG#0I;Y*L)&oS",q'4Acf'j2(A_W8Sn0fMgSQQ#9!jElg0Y39gEC#CS0OaF`8#3[Y0+q;A$N3%fm
%E&Qt9=%_enpj"[[V5?=mpDTrZD;cZ2,KD^NXTjV`'`"Vek7QZD<,M>#0%`Y`;,Q^D2%rZiUkT^*Ro5HT6nu<]$W;3%5NbdG8)13V
%.HD8g7a:A.*@&R^S?kD@1((0WHZ?s8pYo-GdWq%Sple(!b1EeE`X,b%VH7kh4rT_3-V.<@P43*qVi09oU%ZNkOs\WsPLbr`Er#]K
%?VtZ(45Z+Pl9h?J@*90?-(fEu1;js%+L+XkM.?=I50&RjP5Wqfq>@Y!%L(1COGnZLCCh_QZK%"a>7KpcWaqAONa-Z_aV*P=F#ptQ
%TW6RT,1pHV*))Qkps]n,]["*gH7^"jP7sG"-mE_AboD9Al(Vf3Tt`)F.!iT%r6*P`<RC&OFK2V%&M\=)B<;l*JHA`\3f$2jb%#/F
%,MPW,C2u:k%:\4\'8$aJnit(6M!i>P$i]d?5"$[76Q<9S:?Q+YKB!`bc\l5CVToh%L5bV"-m+V`':T<2&WLR=$p'e3)='YCq^a<2
%T^pa7*lQ`10raR+$F+IRIA"tJ_WRWM.W42PeLiXI]+n,5ET.h-I;Fs\XZnu%;cMChn;9Ehs$,3:<@>ETLuoNlN-n%ln5&".*Q9E'
%:b$T\kJ#:I=YjiQ7C#f'`R2cI`OcfuCXu-[n]C9H".8`hIIWA-U#3!-rZS39bJYpV^7e*k$_jEGGn_iG$h3SW[1m7OB`]6KZB8Ns
%ks`a3M\J8Vj)WZHKb^hP:Xaa(W\?oU4nl9kQ;^$oc$*$CnUW?`XPQoi5_lk6]Y?i+fi;1'3/Osp*%9%+hf&8e]q6Clh*7b!TGiQm
%3*dJ[O=s)ok.W_0:_@JD`aekqH;h:/pn=bl"lp#T'07VM]DDTTmRtoTe:J6bi+s,oP=%&,qO(?t&SFO13:FLM"'?o#e#QkPTIQ`Q
%$XLDWhpLLa7[Uq_77\[dQkk/_Ht=B-T_CA/:/Mt0d*ZP1($,iO=O$`%<h3tL-10*(T+nlbNNG@Tn56t4CWmr=p\o&Te?G^)W=eMC
%h@9B)%o`D0QJ+)<e^!YP4%E),)VpU!IP"Q*i#;B+7''NJY(PZ"hKrM6)0MCRND_eGP!4W<5#Ob&.].B":XcQfeHnUsI?9soN)pEf
%mYF-$'mKG/#8g$]nWFo0RgntfY)YPZ6OJl,5o03seS=$hc7p-6=B<`4DTLdg8EOS+d9&(!>epP'%pi&o#YIZk0F<,54%LKJ\VtgB
%46s"`,sq6YqW$b$s5SlMBIi^b.EqOPG#b1hg$tl3VOiB,gU@c9Ou\k<**@o;=/8k5HYUSZUBh7sg?tYJ@XqsD(!e5*K3gGm39@Eq
%eY+TE>ZeI%9YKiNmPAk7m]\\q;FpDKlE8c.oPr)o0%E+X*SXtL>M0^s<@%9qg`Il#l`(Ut)ITSRlMK./rQ[92@b,Z]OJUA4ZbJNg
%`40+65a0@_(sQ&[jRT[2IWKANTe8'qkW9BS(Xr?KT<o&VVo(Ulc?7<nIBi:sA20M^oo#d'e3TLCP2/RUdC%="m?Zb$;Pi0I-d173
%CnaciB5lW/T=orui=+/K9\t;)L$N>0dI!nll$be3`hh4hO3$UpHHQnLHo1ttIU&52VK&?]7=1k#Mg>U5lA$B5:qfk2DWYr=BDkZ:
%h>?d\dF3$0BGF=-Y!<7gT&nVp?M0*8j:Fhjr119S$Wj\B-,<[7eOcsafl=/8,ATr[E=7WhnYjtOWBJ_(YbsJ[8rF->ST_tng7E.U
%@I:"Ip=o\F3F$]-<\0Q23hTE2Y;dprX)I-.158i[UbB$5XHDk?$e!b:hOQ'F76EfEL@X'AWm`8W%9.\4kfZ5.P6,o_E^XZZq9_'4
%2*9ila`3_Nmq$!A7/$,3&G4UcA":l6*b&kL^)@tl1Rt$^^-Ai`l=nmM9ThNX9uSrt.2'E6,i*&@JI(TKY#34o]=di8`V(+^bi/K9
%q41o'93CAOGfStt7guZ&WBN?\)MqHgMH1qO$jpKD<J`Vjc34s><t1OtUoVNd=7p/Fg(N/PJJ\<2rI=h*"0Dl(hI7h:3ke^B7$7Ps
%!Jt+1;oS8^d,mkI*LCdXeSu:`1tpGqQ$K<pc)HtsNYR#Br%]9KQYeR*;$>JOI"ji&eLs<a$l.)I1j(iih]qCuO.r+pIuDel"c#?J
%G;ru"Ic`&p.T6.%%ElE,<=Fr(oj'0G8))u\Dd!JT;V?u0Zkb6"Z(=JB@JDQM<8Po;18e=U)-[a%N[&.QM@?i5&(t/b/bGXtekRJ`
%Wup2;i\Rf5g8V`eiPB+]*`_-Da!.`Z.-4A8h7Y:2R/1*#jc2KHSSWQ)/as&/*-+!GR#323oGh(qC-=-c*QHoO,CQrGS>X\5^!Zd*
%):pjn-]UG&Tm1J.XtZ+tMdT.Bj"uop.;Ya0!h._e1d0;Wll>bEU38U9(LeZ<6Ll+(V+j6iY#K\)=mp*+eC]kCZbRTFqS/S=3\]*3
%OMcH*MQ%YnRQ=:jSG4i!X"#%IU](.dLWLkJ3OeD>M6cPp/\T(Er`N2dAn=bi:uj[6T4k4S%0/@9.CdI!"<0%^/t9uM(!&(]mh5bg
%9)c`eDY$6AS+P/;Bf>8E4K?&IDGjn\]SZom6-(a1a_CL5!`s;C.)ZpW(q[J^.jk*fSWGNV5YVr3^>]/kf,ETSK&Kro3Vi-1<5?*p
%ij%7a4(Q;c"ZfI3_aVX>l&NP\G)DE&b9RNh\f`F%qD:ORD4&=8h,BGDoI!8)(62QA?nlP9`m`Hdg9%-p0gm'=$`FO)FU=)%7SWs)
%3B8ITl3%P6poa0E'[,)4Uc]1/+^Cgm%Q%3C%!W&(##sh-dM+r,O-`^Q)g4U>pKa:>^$aR%pYqed.#&gMU7eRm2;,_QnOP:!<ch3K
%;"R'N1ZdUWnIWC)g-7HM)ZcQAXXI>5?G$gRWC93RHT;fT-.=RH6FJ-A&-kD=Io">kS)u8Yih./TGte"9@#0\4Nl*`L?/6K(ntHfZ
%K>NrXE>rhTqH@?Y7G&>L6<YeUO\"A\W8XZQI96"O?l_Z$Q2R+]J,$!`J@RbR1o`/P[XFALfFU&`'[`EYiV-V#ZWrMiY\npaYc9s+
%<(4XL>B2]$hZ(c\]7$i,L6_A8k`3P7gN1[@ph2939"5#=]puampO4P@`?S:`YH1]3;M!(0!aQ+SEK6%$NM<021h2?])=YI]11;o/
%?5>OFVnC!-BX!*[/GFdq'iF@rV=NmDP4Ir%g["1#Sj)hr2'hG2R(OG$5Pf)I4V?p:'>M5NZqicts(6jIGpjZANKk&hFeMmn/=3Nh
%j0c$RrojK340mhU6OsJS&.6J<cpgam&=pkVlG'M%BmS8n=MqCoSlhO4Fp>).6V9Mr/6Y])p3TcK@3lR#)A=NfSaiR*Y&636GBK0Z
%3Ad+%N=r0Y`14u]8sP"R#ci^o+b8%+EuRD?Wff1tI7;!S>N=(1*FemGRhjsp\^7_e*ceZWDq[B!]K>#JOp@GI`^D=9MG:*kk<jCe
%%Qttp%p$?_FJ#WL!H3's3KC.JX`db^*l_2X?'pi\VV8?7nkjKRS*H/apAW)-]j6B+iHmlLW$4#a"sr.p*t<W8Tc2Q2eN+@XBj5!W
%d0aU,\(<SJ9dmAqm+ZTsc4_Ugp$WU`!g>T$-&.js&q.6RckMRD6o50LSeIr,RRs7FfW5i?c>rlLFJ^tmKR4_!#iq$h,gV0$m-Lu)
%cVpq&6m#bgc!:Op!iq>Tks)J6laFLB@ojYh+'Rl1odV+%1u6&sPp1h?MfXY>3"?]!;5brR?H#s[5.oL`EQZEqe9/aU%>uGEdq<O!
%l<%5Bk2t;(::9\@fhs5PinR+C:8VUM5b[()NC#@]<uQC8J?DUE?U8NUJTJ40a&'`)$7=Hhj7S;2j8n^.UmJ%/Qq3BrUbc>9b#e*:
%'^ilenJtnl^.0&<p>R<^_n@+bN/0Gd7h,M6Pgu`ZPSQ8nBHh9Zs&8NM=F\5j7[,3"h?N4i,&e^LT4>jo-*Llu_h5_fcKY"WN`(`4
%&:WZpUeQ8bYd^F`E$Z6a;GW"OWcud%.te)Us-H<j1E0RCofGEi(-8>V(k`o']-A,55;kB4P^X;--<&\&N=Ej/L\As@=T.l[qo`Qh
%0*_'llN&;r+oWBLTE0W=PN>J(Lgo<OZUgIt@mD3*(r_D<m)B+ZLmeE?=!2R4]a4VX[K:DGq9/s;/b&(7:(OO\.RJk9h:Vs0+0ZoM
%^AlHue/5%h^h[>?UR_1<6Y'Ukr9D6ZQ4s<O5;[80]F(s;1DA+/2o!^$l&0c`p$3o:a*DbJhqW!9`!0M5&6,MlkJ-eO:X^asg8U6N
%io-HYf%P_ur&<r$,>5KZhh?X`>qCd]hiP)E1^)iW8e[b:%[E9CiYo,T0d4H]HP4&;]q>5u/Y]?e$)O$tN)cJ[f`M++77e_SG%bWZ
%g'bp`df;i&R2=HJJ7D0`WdO)b#j58.s%2F-d1rk`^lstC*Vua6M"7%mkFM7a/,n$Apf\9apYG']#@msX9X:R02,#+&04E$Q"uSf\
%L6:772)47rCq39]H"P8n7l;VVN)dEeboZ-qXcId5U?KJ+XcQP5)A>S-"ku2A?]#\Y=K(_WQ'2g7XsUb&5R.V*';WI;q$#,EY/]7Y
%]c%6'%>]=+LKcBC<G2/iW^!;BU#'B<Jg8J7GCN7#CdY!?Vo>M@LVOA/56A<uoLpbCqa1Mqq)S@JDb.15!,m@J"#+L-8NTl%rOYe3
%BiD.6gL-[!<=8gb`uqW+E)(uK#P$Op6nhjc1>5/NJ)97qQZMs!?Z;[B9nut"ohfJ4.i1J*OmSpFc&sg'(`qD0ae:UYs4%@.:M;%R
%f:]LG#;o'S6-MYncY*cFi^kk"q&60Ac%f%iF?N#%;jYfc]M!=3l@tg38ec%Ij&Iu^0PHTg%!(jVeb3.JFGC5U>g(siM@*eYQ=4Go
%;+o*B//+ThS.8E-N<S3D'pdP[aXr@L"r/B=/gD[)jD.),KmU'7pKZ3V02)pA?'B<0Bj7;'APD"GO#Dn="=$t2V?0+-p3q!),dEYE
%;DE"q/[ZX,Y<p/DPPalR,%;\"$UW\MkgN)?KEu:Ym)L23dad54%*t'k.B'3nQgF>k9#[Y&9%+tt'ZZij2#&koWO*mr'1i"73=-]s
%VIE7!>YUZ?Aj0t"U8?e]@)!JL"/*#\O$\+k[8\+['NIVIH*>o!>;MAOU1ZN($*nQ;CV.en_o1R2ZAGo?.-Fp(?A_Ornl8%X\X%<b
%^R6YMqmJ<V9\#-Eptgn!P2kV/5[u1DdG;;8Y9^qka(d&`mgR%lXlC1aX#7SCkbf^8n4Y(^Q`;c'9E6K_&ZcbLj_;JsQXKk#\0'DL
%JRZ77oB,NWbB67UOS<A+!soYaFU+bOD*ns^d.&C)!E:tnc3Pu^C85%`)5at/,L#dJESQJ'qWZK&fDUb[pK=;>98DK%i8F6Es(hp[
%rp.L.h6d%Y]-\,FCuurnmKE/9U+WK.,XO_'=%KE=D!0l8"*usBTEn2]U#/Ie+k3m?jHcB7ULrk"@Ym3Jh<Un'47jf5q.8DS?bG8t
%%G4)7j&=ud1B^hcXZEdrKc`E,$q1bZ8?2G37q4R'c6a*fiS#!3.j.?J(/bH-auNA\Yg(XQn.9Q1Vs73V!QO0A;`4BG9ioI:k4a-K
%IIW1ZHOKo)e8QC*>$_?a'>pNA!b&`7N7@E&rlJ#\/_[a7P$^3?(M6WEb*nASc`S)dW0D\Ee+)`]b<8_Fp_7i`o5jd`n"_VnnE1:t
%<uO\Yn#a;Mjnr%\kU6G6iY@oX<:nl\S,5Q!AE&PR60%O)gkA.l)`/3ak[m,--:*c.g]IDVeqpJX8P^Y`mr.^mbP0_1iL^KVs(;c@
%lVDM;@8COSmAZ=*jTB)13@Nq%CB/eriQI98*H;[J`.=dXa4RJPE$)\j>W8/[Rp5Pa\kj+!9$`eA%@PM"K!,F"/I+Fg<?us#$BH<M
%[E=,X5]"4Zq<Z$r?Qq8^Q\":(2=B!/!<rb.3&-DTNZK1/JlReT3uT!*RD9j(aAZ">6NKL,([5-=\Yj8]1*KOq=t.%9F.#Aq]G/ML
%L2o6n@#ss'$m:tk*Rie2H>4#q1ol;VUak;d)t"ELM9r^Y$J9XF"M.(nX[K'kM%ZD7E&gK0Xtrmn8t]Hf9%7r0!Kr'X=,hR5%&Rfr
%09PUc.<`2tKtndj)RgB?i[1,Yl5)%q.NQo4.!)aEg[EuqHj1u`N3/dKiqMnQ74A=bN=4%'#V-sk#7+e-^AKn5GVR=IY^8RD:i-7U
%Zh@iOJ,\WpRO)A9Lp6u>qBa/Dn->-H+?d]r#agK_H!m*<GCf/(<s<,sH`)udn#;F@.O\h<-L!?N\EaDQ'\d]qIC.$RL8J[H':Lgq
%cfICO4_VLNH`2)!Y"CQdH5A;5rt^!MC*3aiHCg%%MiL<g7d1O+1U]7PejT3_)eQXBdD7HDA\g<iHH7mSABY\T/D/5Q[HTa#AjMNP
%;cH-"<e/E4]b"jS'.!jIO<-ts#p++JT!UrKEORKhE08sEkGDA)D'NrH8K!X?Vl<jleNKdB')<Q*8sD5<o\!E\8M<4ZUcbQ5V#S$^
%6ZdhG6V=e?/ZLq_3oVrY5!ptFT;u-nD=bt"S)X@e$8UV)fB=A3<U_DETis[R%YsA1Uc3@Pfr.q=oT:4MPAQ#98]=&;0/[0LV/d&)
%>_W'/ecp_Zk.OaZ>kufUZ30;)2fWHW_HH!%/A=_^Y?9i?\c<6iDr)^M=0:!e1SaM2GVOA-,H5Ro=n:>7@_K<pd%o;pHF*@J2J6^J
%1:Gch_g+gVE.Cc\232mZaC,ia`Kq[@95CP-qK:aa%C!$o1uFL/phF.#HV\u)4hCR@S;h4W@6Xp0&]&Vm_(Q<m.-7rMDb<8G\*7Xl
%Zh.PY?W8YWq^E;JgdeLb]cft;o9HOKJ=si`V;HjZ@jWTS<^KX-,34&[l`3$u@/@$L&5e&[Zq/aA8ajFbDXZ;>?"a&s6bhpW;HlIA
%mb?2K32YiMDp:*C?S!3IU;h/F!.nI?g80&HS0HgPG`.H7ZDf20Ou?l8]*N_)1H(@`D*KkF6k/)`Ws7L%')\es'TG%B,O(VJ4'N>r
%'OEC?4R!uiS3)!t=^XW+_4A@9e=Sgg9Xf>5./9:e=LWgo8!"4CBn8GeXogX)<6t$d$/0O/domr)Y=PR\&h.S^#k]qR^S'"YCi_D^
%P:>f0miH$:G9^WAb.P`j>F60NGGo0$OX#IaSutL'CoA%7R_gKl;K=>8+H=F!PX(saPW^`WXsp6'+J[fR7N"[G(LQGfd:BdJfR4$5
%c4XIR0a,`!1"(IU==!>3EutH!e'Z`p#dcA-Rj$/$9_mKU+J%d`Y_Rc"DT+XX6_N6.>471G5g=DWTKNbl#1[f;LZd"^r.)DNbN_oj
%m.1c[XrL#cfGNphc=G:?/Y],![`:mG<:Eh2'%!&2+t7jFR5B/`>2W0+:)'KZ\ZY%f$&OC&,a*'u;[8-Tk$AQq4S,mXr*+Jr.f#Y4
%h$TPCqW=b#MOE4;G?oHA_KE?^?i'Ro.K^hPDf/%nRfQDohFca&(fikq#+%kleAAI!Ffj;j8.;Zb%XVL&)H6*ga6aqBG]*G&9;.'_
%0a_p4@d!Ueg^rk()?%g&O0?(]p@PoM.JSI:74r/Mfhj\JgR#B9n=Nff(]c*S.DV:K@3JD"I$/BpkD4o(:[@%-]$mPRh&[1n1kO!r
%,9/+3FPR9d+6^&c1Uecmi-;fu_V6I)gHBuMT.V\-N=s!sD-hi-6<jrg^RY4W7DmbqRGh2F>P-S\jWVdUa+YX1qd-,5h+\TENSeV&
%@J9+TfXIp6d,WAl6aTROGer^_lRV\bSj)jZRE>I1U>UM2CBR/I0t$'hUjL/4NhWS%XH:W!\Z&K,_G\g@ptU<i/m)tihaF*-LN#dm
%?`)hTr8qT&AgE(Np/=2iI$^HDK)91S$H7G4XD08^ARe=I%)RlR.AshjAfSFD7VJcl_9R(mE*6BU=<FN!A)2gJV_u_dJCCmmnt(a&
%Hs#3%46tlOfoI;8MPY2$<D8`],a<b#a+Hp=]:?oH4CIqtEgVkqK4-2dNCVMhUmIDrC+do1*:p[I-lui[_B*rg\_feDNT4;Lidcal
%'bDYh$Ha?^CUJa>;PbC[jle=4N#5(AddH;L[a2mE*c6e:\7qO&8&RnsFW@*WPn"UnS0m!=6=.lue]@/.dck($[GrTB)(IZ_A^051
%*^Wa,QD=6UVNb.JI]NT[@^F32(eVP2YG,JeC<]Ujh11A/`1`np,=dK1Uki=tdA)TWDGc.Qh[ZVU=BcgAJXoM'mL);/o]N9)9`3DZ
%Gt`s]rM`dl<mYYN7AI_.=a^_a&@WW&5["XY,">8@4#'t+0b"`>Y7E9MpT%%!M5sc[s(6bClA520M/]=UDPKcs-G(GY*_k2[Wj0L3
%d4D<OC%p#N.Q#._O/@^_f"9<\Wp_CGd52lo*]f:X_W#VIn/b;4eWg0G7T4I#L]!Z*Ra5@<;[;o*2l%NXKk*<'d]tFXp@J`J=l$EF
%)G)o'81(73B]('eX`-:LYmtp1%)D2-dXc*fAZk?)IU]1#MBN.P^b-Ec/^$ai5]B?PC&RI-bG*5]BMDJZ-kAWZi[QR:HM>RB)6!ee
%;R\mk"m,TF/oirB8I*5u!d6K0AN3dQ6B=t)^`GYJAohT]+co)6NNaa`]#Ya;XMGYf;"j.I+(%s+IrgAO6+Wf,E&$SU91[YEG:`;s
%,(2P#+fY,(:/\E.7lP-_pBHhl,ra+2_PM.U@!*N,Oo3U*c/#RtI(Lg?Hen!2\io\f<6`9*EbF'k*JLt9qmL8n+]:Y\j'*@3^"ok#
%oMLSOWg8=LqA$LCo)1)I-r>.<e@C7rlB[r\6YgnD6ep=9&,XD6P@7\Z5An09IK7P9-K5^?Iki$OS6ftp0g[:[:@C]#3:L`C8MN@f
%hg(F6o9k]uj(8E.aDKcT\j`=P%X3bY>W@>[nohX#kk<f$1u@\@\,?b3T=U*Os+L611$c<\IX*/sVft"Qef=($A:b:koA)Wc\K&'!
%*Z'^:UqO=p6hL/@]@7pD]3DrEmAZ/-\\6h5m-t7!Vl0"U+T0:[NO8>-M@P:XE]_Yd]#r&8+4L_+bFj.\a,@a+ph2MFK]%GB(66W(
%i'0XRC7[s4*kN;X*k)#7E5dL/k2WH[H7+\12oQ5\WH4c*L1k*d"Nj(sZ[XZ;DMmIu_=l.pPAk,rA!s-O5$<a`k;8Ra?)3ZWNZE(<
%/MWp0LSE(]_=#&86Mee3e;5[Z``6Lo\d$4OLI#o8)lh.d9THXCdjSN3qn?(,^[q+RaO1tcSCmOB/=ih0Ahk/sJr1\W%>mim6W:JD
%Z>GO77Ie^P(r[p.,=uV8!S'g^3lQk*o.3`Z2DW[N-=2C\D)h[Q"3U8XdcmXD?#@s\lSX#7e(bq+M,qqW7(L>g5"e-9`E.5HXQca!
%0u^Yh/GW5S;,&:pGROsr0?0nur2Q5YhW-XtIf47N(#"b#(\-*,1k+0X5)kZ*Z5lD"gac_ug="i)[&apRY1Ongn>g^:ZF_]hj\QNG
%5"jjM3/6bi,ji`R-Zs`rLWFR=2nLX,D3-0,KR6&A(lFE6D>4fE[hngM;:sDf5^qg!+='ld^E/MF=NPuc?V!C!'JLQ`,`sq6O\0ii
%1Ql4#pgVO*FC$)iX.P1;#C![a1&&1&rb$=F1UW3#36GSjaQe;L*K%_p&?0Qb9JtnY!bV<TrFD;9W[YCTBdYdC",jCAB8APb8MsP!
%$Iclr^<ho$ja\H>7ais+kfM=Em-ghF"oLLUfXH"FG$;`+W'*p^qT&OiDks#b`MYF;dmjcfI6)d*2L+\FD_*igAqNHIo't6YIW^.@
%meD1Eob7$X:n$'AqWlPF^MFO3L\VHrXAd!'s5Dr213`0RZN&&?lgWr1hE[*HBZWW,fCKs)H&H55F5lMrf7a4$*S?N2*nEZ6hREQ0
%l2UK_J8_,P6LVd<nB`:[-XF:=>/_4Erk_s<o&^k4\&Mtjj1+9jSI^S(R5l3^:Mrn5LFD:@2BPi1Zo>$qdigUAEYX4'I`iiJCeE_6
%a3o8eI<qr09YRi5V4t6B<u"agFR!RC!4@&m*0.'skTa8t%op)6f*aM)EXpB/K4D//?-US)7:b5f\g_Kn%:9_I3T2+5F2[Nj/sAUn
%RUGq3":-99GRt1MrEi<"jnbe4dQXZK#omJ-GH!`J;sT$XQh.+B3F7g5VIVhYeCGG&*2*pLg5^9s#ZIi,jM<;4@K9"D-G7'LJ?nI`
%TK4qk&baKNB?`)n6_<A.kl1c/T;qa^@A&uaZ+ah%966KWZ)X-%(W*c,IQGg*^PT7-dKbD5RPYK<qB]Y?-4L#;q7:(GX,`@#NObE5
%"G6$;W5%,.=duFpoM_"[/6?Sn'L-H;PiNp+)`bjc+VD<'d)8hdm8Z.PJ,_M.3gUoLn#FC'P4MX)k7F.6#uR=HK.6V!+=EdLcTA#i
%4B4iTcR3V4hI(.[LF:!<e4;?=5UFsVD],-)h\#!76L,NC'XNITd"aY7;0S30LNOf(dg>t@$:Ue9l;0rd.04fQ@H_Ed.-gb?+b0D]
%S6k!^AQR2m8r*/^MS<i*k+iGX&V%5I"<@tsWXsd!)8K"5ZLdphb)YDsAt8Ju\^YXW(gT#l1?>1K*`:3D2@5E53B*3!SqF3lr=g!k
%+a1i-D0'6S^(P"$rj@Oc<bsOF?4?!JYRLCI5u#glIX>hq]GY;aeC/=:\>g=#nm+e-%*VWnU6-5Sk7YjYKuSE%Qn2;&#iU(uU2mE$
%%tNuQ^/[hIZ]N\tl>`14@`ck-#;h,NYW<T34K=s)b-+)!+_k"7/*_5BAWdgo]VtQ%[-WtLdNAb)/.lFXfCM'$<42?9l9*#cJ1id&
%$c>M/q[\bb+gC?1I$X)K=fPf[D`>)gWjk'gV4GM`3`"?ELrjT>P0!8-9g;[?R<TTAQX(DDiam3ZPQbY!U-cMm6<r_JFTc+pYLBd:
%2_EZ#=-n,Cdec!kqu+^K`.6rp-8?oKkg^hm`L&m9HBN\-.WF\bBq35s\aMh<Z+I&7o&lm(5<f[^gJ#QfHZk3#\;N2]2!aM]2YN^_
%*!-H7*qtt,N:2%V]\$?<T)Cr]Ys]UsRU8CN2pZ\VcR-;kC>(dY]@)Hs2C7XbYKl7KM3P*CNoeNL3CLei9KU(6m\:;HM?Us#3bo,)
%IK<iZ&LXEF@_5!fW,?ICoG]$8%CKU;q1XiplB$FS1lI>pVAd1ZpIe@bBB&h_6A)\-6A;7B6W+Z;%M5'&XqPWE+d%4H3trGc1L3T8
%nIRKlngY)*mlAgLg2p>m4BU_jCT".L?i=*"$6if)'YPWA7V8X86R^`!+48>5V[Te:;P9prH1(G<R"r^=2#tp:6f6i7X*RQ<S*@-D
%C,K)*V)"/Y!VO\@`aK.FWH(nQBMiU\BZJSZ.6!TFWVMJEN4K.d<E.cL?I?,]HA:ft75Ou>MT3g*)\gQl!C\ds7FPTnR^*Z&rdI;"
%SeXu5.@P6*RT%Pj0Qc!&n:mEVr]Cn2D,9UZXOYcZ:h(OeO@6cW1Z;+D%;rdK[DWZ76^FV5IZcYcjHt4d%6cu&IcmN*F"L*&%V>W7
%2^uk@W/"'A/&?Y=I%^EjnhB$e6r,gs%7l)BW,P.qfdH`f:nOft2&*ncX;ons(`3mrgnZVZGHp4'.>;*I(k',h7)Vo'0Lh8u*junS
%"pe@W"dsBpPlW<l>mH)NVhcgtmZ%@I'4si@XiS(.Tu92TBno^@BsYBhh^K`gDS2.L+Ca0gH^XUE,OkH27M=[89BhoJ%H:S0EaDLX
%;e2oq5B(VNeb8tQc-E;@nm"Hl<i4!1V(G(I`nEtd]bAE/jCuuk/_/;bd1/f0/81!g3sg%3L.<Q;*p-NSOX]uWk.>'bi!WM\n/-G%
%BrV9NePgYXahWU3"V#8*:cjnFm2#ObrO,0#.sVb=`Y+s)9ck.6'G-hJqGYJ[;&]m6O3O+^NjZI>WT'U&ksG#aK2=R6<+9p;U%$%r
%IJfLSqj!1:hg)-C2?&[:IK^Mj\234C%/"Yf18%%5]/gul_ZZu./3,bpTY^eYO*"g[XPg[gFc$dnl)qdNAT4fHMZ;amol&"uS\X<2
%=Y<Q!ILp4jU9T"I6uO7Z=O:]PWu`_=/b=q<Ic(UJpAJ:3iI-@_b+"[&B-Sk9<>Krfk(nuVX9W-*Lb<9gLgU*9JG8//oA]8cs8MT'
%hs`Q(nW-!Zs+D,no7h`TORb<5OKk3Y]`\c2grj^U+bEh=7TFCG7Fl+sCZFaNT>r9p_`BcG6c0ceKsV%mG88D7@+W]<_,:8]4/->7
%GGjEr[-LF"F_.(F[>@Bn6(O!]?c:1!W!sJoW@$a5Y8r6cWMrhMEV2*B0?tb:m+0C!a\TFP$:)KWr[j6R!N<!<B0g&FaV8TGHA<tD
%,\cAU=KZ-.3RYeWdtO6#<++/hM@`HTk1IgcQg^6aG"=.BPcL\sqjNlQ=4OC>3m*p'DcX/A@h+#"Y/cS]670rU"DJb7oeON5&VF!b
%%7<UL'R`C!7Bai1Snbh"3+Qr$dVO1fpiG7-FtTq]aL6S,4)6M==H%/7rrFBD:^*:leZoh(C95-C7W5G8Bj6SNbA)N]m6ede$:O-&
%]3^8s@D$a"2F>!>NP$rekFP?Y__`UK=_V%"m0U):\kACul7ONmVK+p!5[a&$k1"gcW0)brN<36g7NdO;Mjt%fEi]j%>4ei@1n1Fq
%7oFRnI1g*'XfA`WM>3ua,IHV07"X"3U3F67C[eQ`m;O];-?CdI:5)t4^nGOFDc3G;\4a*"kF>MK#8soR^Sm&-7e;s^(=G&J$7*YC
%b\J!BQ7c=@b]_!T5Go5h_[E<'6i5E?Q'CRaWkcJ\-kEm1T+<;nQ<7![n+3r>3JJb/(#5Q$>8/0,"hdOHG(rl@+:[7c6UrBeDuc("
%K*tn6EjaQ9nRZ]\%r]#]]YJG,XJVQ0#G+E-Go?6oFk9=(dE%n=`9T#2FLW,\<e"IXK;tI*<#"DW>`.=YT;)@CM#);biSd[/UuKa@
%d8?N=J]9+#,n4jsr!_t.%2Cr8-Rgg0=BDnOVXRJiLcT(f=p,S]#`-1Gi,6-9'c&Zr?pn:t)CD+gEmmB0)epdhmYWIX!!S(_3#P5&
%f+)ji.%.N/9RN899YRmXg03W:1=&"YgiQ6(FA-u21#lEW`,D8KbL]XJDi.$;Gi_bi9.d&9gpQZaD=9F?DWfiUdPrn?;k1W[6Ra&J
%OcB]`/o/dLNT2Ic)Kh8R98_);:H_N([CZcC$HM(2Oq,!lkSoZ''i?M0T>dS*`f<P@K>T^gPL0Cb:iIoKG`FnW>%hQ>`H,==FsG%9
%N/AI7+&b/78(NV#\431dMpM>K4nk;D+a)eQ?&lOIG\VV+@iU-#@`,:YSJK:!]!L]i=)h4iPsGmaGslsD#DCr'Zjp/?EPN)QkB(:]
%_<g:ea!>D26^RXpCL+C&*hihjM>:pV:GcNXcBn)Sg%FJQ7tI7@LR];B/fXlJ?[V7M%e!c+hNI]_FdB9Nl+6l5dNj]miW=hJ:qZ1(
%q>t+jX>3p`lKc8@SPn2-BMAGJ=YmA/PM%RE[e*\u[A>9XlD9f;M]$A"=iCD^"@Gt5i`):Fl%,Ut<`TW+LA=3OKc2LM6jr&)7U:jk
%\q;4'(LR%kj87o@EM#*dE2(Pkk:Q5,[-p3,iDIe#7\-!ZH=i;-n%,XM:9XQf]/OgJ,H*f4-j3hoaNnVM*mIR@<l2:Bl__D>.3Z)f
%Ph+R=J:PPIIli$XEDN8^Kr7KG1oTVFXQ(;e+sKj.nZgt.BKrM1[2IHu#oHPn/t500Kl)W1TR<;d(cRpV_edU$A@"q).Yr6iE_ql>
%p'3'ebG#B>QsUh>3BW=>!s(m)[eAFVCPI2`U#'9QLRfbE,k7tXQ0oF4](nY!lCs#kd//*OanW%d[iq-ueb\]L^VOIWmq59IajL"t
%<Uo&)$(mUf:3+G>:FZK?iSOYsam-;rj%pW8mDk@_[\B]s3#@V3U&tO5>9tV0H>!/>G(&1Q^mM`'=<1qYk_`!2!jRPh(EMdFO07`d
%/I&HrB&2"3R&`>Y.I9d7E)N]h-.f87YeOfWkMmPsDQFah/h2K;.`\]`4L!cX]1g\q(6&[gX?<fhs0+YjQ*;ip:BIJE3'X$jpo@7>
%g@TOAXFI;:0AFt;paeJ!aKjqO+tdpe8#u]ZBK#<QOPj'g;lMX5#DPqT6J=7b\U.%+cnS0k>W6n\N8Tu<p?_1&3<XfAIJJ97V$id;
%Q7eK<%kh8aX!9s/XE<mZn#;?C2WVudEH[`/KFD"$QgHK6)].PU8KhlkPY\Y2DrHS#-)d[mlr?_l,Msr!X8Zfg7hbN6Z@0iO[-_;R
%j'c=+AX-d=0,[^PJ&.OAdb-2jG"rh3p#0K8<,Gn=b0g`%SV+;3.$PmbMs+!<'ZD*4LfY@0."!01oB)TjeiC-;):^r6O46*:T-#fR
%!1Opd3,)0,jHJ3C+g2*A*]Z8h+`_O0S[Q@ra0j&%,U*mp5Y_q+/if.oV0EAlBSt>>M15<3L6L+eIAqGnbWcu,OP#^lmhLG4;aftU
%bu?O\,`I!Sbks)9?300'_+N0"ThP%P'WIRZNs[@1,@lMjc"S8)3df#Sl2>9K6kDjG89tkML0J=;_H7DQ>!CaTe#(^s.u-1Kp^lj]
%Of9*3X#_lqO=&UXG`?8?p6:IaVf&KK)Agr&_FL'=qm$?HC\h$'M=oIJN0GeOB^pDnF0@TSWrB-uOQhRd/P<%D-8@duPO65gA,+!k
%8j($^#[pc^HL6BLBD@fslM.<XJu(\N&+?%899JNGjqP!(I@,d`</B\InAWiQ#'38u\2i'bo2*,61K(_"YB.o],AWTjh0Ct[ipHF<
%#`'K3K99c+CAh+;q9;g5pB/6'25hg_Ubt4Yi`)8U_+4kK8hYX-E8T,NPAa1E4[hB'SVQ7h?ZPMhL,bF4):6mc$S&,S=XGK_W,@t^
%+VH%[=/Z#<?XWF/JbpV,ni@MG,iAtMPi,fcW>0as%9aQF4O!f$?iddMFNuO:VEQ"u!"A#XR7S=*`k5jup5AJ;Hf-QMPq0-bcf;X[
%ZL"Sa3>_I)^7AG*PH`6HX1KN;a39^X@CR[0G/oiDPe(PMWj*ZQGY8Z96-XM4@/*E+9.=5MYWEmY##/i!`DOFd%)?Ka5ndG,Fs0)N
%ITf1R5YKR(I7,G"k69pWp^Ub;M)[3qP@(=h>6@G$fU(&mXIP#0&_gR+6%>j8.A!#,JJ0UYdVTioZu#oRnI*SVCA++:Ht^r!1jJZG
%:'/&Zi\*qucu7LYeUTF/=&p2Z2,KI6*[!OE^O,p=C]0+Gp;MFW!:9?]``;Vfe[t]<4(6EIbKpsd*!ZVoi*:I"?][Lh.o+WN;5f_2
%Pe,3KR0^<+-[3oRV.d>^MbXYR$cKV<gn0IJ"4YinR-9NeC!Le,0So..%cZstD1F5j7-aX87!QQLih=C:Q@1q2oV^JQPo^N^Gk&%G
%[G1Z^+"Ne"9OXS"5Yl=?e&&=\0F`a@.hpBf-Cgj[j&pe>e34qcr(uaX@,e1L%"7#i8etSYX7^e5"M#@.,T6`DdP/!H:nK%9-as2G
%.ElLHJ,8aQ*!O=C5E$5(%m6?X.=Fk>\Q@0lcoNuqPYEK"5:2a;KK@b$3&ArU+Y(Ih(S.\SURMX2AMi)EqU&B3WtL@fDM1..LRMaY
%Q>`SeKNJl"i+sVV&.\c(Lam9@e4r*#'LCLg[;(Q/9j1ssSKU;\6_P&8iP,s6+/<5>L<s8,_BPRNU]>.eY0VdS(uq4D3]rf8k4>/a
%?[+P!`CasR2:dSTL3NXd@Ud)q"TKS5#3SgDmf@"tL]UDg:MWI?:_m=\I&GX]L>*7`C@:kWFu\sd6$/C0fCTs0!%q-Md1(E_%W76m
%T=ke-)eE%oBp-"CF`Upte8>:",UJpFRBZ&59ngu2YY29DMYctE]Pcj>a?-Eb<mAk!&?^<g4-S8n=`e&OH7nZs*_Y'0%S1@Oa;u70
%WsU.%X$h_8cV\nlffmD;O'!h5TN"eG\g)RnA4SP+@pJ4Qlu?'YQu`g`I7:HoNh*NN=)3A]oV\M')[i.>*ICB*p.,jm<3I4-Y5jeb
%a`b%)9n%V:.7.OJ&XsK8]21%6XNIeG>pYo*kRQW4RkuS9**7F[G#-YaTh)ec!i1OGnS&8]3j/JCK`Uk%ELOefSC=(r%*p?erJaF4
%<W'N/I]?0B&L7AZ<P#meM."Y6j8;rcEb6Cm)Nkh0JJO/_Zlm1>%]YOOpl"a$c%5"\dlV"3l-44(<LIKueIu\$]lCFhPjeQerALZ7
%(83a-WWdi/)/k26(7L.M)H0+].(-0Y)dD;<\+XT,1QUf!68Aaid<S_h*K1p)juAM?e</R66Z/E[]\CsM<`,Ch>i0Qu=Ep*IbK%u2
%Wah83`AujtlgX/PXBC&E\?)i=,kc*>(@'E"4tBJF<3nMRMO^T?_Y*(:_>q"i%biIIC.uUom=r)XE5ag7Mj_Ac6I^1*KfU(;3p(h#
%ot9X]eG&)RDI&hKqE3"e_Nn4!V$I.)/dUVV)*JRm-;t#feDluAGf&SsXtAe=_WR;C:;kFZe`cl!]E3TJk4miM;FV.fJ;]tP"V_j#
%A[W`5-ej,Gam$@+,<^/@i^.VJadE`%!Y;"mg`k'5mF.5HOp6YrlWe(E.Os-fT)K]i7mSK%-Ijf4"M'PM(RlfccFEs80[&%;M0<85
%EgS9hV3$*8A4o)fNpPU*MS#k&ThH[4B#N.(Xsa)]i\pB8"@/Nd=a`i1!j<?G?ZkgJ[^5gQ>+:<R@-t0h;Fr?Q[p]W+A'a#L8ZlW*
%kZ=EpM,9Xe/h0DOGE=FRZil%V$/,N*5IF3LC,G1T6[:-$2Q.8NAJil+X&(/1I>F0&;Os@a61f&<^M4be)m"$hQ*X[poi$,biHSPa
%<@Q!YQS+D@ICM(TSU-qt3fOb-[29IA"6jj#,K--<iRj#8.KHrKNT?1Si_Y'Vj!n:_Q!boR.d'Jl31j[m"R.\Ifh1JWJKN/JQce"#
%*CY,o"0@h&0&q?sPg>4DCP7MFPZag,gU<Ib(<MJqqL%<Z6XA9?U(`(,-FH:pjNI.lLB(@RN:13S$j(dgHB!V=+9Dq9N3@BB%Ju9@
%LYs`ee[)6W:`Lc=C9#:02/Fs74aH4\+2#GjH7t6SeS5&^3.!+<r+t>B/o&k6;_c+ke9#bhKMP`O'hMC4.UbblJ7+Qt6g`)O'[fEN
%r.j_8I^hSU)T/`oO])70g(O#3h2'-\P!^=oo1_h_65H0#a=20o<2[4#I`G@5nkIA)%-;dDjVJ<B6GLj!$@a.=V+If@Ufrhl?N=pR
%jO6_HZ(Bg5g#j3nZ;92.VoPhp'np=)c8G=n&YF8KF"6NUmrY/Z=astFRi%Bb7KN-M<OQdR;$pbI.-?gY)V+=#.:f9IccIA,9^s_F
%@s]eegKN%@YjV@)fmWG2#_Na[h1OEtdNlWq`S5T:>E5VpQM6.!F+mD5)Ie/1MSMP)r%^LLpk4](($%U;O!^`cZdu$l28=#AV1_ed
%+Rc-^dq!3=q'KY4:l`m($Gt8F;^4sE]o`le,-1oXs+cYEG?q!&ku;8"?%NfR.'A=o)]iRD8k[P:"_f%4B#KK#'Uc8l?],M8I<]bc
%LKQ=fRK[+ae@Y\KcH7Qi)HiCa+siW?J:/]2/W8X?bE>^iD4S8fd3o4R'r](_W93a%FjiQT0?WuS,s:Is;'DnMi:L_A5(7^;nqX7)
%#s6j)RUW'":]pqCZMEYlKUAD:1.hi$:ZW2,O.]79:$G*ZGf#61M%uKfbm/2FQ3a]CW':_1qb6L?M2II:^H1H*-$(j@dMlJEP!*m>
%C/c&Pbl$\_aW[D*:0B\KB/Y0r]'>Ge+B@I-K&T,e6EoRXGI/LPe@HZ#8n\N0TL'L<M6bk-,hE+IM"SUL-1j5u5O"8:6l$(fS]Z58
%aGPE;-sRrkY$DS7UZR=CX(1:%=OLb4Z5f>P1/bT,e@@;?U(C.t6,j#L!dgmiXJ!]l$#rk$$gVC6,eQ^/<*Vs_'H]@9J>qcVq)S:$
%B$-a(R_9:X4MlnTh\Ob@c/gd0<e#1"*)t#j6B9`8SBY!/Xth`CVM44:,/NGQ[jG^m!"FSI#LSh?/#?-kQ2jCT9=[[SM-[D.8E<`m
%)!c(rmZP'G"gLL:37R?.h_1cd9L5%Pf[&a=Oc_+d7I(2??+5/IcZqQb@^Ark!r:ZLphGd)!@JcdIkt<Y:M@Ch\uu[c.)/4\Xj^"4
%d$#T0HqXTd-,bX?[Ml!.WtI/QlrC'Q4=1cRlBp=>/6n8#*NkRU&#.*@4%4b6;ogU(e2blFDFa<*@pk2M[YVRM.22P_EYh*O)(!?-
%O,?(blAQb?`Z/2C9JK_,1kS&S8/\FbGF&pf79.HnFQ9pt"Z#gna_JAmUS;KK=")T4ece*b2KOr:/k]1/(-`Okn!$ka787KK@u4HB
%Y985.Q;5:$dX/=_(0/hf&o2:B$B$':!Q.r,HW.Q8DNRJr&9Vq:T,mp8>t)Lu0s&Kc;u$`(30VmX#o-1s)t3.dX7AHf+M@W*_:e-'
%n#"j)@+qeRo9Mb_r_9I1;fL2b<%M+M"@%9W_niA.592^>!>XEfLaSJ3Z3Wb"Q=TA;h3C^'#;Cj8O:$!H_Et%Q2.kU(!5p.C"_*ft
%>9[g>Nt+ToS&74-cVeKcU6Jo@TsRgR\u^ldJQ@N@9')#3[dEKk+D4?*(DSX'+MrV00GMd\YsNrHD,IPoF:p/6@5Q:5&u?696eVX;
%Z/pEJ8b4d3C\*!`A]ontK0\IrHXH-iO$AK+,H4U:gf[L"X?#c?!kEEXTH(*BL8BbZ9":tG<pJC$<!oh-%jrYc`V%cf/E/!=7oA`M
%:ARKs03.'?'DAdQn'lT7EFOG(5/VN*74JO]PY1'qA:%B"25_k/-fV$(Q<a!.DF'S0JWD/!:rnbo7+JDR6Y,:S10$\Q.7?"<M-4?b
%\ZgY,'+u`Ma&"ik)k].`\P^kn&q^13P7AF'8.;Ai18u1M6+c``Ilghp<HD>s6^t^'egJn%"6Bo!9%3>B^-*$]<$$=Hc_F<%D1!oe
%rbbIQehe4WFe^7NP;h28Gb#bn;oOda+H,BL-3M>^/>Zm_8q(P3gb*';C5:rr:'V#0-oO.9-k+L":u`WGW3I(:^(f)p<X%$f>=#Yi
%6+*mHW;3Nfg.ak]r0i40%h83t[qVdidnoG$1fV"Be9n6hk*(O70/Z`*@1AK$!.oYrb<f0-=5e^d_.qP/)8i5o9)hCH]h*me3A,,U
%#G6.ca.Gm_TLoH7f0d6V01qt<<a\:rm=Ll@knS[MAXG=Gr7*%$%[VeiB#DYs<\0*-hLa4lI*LB3Xnt4jV\.Z>1Y-N:>p22#m\f/!
%FYRG8o]@@l&4n0J=;]U`.X]:@e\=PibOkPD,r).q^0R\IHdp8@YW1]%L\T@Pd:_XfZ8t$Rdc]TD^o+rm1Q^-)hTb&D\P'Y=+g.L:
%TS]P50sdA('iTLUA/L\K&]E0"#a8hnaoRuP@N$"h"N%#?'4W+k9N;lNq[efN0i\SGQC\K(BSFHp66UMN4=oZFZ?pQ3nXAfTXLj11
%r"*T=<!9gN;WatmZFPkn:q(X5"fWa)ea5E5igOK3/<^VlPQ_9C`)2T&+Z>*pi-\%-cAJ99Z7/k^A5u5rL^;d7-nOHmj2@n[Q!nAV
%ZZr(;^HVmb?IK.@(!D2rLj(K7#U[HFe8!@F:n.*h:[YS^OM)'qmD%EA?)k#</]d2OrT/IB<[@]pLo.;#P](FG0"(f#,)JO;V1ej<
%gP`QlW8n^=pq'>]/-V!\aI<D:4XM_GJc`bInD_/Hp[-?HLBoPg]#=eIJ&1=.GQ\`,.gB*<1s7]l#qu;P0SPbN&<B+32o1FLrnJ=i
%lSJgLU06V+QrR:[F+_eN<ift<dE_@+88ofc#T$!q1IJP82V];O8I7^+.>JkI+WO)CAM>AH+KEUh.Pt"7*"-_p!*46O>39YA7W?3g
%/eN[#\T"S2)hjDTe?,D3cn)23qeWH`W8LXh.>JTla`P$12aDp^I5DcCPt!/&kaHEU>Qr>OA.:r6$E8C+h#NQg^r.HIKP.E.7lF6Z
%\7^#j"<eaj7:TGk#O7e?qQnS/7$6SoND<f1gPG_K\@g$]7%p0=j8Udlg.]H9AU#DAGF.JD@O@5T'0@07g`6LiU9GUp"htrP53.47
%lNUb^q%<HB_D0efY:&n[N5&R5jn5jV0[,etHh;iO8&p;3J-H/D30p$B&APQ'%]"R_r(u'rV$jd?O>6i59#[BWjVtGb0,DhL8%fH)
%<s/@t[4TXs>t.Oc^-Z+.ltfk0e/8'E&WUSYUjWU^i+Z51o%o6FJi,?tJXZ;$fJJL:3lej+mQuZ?*\(Nq!0<$`;k>0EZBF!1,mh3u
%%)B^q5i<:b1XUTEeiS%VF-$RS>T!<:\Vb?VA^%iSgZI&cqSu8-7hX5ER]=3!<@?pmMWZBKGJ/+m.Slj&QJ2k"V'USI>;9pCT8_e%
%)#9!4NWK[7^`]P)<f8HT`f'mY01"6Mg$Yl4UlP-%%^N.&66Mi!X/P:kq;M.'^HifdHSq'*[Zn3Mh:UQTA8A'T5$-uj_P1=]MH9uP
%8U6--Qr>c:YU>*K!l/]EQ^%)Y::?]Gr\U`\hPk+DKK%k$;F&o2qeLUfOOYklMKCc'.nKd#W^sgU(;O1TcIL'JO=Eua\I5JB_,O`N
%Zl+rC-"9&B1G8ne-q?7a.ahutDELIY9X2E.7$25-'ic"RYptSu5Vd[-hi>h1_UX.p9`FLQE$?ZUM6mnOjF5`4HUnGqX_"]p-DeS@
%e9E1A03/YS5%aV]0U1aG'7I7.2q9ndP('\eT`i@XdSBS3WWR%IM>m#&VCG4$/bN&b>srf9hKcX+qa-b&W#[NDrZE>*'D^qsKQp&<
%;it>E9n\O[=lbW&(P91DZ1;?<Is]YpY)RJ#$NWk5eEB6Gcq[5Z_+:2Z8(RTd*=I9:>;-jGU8D;S85UE<),QR#&L=N38k^Fin0E]Y
%a6%E8jWXS5A#s8s,]5'&S@bY)&%RPjgO++e-)<"q1$/:<g5K.G4f!sOrkn,76D?H[p"gki'Eoc]^(B-*@6`[&MDtA+EX\^97*O))
%pk[T<nlh:nSQ\!'(35j;8\XsgofCTPlk&#kUmISp3*s]5]0%&87OTl=jm:'nM,pH%:rV,9`%2"nD5E`c@q=&KEL1E"aRC[X]VSSK
%jf/l/4@@(mU;"=tKc:dsX$pL)d%6:;$3<$I4)%-7/%H#t]":m6JneSnIn9AN9\lLDkh_XDW5AMP6c<HEI:PlO/9OC.U.\,'j(YEN
%gI&ogi$u262BTVS8b]oHF4$53*?r"h:QtD*&E)a=h(m5G-]ZP_YNJ$rLmggFT(naD;hZO9rskcn$1i:rnsk$WAVASAl),rh9.?Zj
%GZbaXbt.b5BkOr8EV@NNMrdW*TpQDU4>S.b8D3i'S"`fB$M&s'%TcY_SerIm8\UI@(CDX;Ys(fF=`YomQrURi3e+7M&NtaJW`'"q
%]H)=DmhninT#^=B1pfD9o$e[E^%D5Lcf`Q6nWS4r-H--]"h$?r^T$43PtqXghh5%YU^Y**2^sB'(S;YMhrujWpAa(D>C`o0a!H!/
%&>`cNGnBjIiaGbJG!YK8h9s]'O$gj7>]a-i;2;cI6OUDYqjD80^BN<NFGHS5p048neO:!T5D82C><Y/or=H(R!"<>OFf9+(Is=?I
%LU=[P3I(LaA/>^\Xl#l"ZH]??hRn;B\"s$^Z/7Ul%-PN\f5IY%8dgf4c0Mje&\U[e?G?Y3n`"-oYMVqd.&\?]_<\S/M<Ul?$sp]F
%>2g;$eg`jgKa@*oa6U3202X#9]RGbaL!AQ#laL77f+Duboim#[81O5V,bU&Ne)_*cnG4`lTXt$cMUubU[?(c6TZuf3aP739NPXqi
%2J)W8f8n[C'`?8B\!j="kD';Ih]fu_'mL>fXXm:1/+#gm2ou3DIGMPbCkU<VdBn2t?L4\1nj.a<YMZm6C"+GD4i3nq7V*@H^eGOo
%[7DUa,c%oVIZ*jYm,LS$[qJU'g,iWU7E]GN]Ni*ukGkg$F$@5L^g^;+^!AY4S#dp"L>@.R(*9M3+r@F):L#KbV=e%e?IOnaDo'E[
%L;GlQ58J6:RuN?XO4S6(QXK=ZYpXj5dA_*VqQY=WM#oW>++mh`mRnp65=D7OA'UtE6TE>uZt]ISL\+]b4!n:K7@)`rUMn)"P+#,K
%\!(Q)I[btG1^C`^YMpZ3b+%j*Wb,(Q"tG7!4A)K>p?"[,LQ:VE(Yjr"Dc'PXN-(ifH`pr=bH,6oNRmPiaZSmVEmlcA`p4F%-Js(H
%Sofp@qn-,3#C-3u&R^2L]REMunlg]u`9YJ.A4jduf5K'WH]<6^IaU0u^GW3eoZ]/9C%1sn*>t=HEqB,ND;mn9[!k',F3r3heW8a4
%jr3Q)Zhc7s]th/pX.KnR2o5o&^DA!hD-F*F/i`cCFh-JMU2apnS!!&!SEtd\$SBEXgVmuNj7q)ClXPEcr:)X9Fi,$9+.j#,h1mp/
%Ii=oO.1D5$#(*@ZmGdnN=K>Y%hH9b2OA]od@/3/Hg)`#Sr(UVBJh:u+r*^&bZ+IH$j:;Woln5[)pj;P=h_`u8S`B2;b/UZ*=4RW:
%T?O#MV\J)3Dr,VY>_IU.ojYe4#N6a?gF>)%H:@VL#&$:&*JAouJeI38pr@n:'8-PHh\*N,"s]]6rj7E@9`_d"rj;.6At]jrT<172
%ltjPR(E`N+KDh$Cjjp2qiT``(L\+gWrPO9W%oG3<d3eeO9h4q>4:(tK*o?-Ipr@S>)0cbml-i)8Ij=kYG_g+r,5agXbUpF5s(!u/
%1.,u5In81"`ipT`PM%M:o#:CuibQ;Ce:(@#CMPcU+$CJ@Q87Z@;tO(lc)b*4%hHZE2P`DGg_p,=m6=O[1]AP4o@Q0!-q_#oWl2G(
%rb9Kc46C/QA"8nAWQk49fhLn7qOmc8]'CZp!_)o4[m6@d:&4PCF2,P[HD:=A<HN1X-kFHbbc>"+;#Xm0kp[.c5=B)U3,^_:+4;C@
%5u@RV<0dQk3WH=dEgq2ir32tFJ(rK/ir$]-(b(8.7JXCu`gR;&7et)I.KR:4s"G[&$@,MJ@7D6f2E/cC/4,X!4=L7!"'gG$EW.Q+
%k^'bGS+CQT9<*\K#Nq]f?ZV6EcG(0*r3`O#Ia114V(#C&k5:FjABqF(q8\uKi7^!Mhh(l:*7:WD3<'i,\TZt,S:;02&dF.Os-UZl
%bs;6cr*+C\a7f,D$cIb@-;AIY]m/M>Nl\tmo+,]cSQ`djrlLP37ba_glpk2t&(3]<l/HisPQ&\.%_=cdrZMl^r^$C9aNXnWUjkp@
%`,Uq=@?IHT(;V?rdo?mPgdqI,:)1]SUjn%&eiN5pIou<u*9&p*5GUfs;6idn\=EZ.([9h8U&%7WoAepDmo7q\>_,H[M0QY;UTHZ#
%''HajBLqO"Dg!u5WNM6hE\o[GbF>YIP>e/6L>0@XE[ko42#r"kNcn6n.D4pbHF/=WJ]\0MHF+oZqbtgp4$VG]!JL2j-V->'P8%Q=
%(t*B`%j>fY$u#i/`7jll8:*(%(IM@Ydo"$3*HhWLYBIEn[8&I/*W,Up9n8sK@$DTO<-r5b@ADd81It49gbN9cROcDkS/m(WDSd?=
%3!5@)!+bAbW)S1e#6Z=oZUNHR$Q<tl:$T["@\bB8bB;g+W-!,W@3r4SQA;UnnU(gF%u=2]'T+6RX,FTA_*g_P3#RrN`'gZ(Ft_pZ
%QY=genfm?;Fm6uA'XA9QhLU?C<"iE$kS'E@?$Z<p?6]47Rh]NkBcQdIPlIJTF)i!GA1q(_MfE8'#X-G#ABk6T!"CO1Y)#S0D23jD
%rpBBsr"&:lSIPZIq#'W9+)TGG[+$L[(I-Van7J)X2rleR-M,YtnEat?ZtV@G0XQWXD&0]cD$gsHURa"Q61DTk9l,tf8eNsY6'!oq
%!V@,7mG^X*9\J4o^RH<^WZRc]GrJ%Cm&JV5nDHf`nZcFaj8R$qBT2*mS*48OUJ8s`Sp#heWJDl.U6HK/AonZX\Mt7S+)NL?2)cE#
%@NI9U(@B"l+)O@&>W2W3k!rq69dY;YUJ9,BY<+u&UlqRO(s^Be2T6)8/tUukS!9?o:%m^>j!o2[I)D"'8[Aqk$O/g6Y;15;>l89J
%F.O\&Y;SW!,e9dY`BfU*&j&$\E;#)1c(ZcrIPc^Nd?9D0NA[$XQ$W%s0uV*f"42ZBc'./qK-+sQg(Y^\k!sbQZ![+;rh]O+PO9$"
%F#.W][+U7_X?/WbU9nt16AZeDn*5d6hAO`Y]N-tdMAXdC!)s'2):FnT)Ph'XL:#)!&2EIhON,.YZ,FVC`o7;BYQmJJ6tMaj,P]Z>
%hsW.AoYceK;)W18GiqSd&:uJiT*7Ft:S#D',5BP4:rm&&HgmfpNGI56H2ut#g*RNcSKNnt>O*WB&jb6QC5a).E>,-BDut)uH4pS4
%cu.R,%tZXa;#Tm<+)MXr4A;jjr+N$L2gE"1d?sJ=YPd<KRtJ*/N"%CgZq5,Tdb;5$UEMd4$D&^:UJ9q[<;1@p8"9)5g79@GLRd[@
%IWuF"]i]eL<@Rr=8sXZOVE2Bbd5VDiarN*`1hNhe'hj2<7mf!f-,K$IBIFJiVADIc[.I4Jj$FFfW+cpqh<<6gB5?R9`=tHRU=qQf
%T'4R(UHN5U6'$b(9kr7*dA*rY6CS-?RWS"\K.q/kUN&Z+k!&"V[,REsHo=,+RlSO*rLcZE@P,;JkgB1Z>`ZJ*L?[+4(o*,D0VV(T
%MHD+DMVn&>C`$ASRiP3jhofS$*4Agu5kW-W2@5KcDqNIi)PL:l45(tJ=#S7aAk-@]eg&-t&3JSk37Q3anR+kVYQgM+A[A/&:-5O.
%_;_cRdH4F+4Jkm?B^D$#gHO9;SsJ80h&-/RaO-<iT]7Uag7h2<$KiU'>>'5)E?dukd3rHnHGbbd:o(:P]Sdhj.smpfJf\ck\l%J_
%:63CnRUAc)4W;&X**[E?hW3ILJ!1iFL'ImC+\PIE^(b#leV[kCUJ4;*<ni#+_2^G<-%3F78"2mtMp8kA8"3H`N>cSLZ_R&PVFL7q
%45)0)n:M'BltF<R<u%k)N?)lP"*3Iq;%l$[6>+suH*F%qRaJW"h2NFlWI7NF2gR;5>QXb/oOoo?pT(aM^VME";0oT@*U?lp7(MR0
%O@JR\LsP2`n?C&&&t1%.\<+6p`Sd56=3>qh)(.38#=07pF`hp?UeTK0e0j3!84/Vo\,&CP`^<fW_3Za*Zmi_Z&^"#\BeR3do*lXs
%aqWM+cB*c7jV^]lN)hLrS@AGAhQ$rH?c^#E6eWO&4N.ag6Q0n%$H7pGCVmd5@q8$P`C7gnbE)?BMjrg&:T7;(%o(`P*UII`;``ct
%U[cLEMW.*c`j^r[:I1#\#aBIJ<_O&=cQi,QeaWO,P,!:Ba'3R@:I/@Vk29sJ1o'H,dCG#ff=aX34ke(jnmX>e+19ELP[an2U$0mK
%R:KXQTLXA.N6a^\O#BGk\TuLZ4W;a,C+MIZU`i@:Cc;WOZrg-"[[sj<=aK\Rp--I881@LpKFqCqVXW@TC!nq+fXrZ]\Ep^t1dmJ'
%\'$KY@Rtk9'd%oP6eYubLK[@-(t'0oZW0,80r-DZ`ZiF4;l"EQ'[sp;MDS)&hG%SYTLe*&XuZZ;+\aX\ooQa%dSP^IN)45X+Ur,p
%#O4U;B#)\#W`)cj]f>P!)<?"-_$^q9SY8oh61U<aD(W?6Q5`&WU8nK#D18j5YR!S![fgEVYiIl3)M=PZH+"%-?;/AZmuC<FL^P!n
%5;=HYdsSA<=P%:8-A"(SM(tN4&fL;`jp0nUUea^b6(g%Kaf9+A0MS491'.==XHU*)%njD@C;:Ob<g?:DM*7(tk-2W-+VH%Dl<Q0#
%4A1>RVa`0Wbm1uqX%)Jj`0M[GaJmikeU:Lj<8GWi-'Z3\!T;i9^iX7R<;W66EVLHQLol<d6IYI;<*Sg/i(d=a'(qKg<F)(Xn@nEM
%#.B/AoCLq,9AjHG3kAZrJO.46N2XV5[W"jh@?5`u%\nZlAL%D)FuT1b]-_)GB"[]m-s;3?o;4rL4nA1%a-9CA]?R?2BJ+ET'+E)T
%(ksZ[-j:P!()LebRMcS"_&Q$2hRJJB&T%joc,_LLR;!12;S+HsbXW=qMia1&B37gH#965EIZU<FnZ@&0,AO*?WENe5cLrGWq4nIi
%`QGG3p-".'9crA:M#YM/r_,Z1fdU?eT_(3'&S4c@8.Ghh3=@Jua3Q)),:B4AoskcmCFe([l:2cr-:5S\Fo#h8S4Mr[V)G!ga>*d^
%fOmnMLAoCY1G<tL`f7uiW/dO.*0%I_WX8@_aXAM'D)JcChV3=!7oM=b>QfmrV(7qS<cYUs)#45A^R9gF5p9ZhU^f@.%m%dWi#X@$
%XAZJLpR=K,f;MrD0IY2KCa1,u%<"AkV>sR7`e\QM5hXDL#1C4;`Qk>AcG=snfuJo7[O7e5k1iFN<k"`a@9ZF6':R]WE>6Njn#)=_
%e"f'Xp1=(LCFo]O%gNQ,U*^?]qp9X*8L7On8\6PR)>2m>$sjC1>sC7+d=_W'd1ekR>I^LhePI-2O"NPJ*D%G4X_'LaG_a%;S*R^$
%Fdm,bKU`jBi=Kd"<n8""$2,[r#XF\cR>0f#?ue;uJ9#%o4fEO<NXm?dMWme4qJF/D*;js%V#K?)[M:glQhqA^.]&gC#>]DfDU<8n
%[]',H=?o-&=.LS\PL/)Pl&ZC^ZQ(\C\Er5I,$9u'c\k/G&l!oEg']JN5^'&Zd5>C`b?%Q9N<S8h0?Md&^#jGNT=TaiHLi)<CRaC5
%T==.,0Qkhm[E%]Jm'QYF$DaZ%m8N([RAPM?K2je<Q%0c4GMb8Vqk1m6X!EF,+:6O&P?60:/ZuaO3\;gJ,DS7K*?l``?.DG";&+W>
%r,D&/?;UNPs54D(ND#&RK`p%@Rr%9=(J.d$*DuR5\1W]@'XfX47EpE=bucI5>HCq4XXqOcp)/:5G_H%X0!O!^,+fS4n8L/']825t
%]m[Dt[\,Reo+%/=p:4*rhoKl:kat;:aglpsC"^.>`.1M/8Y57Q=^5sm_IHbbo5SAWc1)LRr.bbY?TF-4o5B&F']!)aQ.20,+Yc%Q
%?2uLaAHqr6@iLaLd>Us9J?__j&!E'5*$99=1/<UN-'EaT,F.-1k'2j`\sTRGYCh+_HLbZ:4k6sKIVLP/;gm4mldAT#]Cf+u#PtEK
%X+"ef5LiCkV-!NXj4EqP]]l>$J$+7#><esdT>";eNLP*kQZfAnWh$r.b-E2rP1Quke-3]YO),^pM3A?p`/Tk?+;IK8GE<.(r(7EH
%r/'cR-m07,M.l,R+"O/9_!fUcrC$*9Kj7hT2MW(UMRb8TOKFlbWC*6$*N/II@LHAFRg7\(gSh=!)%Ai>ng'p0;Y@ETf2Io<WgLn_
%`"/@0+c?)$Z9fTK%bX>9NJIZ1o)?+HHCN_Cm&Gq/dYs@N,54L?7%YJ%.dBQP8RDn`7QmTs[9&#=2&TmZQO$h%7reK'E>=F!*TLFQ
%IShR$_p8[=`/:;fj;$DLG)Q/-9gi]"(?Jlo%45')MlcLnf$qO0e3%"^Kr09eVT.OEiT_LN<Mc)-dYb@=#*()c\D[&0"+f\tY_2V'
%!f5lA2-=s><MnJe?(u<'U`U]160mZ:k=Yr[hGMn:T*g[Ll^J82#cg77SWl*A;H4&VhPtYUHbMlmfDQk.7X!c&Q+.SW\PF][KO5b`
%lkp-NlWPd*4IL6G:NQ01ChRnT4;ja33Gh<;k#OV,PcCrU7>`Q:1#3j'59rUcWNA7OnJld\q0^eD!Z.;WPbK02B,g>s0D8SME2bOZ
%*R.8i!81'M`8[6(b^T<A04cD3L]c5Thd>77kIs+4Jo&k3XKtGp5fg\#J`'@DOSnP+S0]P#?olLKhU;P:khbkG^;&pYk<\tQ<+eE4
%S9"Vs`ni@i@?p&slT-_5e(4ra2q\"I0@)ibK.6MCJ_QKL^<PM1-@A.0qM)\U]_>;*s'kFE3BkqnH*d5Q2POI9NP0h1C%T^-O-4JN
%V2N$:MORr7gl8uh,I6UD6/R_q2_Y2"hp9Q3.(o0GK>fXks2Ekk(p407ZMFCnVBNp#j6rU>-FMk\j<Z-ci.JdOVS#HQmem#'LFnuL
%0_kOmc-,8/k3lACM'+6k#(Q'N%Xn@hn40:olPG+:3b/STGUMunDm$Z#-Ucn=1T$/+:#I\V?$>1t^gG!^%M]e2^[aadHf+c"W"3%s
%Dts2E>[,(/DZ9V]U43bD#R-3g7?hVjLW$&lU-\6m8-NpT;3G4Eh!HI9eLcAT9rUQ\MS,c`&6,uFKtc1T5<CE=S9j>5?CMfC:OXb+
%lK,#q'a<GROpm-Edr7sPbfMO;#XMMINhV"\1=bg"r<hGh*Lb]hrJD7M26hH(61lcDE*^-TkL?b%qhI,Cr<cXIs)3$]dqVHp>k\<u
%LV&t6?poHn/F=r*$l@uY4eS&WSm&FnHXoUSN;pTWS;>CJ]N*eQIf0Jm+OHV,[jj0YX0Noo,L.02Ie*2B%<.?!r8?t_gYPTNGC/iQ
%itZ%[k+qBWGa_#API@(n5kIjZr<O',d\]goIf*$,3!O._0,8)76edYp*B0.F[N?PZ@C#p/mDk]$W3TuKqjDVnpdPbIIf,;/9T->$
%:j;Q'%4a?>eXb'[mH6L)"Ngsd5EGN<e#;kG`TDBP%%iTfrJVCgc.oU6dtMt0//bPAXP[Sod*hW/hoVD1abl'>Jq/<4@[!t4ac`o2
%qajFGQ/YAm9dj(sPdVZ,:h6`a,fKs%aR3\TqlqnJ`q:Ur-?Vjj!+:mtj&_6DQ'SkN*o.)WOL:^+-'#$\U$[V*.uN#D[_K`KpP^@,
%Y%t*uA<bb=Z*E@8iNS`OfN<4+l[CC-ojaIUfcPJ(Q",`!D#'5F!MO\f.(@<D3K@PBckOAB)IB&;rQarn(N,/>^E^33E#DX/IN79+
%^-%^i+//KWr()IKT6k'GM\"Bf\3H"_2l-CGSYYR7=o3K!,=`T'[@_.N:4m/2[(h`',O'*6V#AAAF3MRjV#C)\AgT'2dXI]^78bO.
%dXJhi?9]r,g<UH/;"`R!8Gh*#`;''Lm;MIu.&T1!qlqJi55UYQ*tbS,2!9Lu^X9f8L9r%l)[VrNc@5C3MM7>%T*\>AngA'7>l?ue
%G0AR"a4GTnFUMhHrKonakJ>it7Ai:Gp7lP/?XT_skO07,S!<l_3/,Pp.GknPs(QIfT3e$=A\Timj`;69GhXYDF`E<%`Q<UUFh3';
%FY][8hgK6^9"0ecs,0pUEn`#>F`m7rH"uO(.:4]'ri;B`TOPKj[@a.6&YZG9rB.i9A`N/*-3oQp\Gp"]HILf:)_uqu\f]nKf(g1)
%eGW'.$rN(K#B`6=.NQ9EK=W.RCglT%jR1&5dni;E\beC0bqSlJ22l1\P>o;Z1._2p(]-Bt/!b(V+!ut'=bt4*:X&d])32Qe5C^bM
%:rC<a^WEaBb7aQU%E@?RH8aX3'DH!JM`gsG`;NdP.s$a[EBj0N\P`CD&GMAeJ5eOm\K;"@/SZh&M>Ikq%ZUT2K=J\$,d^e8IUium
%.XbO\I\&VtMJs4&o?6&Y0VnQtj]/n*Q@6MVBl_tsE.4uH0HoLCCfLBpGrZ=/5PZH^>b)!5Q+3G$'3ufKMn'oU2jMqKPI\GZ=XDP!
%*6e@TpL^OfAa[T_9%W[Ngj_%OT,js^30)odFR\^JOH\GC;Er@PcdNjR&T3!q#c8r?(KujuMu3Jfd44X*Yf:VPmV?9HiehM3qXFlO
%&dg=?rpW.0j&(iqkeFXr)b6sebqLAPo'V!hpgmnENofKF_gK\;k-#1WJ#k_c1kq<ks5LbB_haS4X1l/GS$ZFr9$9><dXZ(EAtp]S
%7e1D-9$OVY&$$;J^VQi%R!"E5fu#`j0`Xe9"k^pgk+pogi?U9+6Ier2QGn_f/d)8al'c/)j6/+Ag"k">,?$0MT!6U,,EG'".4?;9
%cT"qqkicQ-7MD=_Ng9^W$Q4.D%+$,hlZ<I]"13Uf"#S6]R6['u,m02CaZ8R#TQ6K)7MePn<*oIZL_P0u>!VZK0caT$1+,TaJiAj+
%"&G4rSD^N.R4t/$aQ+@7'2@p>1D.IM7$E%Q'nqk&)73tG`0HW:\td\J<&,j$ZS^_p`^4H7E8:eq]gGV]k6-\ng0g3tHGPLkg0g4!
%g;&n*qSK%H9c37GLsasoB8eb<Ul9Juih.FLjG[\C>4>=`d>7'HN@um3BR"lTj?aMsACr0RltFC(L,@VWL,@VYb3<^\;;u6;)+,<Z
%3c8&pbn(+s['@R1NOG2tNkVaZ:WOO3WSp+19g]q\o)m6;;-IV+mc0%9E'KO[K*3J>FYl!/c,k<@\>*Js.^=b#*pldL[ZO(DlGD"l
%Q9EqFNuFM<SLE3C4><(61b]['[aR_km3m2@ktM(ia&r7a?%kPtG(25;gT`@8Bq1'mmOcS?%LT2]Ak:k!1FpWkNCSqmpfloQL`;u&
%o,R^n%+5W@4E>%D.&;FV0TqO=+\e0+qL4Pt]7?DMaY#G%dMMC?a\KDqdnLltj[C$l&4mXVO:!]0DjdCAK>Q]pYZ0&$jlC?B8\9d'
%_AFkoZqF(RO&'lG(GP<8HJ7MV+d@.J<Gr2?!>S5<ClHeTS,R7QV8jMF22!UO.p?>#3EV1DEujQcF-13gMS04]8'*_A%L=Q:424$Y
%R-p+6Y6;]j"_NTb5\<.#LRCrm`E>jt/31GSOdduZ?"g2_SH>B)*qR9^6;3$G+=^`Nn?[(PNSgNK['Gc5V+$7n$5g;2JX2J,7]9j\
%XIMb,s%H$0%jjG3S90Nc3&r2*,*LH1Ip>HkSmSjIN1_oI5N4X\064j!7U8gqj'[`01t>SL>8.Z"peKCub5=V3c0-`\.e4<%7Y$p(
%d,?/k_F?$D@m;Orb;^e_?J-f4J-/3fMPap7!I<SH*!.]Y<VA)oXIT*&Q&;OqJdnubNl!*hgU&":EmWrW3=P/V.2,+Pg+G3CU?Rn>
%##>1?I#)U)1l]A^"r>mhoT3T2kb&b8"*J/-#ZuN`Mc6[-=SWR@`b9rbUpOAl(^DZ+mb^]JO"H'AC#L$^M>`q@V3%/+9K).dUG.0%
%qJ7U2Fq32R9S`nRFI`THN9_Lf9YdNVP]`WIV6(kJQ]YH(ECj'k+ULsU9is&9d^H(l1lWAI=NNfm?-1P^2+Eb]+b`!l[`nRk=E+oE
%@BE'8q($89]#JmeVt)W%'OO/kMV4%Q/#P4(Ob1iL0fp*m&eqS!_==YF-\HHRjBBV"!IG@K'd`'5W&:P\<C\SY&Wd^J!?PBd9q-DO
%Z]0e*#;,R9AM?-q5g4iI'e<oP.GFpgmXm401S#22>:@,CWAn5ub_r5W;rdaS(gP,:+.^5HNQMe2#V/kPiaS])o7"b-FCZGJHs@IB
%1uDEOc!u&p1,:VZChlnL6J75EbXd_]#Ea[0O?G*:KYXYQ.gZj)\5=PqMRU\6o,MetO:[).[_n@=CLgOGV18dbkS<aIG:@qZ^VcqW
%AUA+o;*M9X.pl`!2?e2UqBCNU9,=ko5t=TfDc0H(Ff[-=jj)2jkH2dgcai[ASaBE=H$ja,g8b:Is,[a5P)GLGQphHfJEXVLf*X]"
%&0ELjfH/f?fBBf^B=q26pQHRI8r-gR+'fpF1!b>?\gXR3Ko)#Xb#0+`:lt%JH:[7>]RCl?VSVFmf$j`6BSF1IT?\MoCcTRi3,c:!
%dI)olkUVOC/s'Y4gK!h(<SQql?GpX+%aH0!@EdJsa89"tegpZ3jP1)6LCcf<"0tb%73Zj'\]@YjO;5!6N6i\#P1t,l0Ac[<KVD3I
%VT6ps1g5;>k@UB+4].HLDHCi-AQr/b<ZQT-5;JuPG<-9,o0*;\I:hGj1"?]5F@JU\LE4W[Cl`=4Oe%<$ISENciMkg"Tt@t1Z1*B.
%:qjB&f*M*@Li_[`2.@]qc!BZ_.-+Pn(kNhkb,6WD<[30;OC"/0Uc/rb?U/p$d>-3[b7N:edh&Pl")2]AQZi;.[H9@8!YYMq57`m3
%KnD[9J>f,Qg_*c6>QC/$K/XQ<KIp:sB1tnZ#Q"5+dX:Tf2D=6r6Nf;:,6j=Vgh!bpKO8lsG]>hI"3!W6l><p0T.IgF=Ikikbr[sM
%;,5a\iOXEj@5VL:mEPUPMOuV1Dm(hd,r&gkPsTn8Al,KK^'>$%8MHcU>'sg/,p"+B9cr]Ln`8W<0Bf>'"&QKb`M*m$Ao&5JO7of%
%\45j+rZF]PkiT.l;(5c)0QKJ$<bAP(TP\(BIuRbk9?Xglfn%1Z"-Fk69U"fc"O\<*WoYN.Bj&muMj!1SEk(had`r&FCac;s:pU&P
%mVn/S48e&1-P!Ni,(c+(7=\<^Q1/o_<AdU1X[RJ@r%4OTkm6kX1.eE&oQ8tDk9WQ.RmV?L9*cC_oq99glA[:`d.8@/CdlJ]eWk3O
%:m@o609Ef%F:1VtB*Be.17/;EK(rfJj#&1R/dkl2q>^j7UX0F<5ZUO$mb*DMUbf[B1\fTg*/5G?%bh,H30$.gm>F;TN,J;m;,!Dr
%TVC!Gg;qrPpF@1H#++i<pX6Cn3-pVU+joZN@g>tE>GsP-Lka41KfsIIGg7)IkXhFG!+?a83<BD-E4.6"1Jo=$cm:C*<Ft4+d0jcZ
%=QY.T*V/>4/WaqQ-G37#rB;9<r9eea]W)B+C)HTY;U(HITI4f&!ZqINnKCkT3c_4A6No%Mr[oAjPc2ReZEtO4"OBZ;>4eI&.<5Us
%adp]c3>.W%:kp,^.V!G5):-.@<qf5pI[\X(j3nk)B87d'[.3p_3lVr/@3f$kN>_dJU`,"'c[VHPdhnHJ6(TMQ8*ieM$AV'>XDj#r
%dOFCmTq3CcF25:O!l_T0rXloFOlYCZi_'n#`&'IMaWT/E@6EuAOnC$h![@BZm,0>8-0YdWnOt2@P88Rt7sktke6GqpPm3+/W#/AC
%J1E<OGGo]GAKnBB(J3u/j6<Y'I=h(1(DD25dL;kF%EbZ+#r,0]L%g#r#`;#U%XQ9?4@GYF+59ZNX4L%D96ob5EkDJb!"Fb4h]-Nr
%<BEsLK!tg8=qkjYd*^1l\QR#YIE4b?I&R;RP^KX2&IW;cF:isg+4"U#A!h+$f4E^+[B/,SY@ZN"EEmC@_`#g&\mO,e-3jkl<Fb"-
%\-<u)V.>#Bf"/q6XN`t4pK6'rG&auDd#qp&R$30LQ7pu,0$*bbKKbu)*VjG\RV2<5=P*3#=P!t$>eZUr)ED$gIVD;,0YHldKJIrn
%fV1G#^m^2+^t=?ds(l(2kAl&10HsPX!`\LVNq_.<gPCD]k:b3&1WluW7YXuRHF"#rHbKo)LH(hCCE@3NCpEl6*P^BLCXc!)XWN^2
%&_?pMN:t,G2Q,f/k\21p(eYI]O9cl_!jbbL/K46^'LZ3&)\dSBS`S&$OW@nLGfLKof[2)bcF+<q(ES%?m>XFN?lhI4oHBtN6WDPR
%66!J>f_s6YDs`-VW%>leT9u9.P"[e.g;+24$m_Z^IAS4>ej_'`U^j;(c75W'V^=S@O%7-k#9"Gh`lC4"*0Iee/.TVM3eG<i,WCR:
%d/8D1SZ+Ef4-KGASV@J?2R;9qMjWqdnIYnE3">.?Gg1/gFFA0]7TMeGXT9md^).@Qm`=V-o)V)s42MAPh(Po*p[*^_"=2]oBAnPL
%$'t"QW(l##1lL#:PJrYO7E$NT[,?ZRlmXF0>'Z>42lmeRDFTUqm,Ii6?F7dXS&5d<JBs+W%-e=kYW1Y#$Ulj*BqYkGTe(4\Q,f,!
%XX2TPd27aCM`Ob/TuHmXfuF0UnTr3FeDXkekTQ2k,tE+'U+8Q2(i.Q<9Qs2ZP.E;]Y$.V2jhcgljGFt-U?G-4\lgfP/6Gd!E"'*O
%cU+=Y4=*7tL_$Ks=$)p'k$ZPkTZYhK01QbKMqp:#+R+jAE!IK2TE@';D.5-FX"S(=2uPWb]G]Y;I'\ehE\c8Fb(_Z3,b0ddmC"n1
%(cJBh@]\-?SPbXLA6VrHp%W'%e5`IT`LIiIC&)TI(M%jk$pL7K*VO5W(ru9ff[f]Lf[^IM>e\l\)EF5OIUtmO/X]$(PAMnM_a]?#
%mBIPh!0X*OCKmTd2^-=$[KRT0Am8;n`Qbh,RQWlfO(XQl[S71V`:RWof(OIDedcX[2V'e7aN7]].iZ2HE[D1@WNmXtJm#HbY`9n,
%!W-g)$H02[3$`2a`-t1'Z=9qh##]0<)sHK:k^I8bae00;gmprf(9iE<hb>&?`)E%oH+E;$@oP8+\r'D[g-hQ+"(<8SF`Fo``u5)8
%.c:0VMa9sf2=2;A;s5&c7UXl6#ti\Qjme=-l@C-T]8;%TRm>I/8Z)>E@TU'4"\BIKAt018m^OF3',42?T,SXK(b%6H;JZt(81fb-
%('GS_\:g='Jr5Ob08Q:=64<?*W$niDj9+rYK[eZkei6r;n?:oYIApDilhqOi/bG_6\Ltt^2QAfZp.C5^n7WRGaNIJ:/F[0;$[(FI
%Kd/G;\!Ko=R`5JSjs<\8JmO#kbh@m9"ICfOOUb-dc7m^>^-tEs)%o!H$l^@[jU,?=el(as+5VA&$q&fo+e2rY2!%W074,MNIIKQX
%S#k?bD.(Z:7L?COGtd^k&`7b`:Ff(-@T/d0Dt%e-C!3INj"$>/iIEu4N-YmJnR:*ZR35Gf&VHPYAdq3QXlB0td`.Z"W->:qEi3f#
%?W%h.Kp`lkD2>LWDB[J/o13@Sp,6TLq)Ab._)OR"<kSAS@mkdXh0HB"b$b$lcl;cN"$irq?E/\hhmkMgVB3oe$rSV8=V?4#%oD\R
%GhYc@`4(`_mUY?I`Kh3-a_)lBEOo3E-K[VrUHi$)nQ.&&*G^H<"l`esLt=QIG`T>+&AF^6U_RVR6)?UBnmb\:H&>M1L1RmK8A7C)
%W?es!,BjPUPKp2\7>XCe0nAZ5%8e<;@&S)*L1h&f`i(qa=Bj'X@=*Y92LO&GBIS4k<<a3aU9s2T`q0IP$`IN7Gn+*q=WH!@,!+bj
%4Egt':af(U4F`"/V'CUU5+M7m!Mpe$OMt^h1A*?;Bh%cscM%VT,%A]Zj_<fDmeCgeWJVH>3$?Zt#PT$uqSnH;YJekSAbX'Iho)?Z
%iZj`>@0afQ0ImaH)/r&CB<mN[&?BHh3-^+Fmn08tL*3=^Ug?O7'beldKF1RLntg;@Qo]A/,E;(-:Va'-R^HZCR:r<\i.\6Fl<Uge
%LE>tD8g>M2D<SH?001k5CcXB&799Xmm,3Y/"O;WE(d(E',J<8]o8C(^Dn[hW*H-(s]LW+5(Y0S-'4`#G:B=<u-d]>uEB+_b%((:?
%@7s/\kVk79VQB3fa/%D=6QnSS8F4UU%j.-dHIKnScUB)'WntM6':r%WT+(RXorZfMPCfsU=PiTWf`i%eF04`LD*b0JTI`D=@P%mh
%T%e_KZ%2sX4Amk/i'[cZ6WDd=lt_^RDP*^=1-f?S$8I\<>u%4Ccs<GGOa7%HUm!_Mg(;b=,(3P(?*sF)0?\j[aTiFN_f[$m=(2"p
%ZpTY_q,P;o!(?U;2lHO"IM"%Gor_Z>Y&k8Cb0m&WW"8qsVH'O>H'7Ie2R]k*eZG'DCd*g78>tq2`AcX!I*G8\.<mX8e-V(&>U^jr
%jf1TY#4cW$UiRBf`Sg5/%<]!6inA7Y1mnWlDWsbKY1*p'Y9DPJZc7`uIr`rWn)!^(!r:XX8g]\@DR*Ie#<c2Ln3'Y5i:1?*-Qer0
%F#@X+<`lgBFnMCe(\^EJN+/FP#XMLap$E>PFmpd8K])e8Wi)2FS#+iJLc>/g;->cM`LQNZs1u#F.-j6O!&A\!5Pr\*>"#9B=!,U=
%T^Hh@D1m5Iki2WsS\nNcT0</AojiG@i?6n3[g611l84>G89kT8jfEnmP,\:+8.1lj+aQ\98a_F\!j8G1+J+Q#07lK8P"jU7qqDBs
%o9RO6",QI+bb!aIV*d;<RpNkE*6Sb>n^&B`Ya@KnD"8^"#C_;s_6:d@H`+c25pnUl,SUh:+08I?`Jo4%Ac^DS*4=!GU!5,%h9</W
%T4XLN/A'-?4P<1#rVggoiun!%O%faK1:Y?=7@9r5WKE15X/6Nn7!1bTS8OE8FO3l_1s,_%)RU^%Mc>Vn%]$B5!gsWWOZ1X8COMk:
%b<G:u9!8c++n7d[4U+]JF-OSJ?oi1Jm"\Gc(K_gckZH5NOd]*;S/DSGXC,@P^_C=.eWB&:+HI+mKQa^'$V<kVP*r_1Nu^W..>#pD
%"Y]Oi[O2FH@l-6K.-t^RVl2J(2KC_+rQ9R6h=`nX*m#%s;6HK9!B#%b&d/;#2@pVU,=c?PDF&N62&[0*+KZBiPsKu*6R;8PO_Y3E
%*7K/=\'sc8H[S+YWG_iT?aqF;hP"A2N.abspQTpD7!24u%$p8!JqU(JLH_60Y3V7B+eY'o*+OLCRHW96LbB_RbG^Red)T^Y`k(.;
%WP#/cJq>p6/Dpi3AC9=VVK\J.Z7(<k85r.)p`ambICSU<jbTRAfm:aXVT;cD_ndg$],<=o#sutX13\"O,WXV>jJ#.SI)j)=ku]$&
%Y3/]'Hu2+emC3\&4!'L':,[ulg$TVmFemY5P9UW!dp,WnBXu1t&aBYcZlQ236Xpm!1@@u>/"4M'ERW=oP`)bdjq<=-ZZj_Y_Qcp<
%P5J,P3]C/U*:eNY0).O\28/c-\Wfr(Y&2dPT_?m?:-k3DN'?-?RePI-aTf#[b["VUTlPe<4=(a`l$k+0j//B,GnEsgIJVK"4A1qe
%[[YMQ!co_'-,6a<Sm=G8oPo2l^IU0^0/&`[&gD?rp@h7\X^!@Y'%rG7<B:D\'$m<,c27og88Q[[,gSB3d2JIt4@5#5:,;JJ#9ce1
%q(59);)fF3lK-2)j2Y#1Vl)8oOT/fK0bSqsqJdS%?Tu%"rS&h)lu2%anrQe5d>d`j)'dc)D0(/WqBRN6igQ$VQ$aFtIg,XZa?4l/
%mVcO:<jP$/%@J*`m;Imfp!QBgAfK)[D*Hc6pU;9eRe5anrOj&m/)=QZVrdn1]3+fOfk(#Wb:qCt?&#Ton1orFJ<s]qjjPoaO_G^!
%!*dVt#P_aj?g@]Y-m>VH!A:=X+K'd55p:Fe,T:A:@#A@6EV4:$1%I_peEPRg'.jIAZu-lAMa"h>!t;X67%OkJ!*`:udio0]EHd=s
%<Z5<]rD-.U0T?/C3D[sgRs?U=LnhZ`6DegL_B'YnI]:#mHEXanbPAOd?I#_pfXT]FIl)1$e,@F4T6>\R&4qQ'HG>hPhqaLnCXM8/
%g,iED*`JN65llh>rH*R6BK3dC<<q15:-3RFo=+@BTbA<,Ch]2j#X5LkGXuDY[)*KU+n@]W@,<&fXL,,<;l9WBoGKr0S?"0P$VZ;Q
%>jC`t??GE^>[WBVA`[2S"([C!NDD,ndP>XPe?uVElPFW1M)CYDH^s3J]">bF]0Mt4c&Cg,]pT754>L($b]gV5&.S<7n"(=4TW=8%
%!X"&<Oo\J@\R""`XaFM?.l$53WC0cd,-1Ih2'e0j-V#-e<p6YLUX+.41G9TO7tiGIh_=Xl2lhL/KE:9G"^,?m*T#7>YFOP&&fkq^
%8RrMk/hr[Q9PNDK&n=(j,DbRsRpR&"(h8(cY&T<g67'5@eg35QEIP`)(4>m:C0Y3b0utg=E/?6fo@*KQ^Q==[E6ZPA:MQt>4s#!&
%,j*rnBJF$K48QY,Am-T$(hT+'LIhg9p](\")G%^]$4\2>Y6VG94V<>Z7%CF<I#YN#."6\!-S30qSNs=tHl%fY;&E<l,P#4aXtK8n
%L"0l%YTP<S3<neN&B$-44Z;KZ+pk*"6#uTEQtc92oY*S]mt1+1j>.u]1/O6<&R:,+1Q`fO5Jp)c.2WYH/JKcO78Zmd7i=35^_(:2
%X?[KV6N#7fDHjnnIf-Ip$D5Z)6#KH(EsD1Zl%tuu6M"h$1T/T?@229j#i(f?:\t8tl!'8tg-q`TcJrWM?T(f48fE(:8qB)FP2UiA
%^K6A)J<(/X6$T,6;o/9*1!<3$$pWYRioT[[)&L!i]52'QbHF1p^5>!O;(+_]W%/9BSglb/CQOn@)!(SM1,pjUER8<cF?G?N^oV+/
%IRdkm*9A%_fYlX6671/0-uD/!nk6!\-<(S-@S63HIp#U3Yn5FSG"M^>T^<0;'B/=aK@U$V`SPG:1Hkjs4u.Eu9R.2f"lp-R!?Nn>
%3J!T4p*fB^Y]1s2#f?dCiNrUGJ9J[&'=0iip:g_p1209X.]oi9OXJsU1+Q-rmK/`G)YS&#Ko^fNEb)aLSnhYa[`c!MQf,B$+%Lr2
%"su_7n3KV5=Fd$T]KjpXanbKL!R2QS=Z\#gIKWnoTXjt->d#8rFI9+7A&\diOI+nu%(!U&`T?-S%n[$SLW@V7QW%Z4qpRL:!c=E3
%8&NA4CMaV.qWFcR+Zp\P#Se-$<Cl=LMa?9fX'XWaOeQ)XRK5D[7u$[hd:h#eP&pQj^h!E*Kuhi%qtkcLb^5<Sr5t$=Jn:&5;R?2A
%8;Vr2N>EMe$*qW&0hWo9S%tI$@RmaiapGK1\ePiqR'/GQ*6='*gAi<s*F@(.?ZVK7\bH!]qfp947>C6t2m7Cr!bfTJooi33?'qi7
%(Dp!I6M81R49Z(ZB>6H&pfZP>MfG<u^IMBsVt1T4Vl!<+DR`+91/0$22VqA?^2(#=,OZ*1YMR_pN;']piB?.#NfVe2M_OWM_Kj=O
%$=L2-o'ZA-nQCcLSK.(HE=J*+qrU'G#YIP56(dRDTH"V*K@PBRL)k^T\rh98C"t(Tm<"J[*BsWDKr5!=\k`\gmaD5mqZJYrq%V/S
%4O*Zh5D?*u?*l#cOZuqZ'a=BRJAEF.5A/i_7qEo"2i_;+YJpDJN2JgXh1uc%>JOn`f1ce[fI2nhGFD!h%9hN2Ia+M0^5lKhL\S1+
%'bJ#9cbnd#rWO>R*]6S]oBDup@a4\m1X&[g:Zc;t;lXloC*BH9$d;ndC=fTM_`:pXcg^5P!*A@(Xj1G3T)gPp&IM([(P<a4H-X#\
%ED5Zf0k,_t,".<^ns4!"+HYg-["JB00TH6$N!A@q0JP#!]NXM^(jDCC1-jV(am1KE?IqMEP%PcuaRKN"iu19pdL4h=gLHP$f^:*K
%?i(kf+P@-6)af?r(ZR;Bj?h9%."B:?9_nd(bU-6\CCCoC&?14<"u%#YOma=B,+-F"lS/Ud$aKPFNIes6:HOoajeb-LX=u>7[SLS\
%G[Ft55q4?!q><[Rj`HS5EMR[\eM+9RO=NA`<3EZ;&oL6*LPO[SAYbS9L>*Nc].n^Yg1t\Oi9foOaPU#G3;pbbYh_aR,$Clsq##7%
%:)1i'1WASF><Ka,MFA50%gQ("-^K>&^9(l*s']kdJ;MDNI4f"#^Wd-DZ*E_ugPiOS[:Y`/eZ&ANg$uTkT#PE/0V#X38V19$?f5%1
%a>]Ekq7`<6Y9aUt`m+f&fg&S:OguI4iC*#N5/FetbZi?"Bsq]@YgouZY0N)4S]>u[KV9m@\"#D/)ASI=Z06[_d0OYj8NFNec%D@C
%-*XeTf5-$#Kg\;%a*flS6F(>AT>N=t=Nb`d(LgXs"V/R6AS;-:m^kI0+<inuYe3!I$%>WnH111C0#k/&UGe-T6E.ASD_9!J%;H/=
%_*e<1WE'bSH6IGg$WP/mh.h2YX$u&NYJ(mpqV:'((QSXIRf$+R"#82nqS"1X+?V.W>SX?.LUm\C#\=?='ASMg%pBO-P;nO!Q5Xm3
%;V\iQ5.7GA\GL>T,9[MpYtJ)=.^slh,1"75g<8[30>ZrhPVl43,rZ$<=_+VG_%p^%^Fm8(5LLlcUKmOO&Z0%VPALt?EQMg[!NKYK
%5Yao+@Sm+Ednu`&q;hlY!V&bH+s]F]&/1^?T^Bp2s6?1BBFD3-LHGa]3B%NA+]9)g!`V0&#@C$\B.OBtTpF=8G!.])!@f3@neb[X
%<!HJKWWh,%bSdnn5;I)sY]8MZq5jQi)GM/Y7W)PlcZD*H%U[b5NM;J.AFA@d&FT5%M1c)EKIJ./p5VpDmX!595>1?4om6s.=![GQ
%'<"Fcn$.D/jdIa=Ca'ZT2NbLLE;$U@D0k[_g5d%,gaRZ\IKeC."rj7W+-3fhGO-Kl60+F:Y>[!i:XW+LiCR@-j>[]G@9Bg+i8Y.q
%3*M2>/-u>X7"I`/)81l'`,*WSaCI0rHVcqZUBP_GITFMs;:hsm+_Ffe^p,E/XU=ackHf/SKO.t,*-qJBnIPZhchVe"ro*U4n,N.<
%O5GD5!8m^tpO@SbY<RL9+7J+cq"(-Vn^$+mjk]>$++?JW_Roh1ros-s+5d%m^]*lc]A&tXrD3Fq";f;j^A6pC^\Oe"s6Tac:&IB!~>
%AI9_PrivateDataEnd
